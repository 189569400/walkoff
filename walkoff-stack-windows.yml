# WALKOFF Stack file for Windows.
# Currently the proper bootloader only supports Linux, support for other OSes will come at a later date.
# In the meantime, you will need to manually edit this file to modify the Walkoff stack.

version: '3.5'

services:

  # WALKOFF Resources - third-party dependencies

  resource_registry:
    image: registry:2
    networks:
      - walkoff_default
    deploy:
      placement:
        constraints: [node.role==manager]
    ports:
      - 5000:5000
#    The commented lines are needed to enable auth on the custom registry
#    environment:
#      - REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
#      - REGISTRY_HTTP_TLS_KEY: /certs/domain.key
#      - REGISTRY_AUTH: htpasswd
#      - REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
#      - REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    volumes:
      - ./data/registry:/var/lib/registry
#      - ./data/config.yml:/etc/docker/registry/config.yml
#      - /var/lib/boot2docker:/certs
#      - /var/lib/boot2docker/auth:/auth

  resource_redis:
    image: "redis"
    networks:
      - walkoff_default
    command: redis-server --port 6379
#    volumes:
#      - /path/to/persistent/dir/redis:/data

  resource_postgres:
    image: "postgres"
    networks:
      - walkoff_default
    environment:
      - "POSTGRES_USER=walkoff"
      - "POSTGRES_PASSWORD=walkoff"
    deploy:
      placement:
        constraints: [node.role==manager]
    volumes:
      - walkoff_pgdata:/var/lib/postgresql/data

  resource_portainer:
    image: "portainer/portainer"
    networks:
      - walkoff_default
    deploy:
      placement:
        constraints: [node.role==manager]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data

  resource_nginx:
    depends_on:
      - core_api_gateway
    image: bitnami/nginx:latest
    ports:
      - 8080:8080
    #    - 8081:8081 # Uncomment for unsecure HTTP access to core_api_gateway
    volumes:
      - ./nginx/walkoff.conf:/opt/bitnami/nginx/conf/server_blocks/walkoff.conf:ro
      - ./nginx/cert.pem:/opt/bitnami/nginx/conf/cert.pem:ro
      - ./nginx/key.pem:/opt/bitnami/nginx/conf/key.pem:ro


  # WALKOFF Core components - application containers

  core_api_gateway:
    build:
      context: ./
      dockerfile: ./api_gateway/Dockerfile
    configs:
    - common_env.yml
    depends_on:
    - resource_redis
    - resource_postgres
    image: 127.0.0.1:5000/api_gateway:latest
    networks:
    - walkoff_default
    secrets:
    - walkoff_encryption_key

  core_umpire:
    build:
      context: ./
      dockerfile: umpire/Dockerfile
    command: python -m umpire.umpire
    configs:
    - common_env.yml
    depends_on:
    - resource_redis
    - resource_registry
    - core_api_gateway
    deploy:
      placement:
        constraints:
        - node.role==manager
    image: 127.0.0.1:5000/umpire:latest
    networks:
    - walkoff_default
    secrets:
    - walkoff_encryption_key
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./apps:/app/apps

  core_worker:
    build:
      context: ./
      dockerfile: ./worker/Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/worker:latest


  # Walkoff Apps - application containers

  app_hello_world:
    build:
      context: apps/hello_world/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_hello_world:1.0.0

  app_hive:
    build:
      context: apps/hive/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_hive:1.0.0

  app_ip_addr_utils:
    build:
      context: apps/ip_addr_utils/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_ip_addr_utils:1.0.0

  app_nmap:
    build:
      context: apps/nmap/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_nmap:1.0.0

  app_power_shell:
    build:
      context: apps/power_shell/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_power_shell:1.0.0

  app_sdk:
    build:
      context: ./
      dockerfile: ./app_sdk/Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_sdk:latest

  app_ssh:
    build:
      context: apps/ssh/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_ssh:1.0.0

  app_walk_off:
    build:
      context: apps/walk_off/1.0.0
      dockerfile: Dockerfile
    configs:
    - common_env.yml
    secrets:
    - walkoff_encryption_key
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: none
    image: 127.0.0.1:5000/walkoff_app_walk_off:1.0.0


configs:
  common_env.yml:
    file: .\data\config.yml

networks:
  walkoff_default:
    attachable: true
    driver: overlay
    name: walkoff_default

secrets:
  walkoff_encryption_key:
    external: true

volumes:
  walkoff_pgdata:
    external: true