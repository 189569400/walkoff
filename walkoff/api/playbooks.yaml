/api/playbooks:
  get:
    tags:
      - Playbooks
    summary: Read all playbooks
    description: ''
    operationId: walkoff.server.endpoints.playbooks.get_playbooks
    produces:
      - application/json
    parameters:
      - in: query
        name: full
        type: boolean
        required: false
    responses:
      200:
        description: Success
        schema:
          type: array
          items:
            $ref: '#/definitions/Playbook'
  put:
    tags:
      - Playbooks
    summary: Create a playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.create_playbook
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The playbook object to be created
        required: true
        schema:
          $ref: '#/definitions/CreatePlaybook'
    responses:
      201:
        description: Object created
        schema:
          $ref: '#/definitions/Playbook'
      462:
        description: Object exists
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid input error.
        schema:
          $ref: '#/definitions/Error'
  post:
    tags:
      - Playbooks
    summary: Update a playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.update_playbook
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: Fields of the playbook object to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdatePlaybook'
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Playbook'
      461:
        description: Playbook does not exist.
        schema:
          $ref: '#/definitions/Error'
      462:
        description: Playbook already exists.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}:
  parameters:
    - name: playbook_id
      in: path
      description: The ID that needs to be fetched.
      required: true
      type: integer
  get:
    tags:
      - Playbooks
    summary: Read a playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.read_playbook
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Playbook'
      461:
        description: Object does not exist.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid input error.
        schema:
          $ref: '#/definitions/Error'
  delete:
    tags:
      - Playbooks
    summary: Delete a playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.delete_playbook
    produces:
      - application/json
    responses:
      200:
        description: Success
      461:
        description: Playbook does not exist.
        schema:
          $ref: '#/definitions/Error'
      515:
        description: I/O error.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/copy:
  post:
    tags:
      - Playbooks
    summary: Copy a playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.copy_playbook
    parameters:
      - name: playbook_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - in: body
        name: body
        description: New playbook name (defaults to <Current_Name>_Copy)
        required: false
        schema:
          type: object
          properties:
            playbook_name:
              type: string
    consumes:
      - application/json
    produces:
      - application/json
    responses:
      201:
        description: Playbook created
        schema:
          $ref: '#/definitions/Playbook'
      461:
        description: Playbook does not exist.
        schema:
          $ref: '#/definitions/Error'
      462:
        description: Playbook already exists.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid input error.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows:
  parameters:
    - name: playbook_id
      in: path
      description: 'The ID that needs to be fetched. '
      required: true
      type: integer
  get:
    tags:
      - Playbooks
    summary: Read all workflows in playbook
    description: ''
    operationId: walkoff.server.endpoints.playbooks.get_workflows
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: array
          description: The JSON representation of all the workflows for the playbook
          items:
            $ref: '#/definitions/Workflow'
      461:
        description: Playbook does not exist.
        schema:
          $ref: '#/definitions/Error'
  put:
    tags:
      - Workflows
    summary: Create a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.create_workflow
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The workflow object to be created
        required: true
        schema:
          $ref: '#/definitions/CreateWorkflow'
    responses:
      201:
        description: Workflow created.
        schema:
          $ref: '#/definitions/Workflow'
      461:
        description: Playbook does not exist.
        schema:
          $ref: '#/definitions/Error'
      462:
        description: Workflow already exists.
        schema:
          $ref: '#/definitions/Error'
  post:
    tags:
      - Workflows
    summary: Update a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.update_workflow
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The fields of the workflow object to be updated
        required: true
        schema:
          $ref: '#/definitions/Workflow'
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflow]
          properties:
            workflow:
              $ref: '#/definitions/Workflow'
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid input error.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows/{workflow_id}:
  parameters:
  - name: playbook_id
    in: path
    description: The ID that needs to be fetched.
    required: true
    type: integer
  - name: workflow_id
    in: path
    description: 'The ID that needs to be fetched. '
    required: true
    type: integer
  get:
    tags:
      - Workflows
    summary: Read a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.read_workflow
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Workflow'
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Element not found, or malformed JSON.
        schema:
          $ref: '#/definitions/Error'
  delete:
    tags:
      - Workflows
    summary: Delete a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.delete_workflow
    produces:
      - application/json
    responses:
      200:
        description: Success
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows/{workflow_id}/copy:
  post:
    tags:
      - Workflows
    summary: Copy a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.copy_workflow
    parameters:
      - name: playbook_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - name: workflow_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - in: body
        name: body
        description: The new playbook and/or workflow name
        required: false
        schema:
          $ref: '#/definitions/CopyWorkflow'
    consumes:
      - application/json
    produces:
      - application/json
    responses:
      201:
        description: Workflow copied.
        schema:
          $ref: '#/definitions/Workflow'
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'
      462:
        description: Workflow already exists.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows/{workflow_id}/execute:
  post:
    tags:
      - Workflows
    summary: Execute a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.execute_workflow
    parameters:
      - name: playbook_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - name: workflow_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - name: body
        in: body
        schema:
          type: object
          properties:
            start:
              description: The ID of the starting action
              type: integer
            arguments:
              type: array
              items:
                $ref: '#/definitions/Argument'
    consumes:
      - application/json
    produces:
      - application/json
    responses:
      202:
        description: Success asynchronous.
        schema:
          $ref: '#/definitions/WorkflowId'
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid input error.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows/{workflow_id}/pause:
  post:
    tags:
      - Workflows
    summary: Pause a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.pause_workflow
    parameters:
      - name: playbook_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - name: workflow_id
        in: path
        description: 'The ID that needs to be fetched. '
        required: true
        type: integer
      - name: id
        in: body
        required: true
        schema:
          $ref: '#/definitions/WorkflowId'
    consumes:
      - application/json
    produces:
      - application/json
    responses:
      200:
        description: Success
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'

/api/playbooks/{playbook_id}/workflows/{workflow_id}/resume:
  post:
    tags:
      - Workflows
    summary: Resume a workflow
    description: ''
    operationId: walkoff.server.endpoints.playbooks.resume_workflow
    parameters:
      - name: playbook_id
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: integer
      - name: workflow_id
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: integer
      - name: id
        in: body
        required: true
        schema:
          $ref: '#/definitions/WorkflowId'
    consumes:
      - application/json
    produces:
      - application/json
    responses:
      200:
        description: Success
      461:
        description: Playbook or workflow does not exist.
        schema:
          $ref: '#/definitions/Error'
      463:
        description: Invalid UUID.
        schema:
          $ref: '#/definitions/Error'
