/api/messages:
  get:
    tags:
      - Messages
    summary: Gets a user's messages
    description: Gets all the messages for a given user. User is given by JWT
    operationId: walkoff.server.endpoints.messages.get_all_messages
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: array
          description: A list of messages
          items:
            $ref: '#/definitions/MessageSummary'

/api/messages/{action}:
  parameters:
    - name: action
      in: path
      description: The action to take on multiple messages
      required: true
      type: string
      enum: [read, unread, delete]
  post:
    tags:
      - Messages
    summary: Acts on a user's messages
    operationId: walkoff.server.endpoints.messages.act_on_messages
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        description: The Message IDs to act on
        required: true
        schema:
          type: object
          required: [ids]
          properties:
            ids:
              type: array
              items:
                type: integer
                minimum: 1
    responses:
      200:
        description: Success
        schema:
          type: string
          enum: [Success]
      461:
        description: Action is invalid or User doesn't exist
        schema:
          $ref: "#/definitions/Error"

/api/messages/{message_id}:
  parameters:
    - name: message_id
      in: path
      description: The action to take on multiple messages
      required: true
      type: integer
      minimum: 1
  get:
    tags:
      - Messages
    summary: Get a message
    operationId: walkoff.server.endpoints.messages.get_message
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Message'
      403:
        description: User does not have access to message
        schema:
          $ref: '#/definitions/Error'
      461:
        description: Message doesn't exist
        schema:
          $ref: "#/definitions/Error"

/api/notifications:
  get:
    tags:
      - Messages
    summary: Get all notifications
    operationId: walkoff.server.endpoints.messages.get_recent_notifications
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/MessageSummary'
