/api/roles:
  get:
    tags:
      - Roles
    summary: Read all roles
    description: ''
    operationId: walkoff.server.endpoints.roles.read_all_roles
    produces:
      - application/json
    responses:
      '200':
        description: Success
        schema:
          description: A list of roles
          type: array
          items:
            $ref: '#/definitions/Role'
  post:
    tags:
      - Roles
    summary: Create a role
    description: ''
    operationId: walkoff.server.endpoints.roles.create_role
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The role object to be created
        required: true
        schema:
          $ref: '#/definitions/AddRole'
    responses:
      201:
        description: Object created.
        schema:
          $ref: '#/definitions/Role'
      400:
        description: Object exists.
  put:
    tags:
      - Roles
    summary: Update a role
    description: ''
    operationId: walkoff.server.endpoints.roles.update_role
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: Updated fields for the role object
        required: true
        schema:
          $ref: '#/definitions/Role'
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Role'
      404:
        description: Object does not exist.
  patch:
    tags:
      - Roles
    summary: Update a role
    description: ''
    operationId: walkoff.server.endpoints.roles.patch_role
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: Updated fields for the role object
        required: true
        schema:
          $ref: '#/definitions/Role'
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Role'
      404:
        description: Object does not exist.
/api/roles/{role_id}:
  parameters:
    - name: role_id
      in: path
      description: The name that needs to be fetched.
      required: true
      type: string
  get:
    tags:
      - Roles
    summary: Read a role
    description: ''
    operationId: walkoff.server.endpoints.roles.read_role
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Role'
      404:
        description: Object does not exist.
  delete:
    tags:
      - Roles
    summary: Delete a role
    description: ''
    operationId: walkoff.server.endpoints.roles.delete_role
    produces:
      - application/json
    responses:
      204:
        description: Success
      404:
        description: Object does not exist.

/api/availableresourceactions:
    get:
      tags:
        - Roles
      summary: Read all available resource actions
      description: ''
      operationId: walkoff.server.endpoints.roles.read_available_resource_actions
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            description: List of available resource actions
            type: array
            items:
              $ref: '#/definitions/AvailableResourceAction'
