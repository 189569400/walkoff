/api/scheduler:
  get:
    tags:
      - Scheduler
    summary: Get the current scheduler status.
    description: ''
    operationId: server.endpoints.scheduler.get_scheduler_status
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          properties:
            status:
              description: State of scheduler
              type: string
              example: 0 for stopped, 1 for running, 2 for paused
/api/scheduler/{status}:
  parameters:
    - in: path
      name: status
      description: Requested status of the scheduler
      type: string
      required: true
  get:
    tags:
      - Scheduler
    summary: Update the status of the scheduler
    description: ''
    operationId: server.endpoints.scheduler.update_scheduler_status
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          properties:
            status:
              description: State of scheduler or error message
              type: string
              example: 0 for stopped, 1 for running, 2 for paused, or on error Scheduler Already Stopped/Running/Paused
/api/scheduler/{job_id}/{status}:
  parameters:
    - in: path
      name: job_id
      description: The job ID that needs to be fetched
      type: string
      required: true
    - in: path
      name: status
      description: Requested status of the job
      type: string
      required: true
  get:
    tags:
      - Scheduler
    summary: Pause a specific job
    description: ''
    operationId: server.endpoints.scheduler.update_job_status
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          properties:
            status:
              description: State of job
              type: string
              example: Job Paused
/api/scheduler/jobs:
  get:
    tags:
      - Scheduler
    summary: Read all jobs
    description: ''
    operationId: server.endpoints.scheduler.read_all_jobs
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          description: A list of job objects
          type: object
          properties:
            jobs:
              $ref: '#/definitions/Job'

/api/scheduledtasks:
  get:
    tags:
      - Scheduler
    summary: Get all the scheduled tasks
    operationId: server.endpoints.scheduler.read_all_scheduled_tasks
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          description: A list of Scheduled Task objects
          type: array
          items:
            $ref: '#/definitions/ScheduledTask'
  put:
    tags:
      - Scheduler
    summary: Create a new Scheduled Task
    operationId: server.endpoints.scheduler.create_scheduled_task
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        description: The new Scheduled Task object
        required: true
        schema:
          $ref: '#/definitions/AddScheduledTask'
    responses:
      201:
        description: Success
        schema:
          description: A list of Scheduled Task objects
          type: array
          items:
            $ref: '#/definitions/ScheduledTask'
      462:
        description: Scheduled task already exists
        schema:
          $ref: '#/definitions/Error'
  post:
    tags:
      - Scheduler
    summary: Update a new Scheduled Task
    operationId: server.endpoints.scheduler.update_scheduled_task
    produces:
      - application/json
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        description: The updated Scheduled Task object
        required: true
        schema:
          $ref: '#/definitions/ScheduledTask'
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/ScheduledTask'
      461:
        description: Scheduled task does not exist
        schema:
          $ref: '#/definitions/Error'

/api/scheduledtasks/{scheduled_task_id}:
  parameters:
    - name: scheduled_task_id
      in: path
      description: The ID of the scheduled task.
      required: true
      type: string
  get:
    tags:
      - Scheduler
    summary: Get the scheduled task
    operationId: server.endpoints.scheduler.read_scheduled_task
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/ScheduledTask'
      461:
        description: Scheduled task does not exist
        schema:
          $ref: '#/definitions/Error'
  delete:
    tags:
      - Scheduler
    summary: Delete the scheduled task
    operationId: server.endpoints.scheduler.delete_scheduled_task
    produces:
      - application/json
    responses:
      200:
        description: Success
      461:
        description: Scheduled task does not exist
        schema:
          $ref: '#/definitions/Error'

/api/scheduledtasks/{scheduled_task_id}/enable:
  put:
    tags:
      - Scheduler
    summary: Enable the scheduled task
    operationId: server.endpoints.scheduler.enable_scheduled_task
    produces:
      - application/json
    parameters:
      - name: scheduled_task_id
        in: path
        description: The ID of the scheduled task.
        required: true
        type: string
    responses:
      200:
        description: Success
      461:
        description: Scheduled task does not exist
        schema:
          $ref: '#/definitions/Error'

/api/scheduledtasks/{scheduled_task_id}/disable:
  put:
    tags:
      - Scheduler
    summary: Disable the scheduled task
    operationId: server.endpoints.scheduler.disable_scheduled_task
    produces:
      - application/json
    parameters:
      - name: scheduled_task_id
        in: path
        description: The ID of the scheduled task.
        required: true
        type: string
    responses:
      200:
        description: Success
      461:
        description: Scheduled task does not exist
        schema:
          $ref: '#/definitions/Error'