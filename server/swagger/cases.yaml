/cases:
  get:
    tags:
      - Cases
    summary: Render cases
    description: ''
    operationId: server.endpoints.cases.display_cases
    produces:
      - application/json
    responses:
      200:
        description: OK

/cases/{case}:
  parameters:
    - name: case
      in: path
      description: The name of the case
      required: true
      type: string
  get:
    tags:
      - Cases
    summary: Get a case
    description: ''
    operationId: server.endpoints.cases.get_case
    produces:
      - application/json
    responses:
      200:
        description: OK
  post:
    tags:
      - Cases
    summary: Update a case
    description: ''
    operationId: server.endpoints.cases.edit_case
    consumes:
      - application/x-www-form-urlencoded
    produces:
      - application/json
    parameters:
      - in: formData
        name: name
        description: New name of the case.
        required: false
        type: string
      - in: formData
        name: note
        description: Note to add to the case
        required: false
        type: string
    responses:
      200:
        description: OK
  put:
    tags:
      - Cases
    summary: Add a case
    description: ''
    operationId: server.endpoints.cases.add_case
    produces:
      - application/json
    responses:
      200:
        description: OK
  delete:
    tags:
      - Cases
    summary: Remove a case
    description: ''
    operationId: server.endpoints.cases.delete_case
    produces:
      - application/json
    responses:
      200:
        description: OK

/cases/import:
  get:
    tags:
      - Cases
    summary: Import case data
    description: ''
    operationId: server.endpoints.cases.import_cases
    consumes:
      - application/x-www-form-urlencoded
    produces:
      - application/json
    parameters:
      - in: formData
        name: filename
        description: Filename of JSON to import into case database.
        required: false
        type: string
    responses:
      200:
        description: OK

#/cases/export:
#  get:
#    tags:
#      - Cases
#    summary: Export case data
#    description: ''
#    operationId: server.controllers.cases.export_cases
#    consumes:
#      - application/x-www-form-urlencoded
#    produces:
#      - application/json
#    parameters:
#      - in: formData
#        name: filename
#        description: Filename of JSON to import into case database.
#        required: false
#        type: string
#    responses:
#      200:
#        description: OK
#/cases/subscriptions:
#  get:
#    tags:
#      - Subscriptions
#    summary: Gets all subscriptions
#    description: ''
#    operationId: server.controllers.subscriptions.display_subscriptions
#    produces:
#      - application/json
#    responses:
#      '400':
#        description: Could not import case data
#'/cases/{case}/events':
#  get:
#    tags:
#      - Cases
#    summary: Get case events
#    description: ''
#    operationId: server.controllers.cases.get_events
#    parameters:
#      - name: case
#        in: path
#        description: 'The name that needs to be fetched. '
#        required: true
#        type: string
#    produces:
#      - application/json
#    responses:
#      '400':
#        description: Invalid ID supplied
#      '404':
#        description: Events not found
#      '405':
#        description: Validation exception
#'/cases/{case}/subscriptions':
#  get:
#    tags:
#      - Subscriptions
#    summary: Get a subscription
#    description: ''
#    operationId: server.controllers.subscriptions.get_subscription
#    parameters:
#      - name: case
#        in: path
#        description: 'The name that needs to be fetched. '
#        required: true
#        type: string
#    produces:
#      - application/json
#    responses:
#      '400':
#        description: Invalid ID supplied
#      '404':
#        description: Subscription not found
#      '405':
#        description: Validation exception
#  post:
#    tags:
#      - Subscriptions
#    summary: Update a subscription
#    description: ''
#    operationId: server.controllers.subscriptions.edit_subscription
#    consumes:
#      - application/json
#    produces:
#      - application/json
#    parameters:
#      - name: case
#        in: path
#        description: The name that needs to be fetched.
#        required: true
#        type: string
#      - in: body
#        name: body
#        description: Created subscription object
#        required: true
#        schema:
#          $ref: '#/definitions/subscription'
#    responses:
#      '400':
#        description: Invalid ID supplied
#      '404':
#        description: Subscription not found
#      '405':
#        description: Validation exception
#  put:
#    tags:
#      - Subscriptions
#    summary: Add a subscription
#    description: ''
#    operationId: server.controllers.subscriptions.create_subscription
#    consumes:
#      - application/json
#    produces:
#      - application/json
#    parameters:
#      - name: case
#        in: path
#        description: The name that needs to be fetched.
#        required: true
#        type: string
#      - in: body
#        name: body
#        description: Created subscription object
#        required: true
#        schema:
#          $ref: '#/definitions/subscription'
#    responses:
#      '400':
#        description: Invalid ID supplied
#      '404':
#        description: Subscription not found
#      '405':
#        description: Validation exception'
#  delete:
#    tags:
#      - Subscriptions
#    summary: Remove a subscription
#    description: ''
#    operationId: server.controllers.subscriptions.delete_subscription
#    consumes:
#      - application/json
#    produces:
#      - application/json
#    parameters:
#      - name: case
#        in: path
#        description: The name that needs to be fetched.
#        required: true
#        type: string
#      - in: body
#        name: body
#        description: Created subscription object
#        required: true
#        schema:
#          $ref: '#/definitions/subscription'
#    responses:
#      '400':
#        description: Invalid ID supplied
#      '404':
#        description: Subscription not found
#      '405':
#        description: Validation exception