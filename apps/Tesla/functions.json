{
  "initialize_connection":{
    "description":"Initializes the connection",
    "run":"Tesla.main.Main.initialize_connection",
    "input_type":"str",
    "output_type":"None",
    "args":[
      {
        "name":"email",
        "type":"str"
      },
      {
        "name":"password",
        "type":"str"
      }
    ]
  },

  "wake_car":{
    "description":"Wakes the car from the sleep state. This command must be run to get data from the car.",
    "output_type":"str",
    "args":[]
  },

  "get_mobile_access":{
    "description":"Determines if mobile access to the vehicle is enabled",
    "output_type":"str",
    "args":[]
  },

  "get_charge_state_all":{
    "description":"Returns the complete JSON of the state of charge in the battery",
    "output_type":"str",
    "args":[]
  },

  "get_charging_state":{
    "description":"Gets the charging state (e.g. 'charging')",
    "output_type":"str",
    "args":[]
  },

  "get_charge_to_max_range":{
    "description":"Gets the current standard/max-range setting",
    "output_type":"str",
    "args":[]
  },

  "get_max_range_charge_counter":{
    "description":"Gets the counter to the max range",
    "output_type":"str",
    "args":[]
  },

  "get_fast_charger_present":{
    "description":"Gets whether or not it is connected to a supercharger",
    "output_type":"str",
    "args":[]
  },

  "get_battery_range":{
    "description":"Gets the range of the battery",
    "output_type":"str",
    "args":[]
  },

  "get_est_battery_range":{
    "description":"Gets the estimated range of the battery from recent driving",
    "output_type":"str",
    "args":[]
  },

  "get_ideal_battery_range":{
    "description":"Gets the ideal miles",
    "output_type":"str",
    "args":[]
  },

  "get_battery_level":{
    "description":"Gets the current battery charge percentage",
    "output_type":"str",
    "args":[]
  },

  "get_battery_current":{
    "description":"Gets the current flowing into the battery",
    "output_type":"str",
    "args":[]
  },

  "get_charge_starting_range":{
    "description":"Gets the charge starting range",
    "output_type":"str",
    "args":[]
  },

  "get_charge_starting_soc":{
    "description":"Gets the charge starting SOC",
    "output_type":"str",
    "args":[]
  },

  "get_charger_voltage":{
    "description":"Gets the current voltage (only while charging)",
    "output_type":"str",
    "args":[]
  },

  "get_charger_pilot_current":{
    "description":"Gets the max current allowed by charger and adapter",
    "output_type":"str",
    "args":[]
  },

  "get_charger_actual_current":{
    "description":"Gets the current actually being drawn",
    "output_type":"str",
    "args":[]
  },

  "get_charger_power":{
    "description":"kW of charger",
    "output_type":"str",
    "args":[]
  },

  "get_time_to_full_charge":{
    "description":"Gets the time until the car is full",
    "output_type":"str",
    "args":[]
  },

  "get_charge_rate":{
    "description":"Float m/hr charging or -1 if not",
    "output_type":"str",
    "args":[]
  },

  "get_charge_port_door_open":{
    "description":"Gets whether or not the charge port door is open",
    "output_type":"str",
    "args":[]
  },

  "get_climate_settings_all":{
    "description":"Gets the complete JSON of the vehicle climate settings",
    "output_type":"str",
    "args":[]
  },

  "get_inside_temp":{
    "description":"Gets the inside temperature of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_outside_temp":{
    "description":"Gets outside temperature of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_driver_temp_setting":{
    "description":"Gets the driver temperature setpoint",
    "output_type":"str",
    "args":[]
  },

  "get_passenger_temp_setting":{
    "description":"Gets the passenger temperature setpoint",
    "output_type":"str",
    "args":[]
  },

  "get_is_auto_conditioning_on":{
    "description":"Gets whether or not the AC is on",
    "output_type":"str",
    "args":[]
  },

  "get_is_front_defroster_on":{
    "description":"Gets whether or not the front defroster is on",
    "output_type":"str",
    "args":[]
  },

  "get_is_rear_defroster_on":{
    "description":"Gets whether or not the rear defroster is on",
    "output_type":"str",
    "args":[]
  },

  "get_fan_status":{
    "description":"Gets the fan status (speed of the fan)",
    "output_type":"int",
    "args":[]
  },

  "get_driving_and_position_all":{
    "description":"Gets the complete JSON of the driving and position settings",
    "output_type":"str",
    "args":[]
  },

  "get_shift_state":{
    "description":"Gets the current shift state of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_speed":{
    "description":"Gets the current speed of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_latitude":{
    "description":"Gets the current latitude of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_longitude":{
    "description":"Gets the current longitude of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_heading":{
    "description":"Gets the current heading of the vehicle",
    "output_type":"str",
    "args":[]
  },

  "get_gps_as_of":{
    "description":"Gets the latest UNIX timestamp of the GPS fix",
    "output_type":"str",
    "args":[]
  },

  "get_gui_settings_all":{
    "description":"Gets the complete JSON of the GUI settings",
    "output_type":"str",
    "args":[]
  },

  "get_gui_distance_units":{
    "description":"Gets the GUI distance units",
    "output_type":"str",
    "args":[]
  },

  "get_gui_temperature_units":{
    "description":"Gets the GUI temperature units",
    "output_type":"str",
    "args":[]
  },

  "get_gui_charge_rate_units":{
    "description":"Gets the GUI charge rate units",
    "output_type":"str",
    "args":[]
  },

  "get_gui_24_hour_time":{
    "description":"Gets whether or not the GUI clock is in 24-hour mode",
    "output_type":"str",
    "args":[]
  },

  "get_gui_range_display":{
    "description":"Gets the GUI range display",
    "output_type":"str",
    "args":[]
  },

  "get_vehicle_state_all":{
    "description":"Gets the complete JSON of the vehicle state settings",
    "output_type":"str",
    "args":[]
  },

  "get_driver_front_door":{
    "description":"Gets whether or not the driver's side front door is open",
    "output_type":"str",
    "args":[]
  },

  "get_driver_rear_door":{
    "description":"Gets whether or not the driver's side rear door is open",
    "output_type":"str",
    "args":[]
  },

  "get_passenger_front_door":{
    "description":"Gets whether or not the passenger's side front door is open",
    "output_type":"str",
    "args":[]
  },

  "get_passenger_rear_door":{
    "description":"Gets whether or not the passenger's side rear door is open",
    "output_type":"str",
    "args":[]
  },

  "get_front_trunk":{
    "description":"Gets whether or not the front trunk is open",
    "output_type":"str",
    "args":[]
  },

  "get_rear_trunk":{
    "description":"Gets whether or not the rear trunk is open",
    "output_type":"str",
    "args":[]
  },

  "get_car_firmware_version":{
    "description":"Gets the car's firmware version",
    "output_type":"str",
    "args":[]
  },

  "get_locked":{
    "description":"Gets whether or not the car is locked",
    "output_type":"str",
    "args":[]
  },

  "get_sun_roof_installed":{
    "description":"Gets whether or not the sunroof is installed",
    "output_type":"str",
    "args":[]
  },

  "get_sun_roof_state":{
    "description":"Gets the current state of the sunroof",
    "output_type":"str",
    "args":[]
  },

  "get_sun_roof_percent_open":{
    "description":"Gets the percent that the sunroof is open",
    "output_type":"str",
    "args":[]
  },

  "get_dark_rims":{
    "description":"Gets whether or not gray rims are installed",
    "output_type":"str",
    "args":[]
  },

  "get_wheel_type":{
    "description":"Gets the type of wheels installed",
    "output_type":"str",
    "args":[]
  },

  "get_has_spoiler":{
    "description":"Gets whether or not the spoiler is installed",
    "output_type":"str",
    "args":[]
  },

  "get_roof_color":{
    "description":"Gets whether or not the roof is colored",
    "output_type":"str",
    "args":[]
  },

  "get_perf_config":{
    "description":"Gets the perf config",
    "output_type":"str",
    "args":[]
  },

  "set_valet_mode":{
    "description":"Sets valet mode on or off with a PIN to disable it from within the car",
    "output_type":"str",
    "args":[
      {
        "name": "on",
        "type": "str"
      },
      {
        "name": "password",
        "type": "str"
      }
    ]
  },

  "reset_valet_pin":{
    "description":"Resets the valet mode PIN if set",
    "output_type":"str",
    "args":[]
  },

  "open_charge_port":{
    "description":"Opens the charge port",
    "output_type":"str",
    "args":[]
  },

  "set_charge_limit_std":{
    "description":"Sets the charge limit to standard",
    "output_type":"str",
    "args":[]
  },

  "set_charge_limit_max_range":{
    "description":"Sets the charge limit to max range",
    "output_type":"str",
    "args":[]
  },

  "set_charge_limit":{
    "description":"Sets the charge limit to a custom percentage",
    "output_type":"str",
    "args":[
      {
        "name": "limit_value",
        "type": "int"
      }
    ]
  },

  "start_charging":{
    "description":"Start charging the vehicle",
    "output_type":"str",
    "args":[]
  },

  "stop_charging":{
    "description":"Stop charging the vehicle",
    "output_type":"str",
    "args":[]
  },

  "flash_lights":{
    "description":"Flash the lights once",
    "output_type":"str",
    "args":[]
  },

  "honk_horn":{
    "description":"Honk the horn once",
    "output_type":"str",
    "args":[]
  },

  "unlock_doors":{
    "description":"Unlock the doors",
    "output_type":"str",
    "args":[]
  },

  "lock_doors":{
    "description":"Lock the doors",
    "output_type":"str",
    "args":[]
  },

  "set_temperature":{
    "description":"Sets the temperature target for the HVAC system",
    "output_type":"str",
    "args":[
      {
        "name": "driver_degC",
        "type": "str"
      },
      {
        "name": "pass_degC",
        "type": "str"
      }
    ]
  },

  "start_HVAC_system":{
    "description":"Start the climate control system",
    "output_type":"str",
    "args":[]
  },

  "stop_HVAC_system":{
    "description":"Stop the climate control system",
    "output_type":"str",
    "args":[]
  },

  "move_pano_roof":{
    "description":"Controls the panoramic roof",
    "output_type":"str",
    "args":[
      {
        "name": "state",
        "type": "str"
      },
      {
        "name": "percent",
        "type": "int"
      }
    ]
  },

  "remote_start":{
    "description":"Start the car for keyless driving",
    "output_type":"str",
    "args":[
      {
        "name": "password",
        "type": "str"
      }
    ]
  },

  "open_trunk":{
    "description":"Opens the rear trunk. Currently inoperable",
    "output_type":"str",
    "args":[]
  }

}


