{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/buckets/buckets.component.ts","webpack:///./src/app/buckets/buckets.html","webpack:///./src/app/buckets/buckets.modal.component.ts","webpack:///./src/app/buckets/buckets.modal.html","webpack:///./src/app/buckets/buckets.scss","webpack:///./src/app/buckets/buckets.service.ts","webpack:///./src/app/dashboards/dashboard.service.ts","webpack:///./src/app/dashboards/dashboards.component.ts","webpack:///./src/app/dashboards/dashboards.html","webpack:///./src/app/dashboards/dashboards.scss","webpack:///./src/app/dashboards/manage.dashboards.component.html","webpack:///./src/app/dashboards/manage.dashboards.component.scss","webpack:///./src/app/dashboards/manage.dashboards.component.ts","webpack:///./src/app/dashboards/widget.modal.component.html","webpack:///./src/app/dashboards/widget.modal.component.scss","webpack:///./src/app/dashboards/widget.modal.component.ts","webpack:///./src/app/execution/execution.component.ts","webpack:///./src/app/execution/execution.html","webpack:///./src/app/execution/execution.scss","webpack:///./src/app/execution/execution.service.ts","webpack:///./src/app/execution/execution.variable.modal.component.ts","webpack:///./src/app/execution/execution.variable.modal.html","webpack:///./src/app/globals/globals.component.ts","webpack:///./src/app/globals/globals.html","webpack:///./src/app/globals/globals.modal.component.ts","webpack:///./src/app/globals/globals.modal.html","webpack:///./src/app/globals/globals.scss","webpack:///./src/app/globals/globals.service.ts","webpack:///./src/app/globals/variable.modal.component.ts","webpack:///./src/app/globals/variable.modal.html","webpack:///./src/app/main.module.ts","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/main.html","webpack:///./src/app/main/main.scss","webpack:///./src/app/main/main.service.ts","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/messages/messages.html","webpack:///./src/app/messages/messages.modal.component.ts","webpack:///./src/app/messages/messages.modal.html","webpack:///./src/app/messages/messages.scss","webpack:///./src/app/messages/messages.service.ts","webpack:///./src/app/metrics/metrics.component.ts","webpack:///./src/app/metrics/metrics.html","webpack:///./src/app/metrics/metrics.scss","webpack:///./src/app/metrics/metrics.service.ts","webpack:///./src/app/models/accessToken.ts","webpack:///./src/app/models/api/actionApi.ts","webpack:///./src/app/models/api/appApi.ts","webpack:///./src/app/models/api/conditionApi.ts","webpack:///./src/app/models/api/deviceApi.ts","webpack:///./src/app/models/api/deviceFieldApi.ts","webpack:///./src/app/models/api/parameterApi.ts","webpack:///./src/app/models/api/parameterSchema.ts","webpack:///./src/app/models/api/returnApi.ts","webpack:///./src/app/models/api/transformApi.ts","webpack:///./src/app/models/availableResourceAction.ts","webpack:///./src/app/models/buckets/bucket.ts","webpack:///./src/app/models/buckets/trigger.ts","webpack:///./src/app/models/configuration.ts","webpack:///./src/app/models/dashboard/dashboard.ts","webpack:///./src/app/models/dashboard/dashboardWidget.ts","webpack:///./src/app/models/execution/consoleLog.ts","webpack:///./src/app/models/execution/nodeStatus.ts","webpack:///./src/app/models/execution/nodeStatusEvent.ts","webpack:///./src/app/models/execution/nodeStatusSummary.ts","webpack:///./src/app/models/execution/workflowStatus.ts","webpack:///./src/app/models/execution/workflowStatusEvent.ts","webpack:///./src/app/models/global.ts","webpack:///./src/app/models/message/message.ts","webpack:///./src/app/models/message/messageBody.ts","webpack:///./src/app/models/message/messageListing.ts","webpack:///./src/app/models/message/messageUpdate.ts","webpack:///./src/app/models/metric/actionMetric.ts","webpack:///./src/app/models/metric/appMetric.ts","webpack:///./src/app/models/metric/metric.ts","webpack:///./src/app/models/metric/workflowMetric.ts","webpack:///./src/app/models/playbook/action.ts","webpack:///./src/app/models/playbook/argument.ts","webpack:///./src/app/models/playbook/branch.ts","webpack:///./src/app/models/playbook/condition.ts","webpack:///./src/app/models/playbook/conditionalExpression.ts","webpack:///./src/app/models/playbook/environmentVariable.ts","webpack:///./src/app/models/playbook/executionElement.ts","webpack:///./src/app/models/playbook/graphPosition.ts","webpack:///./src/app/models/playbook/playbook.ts","webpack:///./src/app/models/playbook/transform.ts","webpack:///./src/app/models/playbook/trigger.ts","webpack:///./src/app/models/playbook/workflow.ts","webpack:///./src/app/models/resource.ts","webpack:///./src/app/models/role.ts","webpack:///./src/app/models/scheduler/scheduledTask.ts","webpack:///./src/app/models/scheduler/scheduledTaskCron.ts","webpack:///./src/app/models/scheduler/scheduledTaskDate.ts","webpack:///./src/app/models/scheduler/scheduledTaskInterval.ts","webpack:///./src/app/models/scheduler/scheduledTaskTrigger.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/models/userClaims.ts","webpack:///./src/app/models/variable.ts","webpack:///./src/app/models/workingGlobal.ts","webpack:///./src/app/models/workingUser.ts","webpack:///./src/app/pipes/keys.pipe.ts","webpack:///./src/app/pipes/safeEmbed.pipe.ts","webpack:///./src/app/playbook/import.modal.component.ts","webpack:///./src/app/playbook/import.modal.html","webpack:///./src/app/playbook/metadata.modal.component.ts","webpack:///./src/app/playbook/metadata.modal.html","webpack:///./src/app/playbook/playbook.argument.component.ts","webpack:///./src/app/playbook/playbook.argument.html","webpack:///./src/app/playbook/playbook.component.ts","webpack:///./src/app/playbook/playbook.conditional.expression.component.ts","webpack:///./src/app/playbook/playbook.conditional.expression.html","webpack:///./src/app/playbook/playbook.conditions.component.ts","webpack:///./src/app/playbook/playbook.conditions.html","webpack:///./src/app/playbook/playbook.environment.variable.modal.component.ts","webpack:///./src/app/playbook/playbook.environment.variable.modal.html","webpack:///./src/app/playbook/playbook.html","webpack:///./src/app/playbook/playbook.scss","webpack:///./src/app/playbook/playbook.service.ts","webpack:///./src/app/playbook/playbook.transforms.component.ts","webpack:///./src/app/playbook/playbook.transforms.html","webpack:///./src/app/playbook/workflow.editor.component.ts","webpack:///./src/app/playbook/workflow.editor.html","webpack:///./src/app/playbook/workflow.editor.scss","webpack:///./src/app/refresh-token-interceptor.ts","webpack:///./src/app/routing.ts","webpack:///./src/app/scheduler/scheduler.component.ts","webpack:///./src/app/scheduler/scheduler.html","webpack:///./src/app/scheduler/scheduler.modal.component.ts","webpack:///./src/app/scheduler/scheduler.modal.html","webpack:///./src/app/scheduler/scheduler.scss","webpack:///./src/app/scheduler/scheduler.service.ts","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.html","webpack:///./src/app/settings/settings.roles.component.ts","webpack:///./src/app/settings/settings.roles.html","webpack:///./src/app/settings/settings.roles.modal.component.ts","webpack:///./src/app/settings/settings.roles.modal.html","webpack:///./src/app/settings/settings.scss","webpack:///./src/app/settings/settings.service.ts","webpack:///./src/app/settings/settings.timeout.modal.component.ts","webpack:///./src/app/settings/settings.timeout.modal.html","webpack:///./src/app/settings/settings.user.modal.component.ts","webpack:///./src/app/settings/settings.user.modal.html","webpack:///./src/app/utilities.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { AccessToken } from '../models/accessToken';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nconst REFRESH_TOKEN_NAME = 'refresh_token';\r\nconst ACCESS_TOKEN_NAME = 'access_token';\r\n\r\ndeclare var EventSourcePolyfill: any;\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n\tjwtHelper = new JwtHelperService();\r\n\r\n\tconstructor(private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\t//TODO: not currently used, eventually should be used on the login\r\n\tlogin(username: string, password: string): Promise<void> {\r\n\t\treturn this.http.post('/api/auth', { username, password })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((tokens: { access_token: string, refresh_token: string }) => {\r\n\t\t\t\tsessionStorage.setItem(ACCESS_TOKEN_NAME, tokens.access_token);\r\n\t\t\t\tsessionStorage.setItem(REFRESH_TOKEN_NAME, tokens.refresh_token);\r\n\t\t\t\tlocation.href = '/';\r\n\t\t\t})\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs the user out on the server and clears the tokens in session storage.\r\n\t */\r\n\tlogout(): Promise<void> {\r\n\t\tconst headers = { 'Authorization': `Bearer ${ this.getAccessToken() }` };\r\n\r\n\t\treturn this.http.post('/api/auth/logout', { refresh_token: sessionStorage.getItem(REFRESH_TOKEN_NAME) }, { headers })\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.clearTokens();\r\n\t\t\t})\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears our JWTs from session storage. Used when logging out.\r\n\t */\r\n\tclearTokens(): void {\r\n\t\tsessionStorage.removeItem(ACCESS_TOKEN_NAME);\r\n\t\tsessionStorage.removeItem(REFRESH_TOKEN_NAME);\r\n\t}\r\n\r\n\t//TODO: figure out how roles are going to be stored\r\n\t//stub method until we figure out how we're going to handle client side authorization stuff.\r\n\tcanAccess(resourceName: string, actionName: string): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs the refresh JWT string from session storage.\r\n\t */\r\n\tgetRefreshToken(): string {\r\n\t\treturn sessionStorage.getItem(REFRESH_TOKEN_NAME);\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs the access JWT string from session storage.\r\n\t */\r\n\tgetAccessToken(): string {\r\n\t\treturn sessionStorage.getItem(ACCESS_TOKEN_NAME);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if access token is expired\r\n\t */\r\n\tisAccessTokenExpired(): boolean {\r\n\t\treturn this.getAccessToken() && this.jwtHelper.isTokenExpired(this.getAccessToken())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true is refresh token is expired\r\n\t */\r\n\tisRefreshTokenExpired(): boolean {\r\n\t\treturn this.getRefreshToken() && this.jwtHelper.isTokenExpired(this.getRefreshToken())\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously checks if the access token needs to be refreshed, and refreshes it if necessary.\r\n\t * Will return a promise of the existing access token or the newly refreshed access token.\r\n\t */\r\n\tgetAccessTokenRefreshed(): Promise<string> {\r\n\t\tif (!this.isAccessTokenExpired()) return Promise.resolve(this.getAccessToken());\r\n\r\n\t\tif (this.isRefreshTokenExpired()) {\r\n\t\t\tsessionStorage.removeItem('access_token');\r\n\t\t\tsessionStorage.removeItem('refresh_token');\r\n\t\t\t//TODO: figure out a better way of handling this... maybe incorporate login into the main component somehow\r\n\t\t\tlocation.href = '/login';\r\n\t\t\treturn Promise.reject('Refresh token does not exist or has expired. Please log in again.');\r\n\t\t}\r\n\r\n\t\tconst headers = { 'Authorization': `Bearer ${ this.getRefreshToken() }` };\r\n\r\n\t\treturn this.http.post('/api/auth/refresh', {}, { headers })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((res: any) => {\r\n\t\t\t\tconst accessToken = res.access_token;\r\n\t\t\t\tsessionStorage.setItem('access_token', accessToken);\r\n\t\t\t\treturn accessToken;\r\n\t\t\t})\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AccessToken object, decoded from the refresh token in session storage.\r\n\t */\r\n\tgetAndDecodeRefreshToken(): AccessToken {\r\n\t\treturn plainToClass(AccessToken, (this.jwtHelper.decodeToken(this.getRefreshToken()) as object));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an AccessToken object, decoded from the access token in session storage.\r\n\t */\r\n\tgetAndDecodeAccessToken(): AccessToken {\r\n\t\treturn plainToClass(AccessToken, (this.jwtHelper.decodeToken(this.getAccessToken()) as object));\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the access token is 'fresh'.\r\n\t * Freshness is determined if this is the access token from our actual authentication,\r\n\t * or if it is a token that was supplied using the /api/auth/refresh endpoint.\r\n\t */\r\n\tisAccessTokenFresh(): boolean {\r\n\t\treturn !!this.getAndDecodeAccessToken().fresh;\r\n\t}\r\n\r\n\tgetEventSource(url): Promise<any> {\r\n\t\t//return Promise.resolve(new AuthEventSource(url, this));\r\n\t\treturn this.getAccessTokenRefreshed().then(authToken => {\r\n\t\t\tlet eventSource = new EventSourcePolyfill(url, { headers: { 'Authorization': `Bearer ${ authToken }` }})\r\n\t\t\teventSource.onerror = (err: Error) => console.error(err);\r\n\t\t\treturn eventSource;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n// export class AuthEventSource {\r\n// \teventSource: any;\r\n// \ttimeout: any;\r\n// \tlisteners: any[] = [];\r\n// \terrorHandler: any = (err: Error) => console.error(err);\r\n\r\n// \tconstructor(private url, private authService: AuthService) {\r\n// \t\tthis._create();\r\n// \t}\r\n\r\n// \tprivate _getConfig() {\r\n// \t\treturn this.authService.getAccessTokenRefreshed().then(authToken => ({ headers: { 'Authorization': `Bearer ${ authToken }` }}));\r\n// \t}\r\n\r\n// \tprivate _create() {\r\n// \t\tthis._getConfig().then(config => {\r\n// \t\t\tthis.eventSource = new EventSourcePolyfill(this.url, config);\r\n// \t\t\tthis.eventSource.onopen = (e) => this._restartTimeout();\r\n// \t\t\tthis.eventSource.onmessage = (e) => this._restartTimeout();\r\n// \t\t\tthis.eventSource.onerror = this.errorHandler;\r\n// \t\t\tthis.listeners.forEach(listener => this.eventSource.addEventListener(listener.event, listener.handler));\r\n// \t\t})\r\n// \t}\r\n\r\n// \tprivate _restartTimeout() {\r\n// \t\tconsole.log('restarting timer');\r\n// \t\tif (this.timeout) clearTimeout(this.timeout);\r\n// \t\tthis.timeout = setTimeout(() => {\r\n// \t\t\tconsole.log(`Restarting EventSource: ${ this.url }`)\r\n// \t\t\tthis.close();\r\n// \t\t\tthis._create();\r\n// \t\t}, 30000)\r\n// \t}\r\n\r\n// \taddEventListener(event, handler) {\r\n// \t\tthis.listeners.push({ event, handler })\r\n// \t\tif (this.eventSource) this.eventSource.addEventListener(event, handler);\r\n// \t}\r\n\r\n// \tonerror(handler) {\r\n// \t\tthis.errorHandler = handler;\r\n// \t\tif (this.eventSource) this.eventSource.onerror = handler;\r\n// \t}\r\n\r\n// \tclose() {\r\n// \t\tif (this.timeout) clearTimeout(this.timeout);\r\n// \t\tif (this.eventSource) this.eventSource.close();\r\n// \t}\r\n// }\r\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { BucketsService } from './buckets.service';\r\n\r\nimport { BucketsModalComponent } from './buckets.modal.component';\r\n\r\nimport { Bucket } from '../models/buckets/bucket';\r\n\r\n@Component({\r\n\tselector: 'buckets-component',\r\n\ttemplateUrl: './buckets.html',\r\n\tstyleUrls: [\r\n\t\t'./buckets.scss',\r\n\t\t'../../../node_modules/ng-pick-datetime/styles/picker.min.css',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [BucketsService],\r\n})\r\nexport class BucketsComponent implements OnInit {\r\n  buckets: Bucket[] = []\r\n  displayBuckets: Bucket[] = [];\r\n  filterQuery: FormControl = new FormControl();\r\n\r\n\tconstructor(\r\n\t\tprivate bucketsService: BucketsService,\r\n\t\tprivate modalService: NgbModal,\r\n\t\tprivate toastrService: ToastrService,\r\n\t\tprivate utils: UtilitiesService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component initialization, get the scheduler status for display/actioning.\r\n\t * Get workflow names to add to a scheduled task.\r\n\t * Get scheduled tasks to display in the data table.\r\n\t * Initialize the search filter input to filter scheduled tasks.\r\n\t */\r\n\tngOnInit(): void {\r\n\t  this.getBuckets();\r\n\r\n\t  this.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterBuckets());\r\n\t}\r\n\r\n  /**\r\n\t * Based on the search filter input, filter out the buckets based on matching some parameters (name, desc.).\r\n\t */\r\n\tfilterBuckets(): void {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayBuckets = this.buckets.filter((s) => {\r\n\t\t\treturn (s.name.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\ts.description.toString().includes(searchFilter));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of buckets from the server for display in our data table.\r\n\t */\r\n\tgetBuckets(): void {\r\n\t\tthis.bucketsService\r\n\t\t\t.getAllBuckets()\r\n\t\t\t.then(buckets => this.displayBuckets = this.buckets = buckets)\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving buckets: ${e.message}`));\r\n\t}\r\n\r\n  /**\r\n\t * Activates when a row is toggled\r\n\t */\r\n\tonDetailToggle(e): void {\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a modal for adding a new bucket. Passes in our workflow names for usage in the modal.\r\n\t */\r\n\taddBucket(): void {\r\n\t\tconst modalRef = this.modalService.open(BucketsModalComponent, { size: 'lg' });\r\n\t\tmodalRef.componentInstance.title = 'Create a new Bucket';\r\n\t\tmodalRef.componentInstance.submitText = 'Add Bucket';\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\t/**\r\n\t * On closing an add/edit modal (on clicking save), we will add or update existing scheduled tasks for display.\r\n\t * @param modalRef Modal reference that is being closed\r\n\t */\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => {\r\n\t\t\t\t//Handle modal dismiss\r\n\t\t\t\tif (!result || !result.bucket) { return; }\r\n\r\n\t\t\t\t//On edit, find and update the edited item\r\n\t\t\t\tif (result.isEdit) {\r\n\t\t\t\t\tconst toUpdate = this.buckets.find(st => st.id === result.bucket.id);\r\n\t\t\t\t\tObject.assign(toUpdate, result.bucket);\r\n\r\n\t\t\t\t\tthis.filterBuckets();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Bucket \"${result.buckets.name}\" successfully edited.`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.buckets.push(result.bucket);\r\n\r\n\t\t\t\t\tthis.filterBuckets();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Buckets \"${result.bucket.name}\" successfully added.`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"bucketsMain container-fluid\\\">\\r\\n\\t<h1>Buckets</h1>\\r\\n  <div class=\\\"row align-items-center mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n\\t\\t\\t<button (click)=\\\"addBucket()\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> Add Bucket</button>\\r\\n\\t\\t</div>\\r\\n    <div class=\\\"col-4\\\"></div>\\r\\n    <div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Filter Results...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n\\t\\t</div>\\r\\n  </div>\\r\\n  <ngx-datatable #bucketsTable class='material expandable bucketsTable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayBuckets\\\"\\r\\n\\t [sorts]=\\\"[{prop: 'name', dir: 'asc'}]\\\" [sortType]=\\\"'multi'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [limit]=\\\"25\\\">\\r\\n    <ngx-datatable-row-detail [rowHeight]=\\\"100\\\" #TriggerRow (toggle)=\\\"onDetailToggle($event)\\\">\\r\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-row-detail-template>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngx-datatable-row-detail>\\r\\n    <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"1\\\">\\r\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span title=\\\"{{row.description}}\\\">{{row.name}}</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n    </ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Description\\\" prop=\\\"description\\\" [flexGrow]=\\\"4\\\">\\r\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span title=\\\"{{row.description}}\\\">{{row.description}}</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n        <button (click)=\\\"editBucket(row)\\\" class=\\\"mr-1 btn btn-primary\\\" title=\\\"Edit Bucket\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-edit\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"deleteBucket(row)\\\" class=\\\"mr-1 btn btn-danger\\\" title=\\\"Delete Bucket\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-times\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"TriggerAction\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n        <button (click)=\\\"addTrigger(row)\\\" class=\\\"mr-1 btn btn-primary\\\" title=\\\"Add Trigger\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-edit\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n\\t</ngx-datatable>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, Input, ChangeDetectorRef, ViewChild, ElementRef, OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { BucketsService } from './buckets.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { Bucket } from '../models/buckets/bucket';\r\n\r\n@Component({\r\n\tselector: 'buckets-modal',\r\n\ttemplateUrl: './buckets.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./buckets.scss',\r\n\t],\r\n\tproviders: [BucketsService, UtilitiesService],\r\n})\r\nexport class BucketsModalComponent implements OnInit, AfterViewInit {\r\n  @Input() bucket: Bucket = new Bucket();\r\n  @Input() title: string;\r\n  @Input() submitText: string;\r\n\r\n  validationErrors: { [key: string]: string } = {};\r\n\r\n\t@ViewChild('typeRef') typeRef: ElementRef;\r\n\r\n\tconstructor (\r\n\t\tprivate bucketsService: BucketsService, public activeModal: NgbActiveModal,\r\n\t\tprivate toastrService: ToastrService, private cdr: ChangeDetectorRef,\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the add/edit bucket modal.\r\n\t */\r\n\tsubmit(): void {\r\n    if (!this.isBasicInfoValid()) { return; }\r\n\r\n    this.bucketsService\r\n\t\t\t\t.addBucket(this.bucket)\r\n\t\t\t\t.then(bucket => this.activeModal.close({\r\n\t\t\t\t\tbucket,\r\n\t\t\t\t\tisEdit: false,\r\n\t\t\t\t})).catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n  isBasicInfoValid(): boolean {\r\n\t\tif (this.bucket.name && this.bucket.name.trim()) { return true; }\r\n\t\treturn false;\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n<!--\\t\\t<form id=\\\"bucketForm\\\" #bucketForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">-->\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name<i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i></label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"bucket.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" required tabindex=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!name.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tName is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n        </div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"bucket.description\\\" name=\\\"description\\\" tabindex=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n      </div>\\r\\n\\r\\n<!--\\t\\t</form>-->\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!isBasicInfoValid()\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div>\\r\\n\"","module.exports = \"/* @import '/client/node_modules/ng-pick-datetime/styles/picker.min.css'; */\\n.bucketsMain {\\n  padding: 10px 15px; }\\n.bucketsMain #bucketsStatus {\\n  display: inline-block; }\\n.bucketsMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { Bucket } from '../models/buckets/bucket';\r\n\r\n@Injectable()\r\nexport class BucketsService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\tgetAllBuckets(): Promise<Bucket[]> {\r\n\t\treturn this.utils.paginateAll<Bucket>(this.getBuckets.bind(this));\r\n\t}\r\n\r\n\tgetBuckets(page: number = 1): Promise<Bucket[]> {\r\n\t\treturn this.http.get(`/api/buckets?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(Bucket, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\taddBucket(bucket: Bucket): Promise<Bucket> {\r\n\t\treturn this.http.post('/api/buckets', bucket)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Bucket, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { plainToClass, classToPlain, serialize, deserializeArray } from 'class-transformer';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Dashboard } from '../models/dashboard/dashboard';\r\nimport { ExecutionService } from '../execution/execution.service';\r\nimport { DashboardWidget } from '../models/dashboard/dashboardWidget';\r\nimport { WorkflowStatus } from '../models/execution/workflowStatus';\r\n\r\nimport * as csv from 'csvtojson';\r\nimport { Observable, Subscriber } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n    dashboardsChange: Observable<any>;\r\n    observer: Subscriber<any>;\r\n\r\n    constructor(private http: HttpClient, private utils: UtilitiesService, private executionService: ExecutionService) {\r\n        this.dashboardsChange = new Observable((observer) => {\r\n            this.observer = observer;\r\n            this.getDashboards().then(dashboards => this.observer.next(dashboards));\r\n        })\r\n    }\r\n\r\n    emitChange(data: any) {\r\n        if (this.observer) this.getDashboards().then(dashboards => this.observer.next(dashboards));\r\n        return data;\r\n    }\r\n\r\n    newDashboard(dashboard: Dashboard) {\r\n        return this.http.post('api/dashboards', classToPlain(dashboard))\r\n            .toPromise()\r\n            .then((data) => this.emitChange(data))\r\n\t\t\t.then((data: object) => plainToClass(Dashboard, data))\r\n            .catch(this.utils.handleResponseError)\r\n    }\r\n\r\n    updateDashboard(dashboard: Dashboard) {\r\n        return this.http.put('api/dashboards', classToPlain(dashboard))\r\n            .toPromise()\r\n            .then((data) => this.emitChange(data))\r\n\t\t\t.then((data: object) => plainToClass(Dashboard, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n    }\r\n\r\n    deleteDashboard(dashboard: Dashboard) {\r\n        return this.http.delete(`/api/dashboards/${ dashboard.id }`)\r\n            .toPromise()\r\n            .then((data) => this.emitChange(data))\r\n            .catch(this.utils.handleResponseError);\r\n    }\r\n\r\n    getDashboards() : Promise<Dashboard[]> {\r\n        return this.http.get('/api/dashboards')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Dashboard, data))\r\n            .catch(this.utils.handleResponseError);\r\n    }\r\n\r\n    getDashboard(id: string) : Promise<Dashboard> {\r\n        return this.http.get(`/api/dashboards/${ id }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Dashboard, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n    }\r\n\r\n    async getDashboardWithMetadata(id: string) : Promise<Dashboard> {\r\n        const theDashboard: Dashboard = await this.getDashboard(id);\r\n        await Promise.all(theDashboard.widgets.map(widget => this.getWidgetMetadata(widget)));\r\n        return theDashboard;\r\n    }\r\n\r\n    async getWidgetMetadata(widget: DashboardWidget) {\r\n        const testData = \"A,B,C\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\\n1,2,3\\n4,5,6\";\r\n        return widget.setMetadata(await this.parseResult(testData))\r\n\r\n        const options = widget.options;\r\n        if (options.workflow && options.execution && options.action) {\r\n            const workflowStatus: WorkflowStatus = (options.execution == \"latest\") ?\r\n                await this.executionService.getLatestExecution(options.workflow) :\r\n                await this.executionService.getWorkflowStatus(options.execution)\r\n\r\n            const nodeStatus = workflowStatus.node_statuses.find(status => status.node_id == options.action);\r\n            if (nodeStatus) widget.setMetadata(await this.parseResult(nodeStatus.result));\r\n        }\r\n    }\r\n\r\n    async parseResult(result) {\r\n        let headers = [];\r\n        return csv()\r\n            .fromString(result)\r\n            .on('header', row => headers = row)\r\n            .then(data => ({\r\n                headers,\r\n                rows: data.map(Object.values),\r\n                data\r\n            }), err => {\r\n                console.log(err);\r\n                return result\r\n            })\r\n    }\r\n}\r\n","import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport * as jsPDF from 'jspdf';\r\nimport * as html2canvas from 'html2canvas';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { GridsterConfig, GridType, CompactType } from 'angular-gridster2';\r\nimport { Dashboard } from '../models/dashboard/dashboard';\r\n\r\n@Component({\r\n\tselector: 'dashboards-component',\r\n\ttemplateUrl: './dashboards.html',\r\n\tstyleUrls: ['./dashboards.scss'],\r\n\tproviders: [AuthService],\r\n})\r\nexport class DashboardsComponent implements OnInit {\r\n\t@ViewChild('dashboardsMain') main: ElementRef;\r\n\tdashboardName: string;\r\n\tdashboardId: string;\r\n\tparamsSub: any;\r\n\tactiveIFrame: any;\r\n\r\n\toptions: GridsterConfig;\r\n\tdashboard: Dashboard;\r\n\r\n\tgridRows = 0;\r\n\tgridColumns = 8;\r\n\tgridColSize = 125;\r\n\tgridGutterSize = 10;\r\n\tgridDefaultCols = 3;\r\n\t\r\n\tconstructor(\r\n\t\tprivate route: ActivatedRoute, private toastrService: ToastrService,\r\n\t\tprivate http: HttpClient, private dashboardService: DashboardService\r\n\t) { }\r\n\r\n\t/**\r\n\t * On init, get our dashboard name from the route params and grab the dashboard.\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.paramsSub = this.route.params.subscribe(params => {\r\n\t\t\tthis.dashboardId = params.dashboardId;\r\n\t\t\tthis.getDashboard().then(() => this.initGrid());\r\n\t\t});\r\n\t}\r\n\r\n\tinitGrid() {\r\n\t\tthis.gridRows = 0;\r\n\t\tthis.dashboard.widgets.forEach(item => {\r\n\t\t\tlet widgetRows = item.y + item.rows;\r\n\t\t\tif (widgetRows > this.gridRows) this.gridRows = widgetRows;\r\n\t\t});\r\n\r\n\t\tthis.options = {\r\n\t\t\tgridType: GridType.Fixed,\r\n\t\t\tcompactType: CompactType.None,\r\n\t\t\tpushItems: true,\r\n\t\t\tdraggable: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tresizable: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tfixedColWidth: this.gridColSize * 4 / 3,\r\n\t\t\tfixedRowHeight: this.gridColSize * 3 / 4,\r\n\t\t\tminCols: this.gridColumns,\r\n\t\t\tmaxCols: this.gridColumns,\r\n\t\t\tminRows: 1,\r\n\t\t\tmaxRows: this.gridRows,\r\n\t\t\tmaxItemCols: this.gridColumns,\r\n\t\t\tminItemCols: 1,\r\n\t\t\tmaxItemRows: this.gridRows,\r\n\t\t\tminItemRows: 1,\r\n\t\t\tdefaultItemCols: this.gridDefaultCols,\r\n\t\t\tdefaultItemRows: 1\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dashboard by the name specified in the route params.\r\n\t * Loads the dashboard into an iframe currently.\r\n\t */\r\n\tgetDashboard() {\r\n\t\tthis.clearDashboard();\r\n\r\n\t\treturn this.dashboardService.getDashboardWithMetadata(this.dashboardId).then(savedDashboard => {\r\n\t\t\t(savedDashboard) ? this.dashboard = savedDashboard : this.getCustomDashboard();\r\n\t\t})\r\n\t}\r\n\r\n\tclearDashboard() {\r\n\t\tthis.dashboard = null;\r\n\t\tif (this.activeIFrame) {\r\n\t\t\tthis.main.nativeElement.removeChild(this.activeIFrame);\r\n\t\t\tthis.activeIFrame = null\r\n\t\t}\r\n\t}\r\n\r\n\tgetCustomDashboard() {\r\n\t\tthis.http\r\n\t\t\t.get(`customdashboards/${this.dashboardName}/`, { responseType: 'text' })\r\n\t\t\t.toPromise()\r\n\t\t\t.then(data => {\r\n\t\t\t\tthis.activeIFrame = document.createElement('iframe');\r\n\t\t\t\t(this.activeIFrame as any).srcdoc = data;\r\n\t\t\t\tthis.activeIFrame.src = 'data:text/html;charset=utf-8,' + data;\r\n\r\n\t\t\t\tthis.main.nativeElement.appendChild(this.activeIFrame);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving dashboard: ${e.message}`));\r\n\t}\r\n\r\n\tgetGridWidth() {\r\n\t\t//return '900px';\r\n\t\treturn this.gridColumns * Math.ceil(this.gridColSize * 4 / 3 + this.gridGutterSize) + this.gridGutterSize  + 'px';\r\n\t}\r\n\r\n\tgetGridHeight() {\r\n\t\t//return '980px';\r\n\t\treturn this.gridRows * Math.ceil(this.gridColSize * 3 / 4 + this.gridGutterSize) + this.gridGutterSize  + 'px';\r\n\t}\r\n\r\n\tsavePDF() {\r\n\t\treturn window.print();\r\n\t\tvar el = $('#main');//document.getElementById('grid');\r\n\t\tvar HTML_Width = el.width();\r\n\t\tvar HTML_Height = el.height();\r\n\t\tvar top_left_margin = 15;\r\n\t\tvar PDF_Width = HTML_Width + (top_left_margin * 2);\r\n\t\tvar PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);\r\n\t\tvar canvas_image_width = HTML_Width;\r\n\t\tvar canvas_image_height = HTML_Height;\r\n\r\n\t\tvar totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;\r\n\r\n\r\n\t\thtml2canvas(el[0], { allowTaint: true }).then(function (canvas) {\r\n\t\t\tcanvas.getContext('2d');\r\n\r\n\t\t\tconsole.log(canvas.height + \"  \" + canvas.width);\r\n\r\n\r\n\t\t\tvar imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n\t\t\tvar pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);\r\n\t\t\tpdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);\r\n\r\n\r\n\t\t\tfor (var i = 1; i <= totalPDFPages; i++) {\r\n\t\t\t\tpdf.addPage(PDF_Width, PDF_Height);\r\n\t\t\t\tpdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);\r\n\t\t\t}\r\n\r\n\t\t\tpdf.save(\"HTML-Document.pdf\");\r\n\t\t});\r\n\t\t// html2canvas(document.getElementById('grid')).then(canvas => {\r\n\t\t// \t// var img = canvas.toDataURL(\"image/png\");\r\n\t\t// \t// var doc = new jsPDF();\r\n\t\t// \t// doc.addImage(img, 'JPEG', 5, 20);\r\n\t\t// \t// doc.save(`${ this.dashboardName } - report.pdf`);\r\n\r\n\t\t// \t// var width = canvas.width;\r\n\t\t// \t// var height = canvas.height;\r\n\t\t// \t// var millimeters: any = {};\r\n\t\t// \t// millimeters.width = Math.floor(width * 0.264583);\r\n\t\t// \t// millimeters.height = Math.floor(height * 0.264583);\r\n\r\n\t\t// \t// var imgData = canvas.toDataURL(\r\n\t\t// \t// \t'image/png');\r\n\t\t// \t// var doc = new jsPDF(\"p\", \"mm\", \"a4\");\r\n\t\t// \t// doc.deletePage(1);\r\n\t\t// \t// doc.addPage(millimeters.width, millimeters.height);\r\n\t\t// \t// doc.addImage(imgData, 'PNG', 0, 0);\r\n\t\t// \t// doc.save(`${ this.dashboardName } - report.pdf`);\r\n\r\n\t\t// \t//! MAKE YOUR PDF\r\n\t\t// \tvar pdf = new jsPDF('p', 'pt', 'letter');\r\n\r\n\t\t// \tconsole.log(document.getElementById('grid').clientHeight)\r\n\r\n\t\t//     for (var i = 0; i <= document.getElementById('grid').clientHeight/980; i++) {\r\n\t\t//         //! This is all just html2canvas stuff\r\n\t\t//         var srcImg  = canvas;\r\n\t\t//         var sX      = 0;\r\n\t\t//         var sY      = 980*i; // start 980 pixels down for every new page\r\n\t\t//         var sWidth  = 900;\r\n\t\t//         var sHeight = 980;\r\n\t\t//         var dX      = 0;\r\n\t\t//         var dY      = 0;\r\n\t\t//         var dWidth  = 900;\r\n\t\t//         var dHeight = 980;\r\n\r\n\t\t//         var onePageCanvas = document.createElement(\"canvas\");\r\n\t\t//         onePageCanvas.setAttribute('width', '900');\r\n\t\t//         onePageCanvas.setAttribute('height', '980');\r\n\t\t//         var ctx = onePageCanvas.getContext('2d');\r\n\t\t//         // details on this usage of this function: \r\n\t\t//         // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images#Slicing\r\n\t\t//         ctx.drawImage(srcImg,sX,sY,sWidth,sHeight,dX,dY,dWidth,dHeight);\r\n\r\n\t\t//         // document.body.appendChild(canvas);\r\n\t\t//         var canvasDataURL = onePageCanvas.toDataURL(\"image/png\", 1.0);\r\n\r\n\t\t//         // var width         = onePageCanvas.width;\r\n\t\t// \t\t// var height        = onePageCanvas.clientHeight;\r\n\t\t// \t\tvar width = pdf.internal.pageSize.getWidth();\r\n\t\t// \t\tvar height = pdf.internal.pageSize.getHeight();\r\n\t\t// \t\tconsole.log(width, height);\r\n\r\n\t\t//         //! If we're on anything other than the first page,\r\n\t\t//         // add another page\r\n\t\t//         if (i > 0) {\r\n\t\t//             pdf.addPage(612, 792); //8.5\" x 11\" in pts (in*72)\r\n\t\t//         }\r\n\t\t//         //! now we declare that we're working on that page\r\n\t\t//         pdf.setPage(i+1);\r\n\t\t//         //! now we add content to that page!\r\n\t\t//         pdf.addImage(canvasDataURL, 'JPEG', 0, 0, (width*1), (height*1));\r\n\r\n\t\t//     }\r\n\t\t//     //! after the for loop is finished running, we save the pdf.\r\n\t\t//     pdf.save('Test.pdf');\r\n\t//});\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"dashboardsMain\\\" [ngClass]=\\\"{ customDashboard: !dashboard }\\\" #dashboardsMain>\\r\\n\\t<!-- dashboard iframe goes here -->\\r\\n\\t<div *ngIf=\\\"dashboard\\\">\\r\\n\\t\\t<div class=\\\"pl-3\\\">\\r\\n\\t\\t\\t<h1 class=\\\"mb-0\\\">\\r\\n\\t\\t\\t\\t{{ dashboard.name }}\\r\\n\\t\\t\\t\\t<div class=\\\"float-right d-print-none\\\" data-html2canvas-ignore>\\r\\n\\t\\t\\t\\t\\t<a class=\\\"btn btn-primary btn-sm mr-1\\\" [routerLink]=\\\"['/dashboard', dashboardId, 'edit']\\\">Edit</a>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"savePDF()\\\">Save as PDF</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</h1>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div id=\\\"grid\\\" class=\\\"gridster-container m-auto\\\" [style.width]=\\\"getGridWidth()\\\" [style.height]=\\\"getGridHeight()\\\">\\r\\n\\t\\t\\t\\t\\t<gridster class=\\\"displayGrid\\\" [options]=\\\"options\\\">\\r\\n\\t\\t\\t\\t\\t\\t<gridster-item [item]=\\\"item\\\" *ngFor=\\\"let item of dashboard.widgets\\\" class=\\\"p-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- your content here -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"widget\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"item.name\\\" class=\\\"widget-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"text-center\\\">{{ item.name }}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"widget-content\\\" *ngIf=\\\"item.metadata; let metadata\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'bar'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart [datasets]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\" [options]=\\\"item.chartOptions\\\" [legend]=\\\"item.showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"'bar'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</canvas>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'line'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart [datasets]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\" [options]=\\\"item.chartOptions\\\" [legend]=\\\"item.showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"'line'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</canvas>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'pie'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart [data]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\" [chartType]=\\\"'pie'\\\" [legend]=\\\"item.showLegend\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</canvas>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'text'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"item.options.text\\\">{{ item.options.text }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'table'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-datatable class=\\\"material widget-fullscreen\\\" headerHeight=\\\"45\\\" rowHeight=\\\"45\\\" [columnMode]=\\\"'force'\\\" [rows]=\\\"metadata.rows\\\" [columns]=\\\"metadata.columns\\\"></ngx-datatable>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.type == 'kibana'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<iframe class=\\\"widget-fullscreen\\\" [src]=\\\"item.options.embedUrl | safeEmbed\\\"></iframe>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</gridster-item>\\r\\n\\t\\t\\t\\t\\t</gridster>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"#main.customDashboard {\\n  position: absolute;\\n  top: 50px;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden; }\\n\\n#main.customDashboard iframe {\\n  position: absolute;\\n  border: none;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%; }\\n\\n#main.dashboardsMain {\\n  padding: 10px 15px; }\\n\\ngridster.displayGrid {\\n  background: none; }\\n\\n.widget {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\n.widget-header {\\n  flex-basis: content; }\\n\\n.widget-content {\\n  flex: 1;\\n  position: relative; }\\n\\n.widget-fullscreen {\\n  overflow-y: scroll !important;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  left: 0;\\n  bottom: 0; }\\n\"","module.exports = \"<div id=\\\"main\\\" class=\\\"manageDashboardMain\\\">\\r\\n    <h1>{{ (existingDashboard) ? 'Edit' : 'New' }} Dashboard\\r\\n        <!-- <input type=\\\"text\\\" class=\\\"my-auto mr-3\\\" [(ngModel)]=\\\"dashboard.name\\\" name=\\\"dashboardName\\\" placeholder=\\\"Dashboard Name\\\" required> -->\\r\\n        <button *ngIf=\\\"existingDashboard\\\" class=\\\"btn btn-danger btn-lg float-right\\\" (click)=\\\"delete()\\\"><i\\r\\n                class=\\\"fa fa-trash\\\"></i></button>\\r\\n    </h1>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"float-left\\\">\\r\\n                <div class=\\\"form-group col-12\\\">\\r\\n                    <form #myForm=\\\"ngForm\\\" [class.was-validated]=\\\"submitted\\\" novalidate>\\r\\n                        <div class=\\\"d-flex\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"dashboard.name\\\" name=\\\"dashboardName\\\"\\r\\n                                placeholder=\\\"Dashboard Name\\\" required>\\r\\n                            <button class=\\\"btn btn-primary ml-3\\\" (click)=\\\"save()\\\">Save</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"invalid-feedback\\\" [class.d-block]=\\\"!myForm.form.valid && submitted\\\">\\r\\n                            Please enter a name for the dashboard.\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-12\\\">\\r\\n                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\" #accordion>\\r\\n                        <div class=\\\"card card-default my-1\\\">\\r\\n                            <div class=\\\"card-heading playbook-heading\\\" title=\\\"Widgets\\\">\\r\\n                                <h5 class=\\\"card-title my-auto py-2 ml-3\\\">Add Widget</h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-collapse action-panel\\\">\\r\\n                                <div class=\\\"card-body my-auto p-3\\\">\\r\\n                                    <div *ngFor=\\\"let widget of widgets\\\" class=\\\"card card-default actionPanel my-1\\\"\\r\\n                                        dnd-draggable [dragEnabled]=\\\"true\\\" [dragData]=\\\"widget\\\"\\r\\n                                        (dblclick)=\\\"addWidget(widget.name)\\\" [title]=\\\"widget.label\\\">\\r\\n                                        <div class=\\\"card-body my-auto p-2\\\">\\r\\n                                            <span>{{ widget.label }}</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div id=\\\"grid\\\" class=\\\"gridster-container\\\" [style.width]=\\\"getGridWidth()\\\" [style.height]=\\\"getGridHeight()\\\">\\r\\n                <gridster class=\\\"rounded\\\" [options]=\\\"options\\\" dnd-droppable (onDropSuccess)=\\\"addWidget($event.dragData.name)\\\">\\r\\n                    <gridster-item [item]=\\\"item\\\" *ngFor=\\\"let item of dashboard.widgets\\\" class=\\\"p-3 rounded\\\">\\r\\n                        <!-- your content here -->\\r\\n                        <div class=\\\"widget\\\">\\r\\n                            <div class=\\\"widget-header\\\">\\r\\n                                <a class=\\\"text-secondary float-left\\\" href=\\\"#\\\" (click)=\\\"editWidget($event, item)\\\"><i\\r\\n                                        class=\\\"fa fa-gear\\\"></i></a>\\r\\n\\r\\n                                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"removeWidget($event, item)\\\"\\r\\n                                    aria-label=\\\"Close\\\">\\r\\n                                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                                </button>\\r\\n\\r\\n                                <h5 *ngIf=\\\"item.name\\\" class=\\\"text-center\\\">{{ item.name }}</h5>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"widget-content\\\" *ngIf=\\\"item.metadata; let metadata\\\">\\r\\n                                <div *ngIf=\\\"item.type == 'bar'\\\">\\r\\n                                    <canvas baseChart [datasets]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\"\\r\\n                                        [options]=\\\"item.chartOptions\\\" [legend]=\\\"item.showLegend\\\" [chartType]=\\\"'bar'\\\">\\r\\n                                    </canvas>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"item.type == 'line'\\\">\\r\\n                                    <canvas baseChart [datasets]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\"\\r\\n                                        [options]=\\\"item.chartOptions\\\" [legend]=\\\"item.showLegend\\\" [chartType]=\\\"'line'\\\">\\r\\n                                    </canvas>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"item.type == 'pie'\\\">\\r\\n                                    <canvas baseChart [data]=\\\"metadata.chartData\\\" [labels]=\\\"metadata.chartLabels\\\"\\r\\n                                        [chartType]=\\\"'pie'\\\" [legend]=\\\"item.showLegend\\\">\\r\\n                                    </canvas>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"item.type == 'text'\\\">\\r\\n                                    <p *ngIf=\\\"item.options.text\\\">{{ item.options.text }}</p>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"item.type == 'table'\\\">\\r\\n                                    <ngx-datatable class=\\\"material widget-fullscreen\\\" headerHeight=\\\"45\\\" rowHeight=\\\"45\\\"\\r\\n                                        [columnMode]=\\\"'force'\\\" [rows]=\\\"metadata.rows\\\" [columns]=\\\"metadata.columns\\\">\\r\\n                                    </ngx-datatable>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"item.type == 'kibana'\\\">\\r\\n                                    <iframe class=\\\"widget-fullscreen\\\"\\r\\n                                        [src]=\\\"item.options.embedUrl | safeEmbed\\\"></iframe>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </gridster-item>\\r\\n                </gridster>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".manageDashboardMain {\\n  padding: 10px 15px; }\\n\\n.manageDashboardMain .card-default > .card-heading {\\n  background-color: #eaf2f6;\\n  font-weight: bolder; }\\n\\n.gridster-container {\\n  margin: auto; }\\n\\n.widget {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\n.widget-header {\\n  flex-basis: content; }\\n\\n.widget-content {\\n  flex: 1;\\n  position: relative; }\\n\\n.widget-fullscreen {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  left: 0;\\n  bottom: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { GridsterConfig, GridType, CompactType } from 'angular-gridster2';\r\nimport { DashboardWidget, BarChartWidget, PieChartWidget, LineChartWidget, TextWidget, KibanaWidget, TableWidget } from '../models/dashboard/dashboardWidget';\r\nimport { Dashboard } from '../models/dashboard/dashboard';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WidgetModalComponent } from './widget.modal.component';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Component({\r\n    selector: 'manage-dashboards-component',\r\n    templateUrl: './manage.dashboards.component.html',\r\n    styleUrls: ['./manage.dashboards.component.scss']\r\n})\r\nexport class ManageDashboardsComponent implements OnInit {\r\n\r\n    options: GridsterConfig;\r\n\r\n    dashboard: Dashboard = new Dashboard();\r\n    existingDashboard = false;\r\n    submitted = false;\r\n\r\n    gridRows = 16;\r\n    gridColumns = 8;\r\n    gridColSize = 75;\r\n    gridGutterSize = 10;\r\n    gridDefaultCols = 3;\r\n\r\n    widgets = [\r\n        {name: 'text', label: 'Text Widget'},\r\n        {name: 'table', label: 'Table Widget'},\r\n        {name: 'bar', label: 'Bar Graph'},\r\n        {name: 'line', label: 'Line Graph'},\r\n        {name: 'pie', label: 'Pie Graph'},\r\n        {name: 'kibana', label: 'Kibana Embed'},\r\n    ];\r\n\r\n    constructor(\r\n        private dashboardService: DashboardService, \r\n        private toastrService: ToastrService,\r\n        private activeRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private modalService: NgbModal,\r\n        private utils: UtilitiesService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activeRoute.params.subscribe(params => {\r\n            if (params.dashboardId) {\r\n                this.existingDashboard = true;\r\n                this.dashboardService.getDashboardWithMetadata(params.dashboardId).then(dashboard => {\r\n                    this.dashboard = dashboard;\r\n                });\r\n            }\r\n\r\n            this.initGrid();\r\n        })\r\n    }\r\n\r\n    initGrid() {\r\n        this.options = {\r\n            gridType: GridType.Fixed,\r\n            compactType: CompactType.None,\r\n            pushItems: true,\r\n            draggable: {\r\n                enabled: true\r\n            },\r\n            resizable: {\r\n                enabled: true\r\n            },\r\n            fixedColWidth: this.gridColSize * 4/3,\r\n            fixedRowHeight: this.gridColSize * 3/4,\r\n            minCols: this.gridColumns,\r\n            maxCols: this.gridColumns,\r\n            minRows: 1,\r\n            maxRows: this.gridRows,\r\n            maxItemCols: this.gridColumns,\r\n            minItemCols: 1,\r\n            maxItemRows: this.gridRows,\r\n            minItemRows: 1,\r\n            defaultItemCols: this.gridDefaultCols,\r\n            defaultItemRows: 1\r\n        };\r\n    }\r\n\r\n    getGridWidth() {\r\n        return this.gridColumns * Math.ceil(this.gridColSize * 4/3 + this.gridGutterSize) + this.gridGutterSize + 'px';\r\n    }\r\n\r\n    getGridHeight() {\r\n        return this.gridRows * Math.ceil(this.gridColSize * 3/4 + this.gridGutterSize) + this.gridGutterSize + 'px';\r\n    }\r\n\r\n    changedOptions() {\r\n        this.options.api.optionsChanged();\r\n    }\r\n\r\n    editWidget($event: Event, widget) {\r\n        $event.preventDefault();\r\n        const modalRef = this.modalService.open(WidgetModalComponent);\r\n\t\tmodalRef.componentInstance.widget = widget;\r\n    }\r\n\r\n    removeWidget($event: Event, widget) {\r\n        $event.preventDefault();\r\n        this.dashboard.widgets.splice(this.dashboard.widgets.indexOf(widget), 1);\r\n    }\r\n\r\n    addWidget(type: string): void {\r\n        let widget: DashboardWidget;\r\n\r\n        switch (type) {\r\n            case \"bar\":\r\n                widget = new BarChartWidget();\r\n            break;\r\n            case \"line\":\r\n                widget = new LineChartWidget();\r\n            break;\r\n            case \"pie\":\r\n                widget = new PieChartWidget();\r\n            break;\r\n            case \"text\":\r\n                widget = new TextWidget();\r\n            break;\r\n            case \"table\":\r\n                widget = new TableWidget();\r\n            break;\r\n            case \"kibana\":\r\n                widget = new KibanaWidget();\r\n            break;\r\n        }\r\n\r\n        const modalRef = this.modalService.open(WidgetModalComponent);\r\n        modalRef.componentInstance.widget = widget;\r\n        modalRef.componentInstance.typeLabel = this.widgets.find(w => w.name == type).label;\r\n\t\tmodalRef.result.then(addedWidget => {\r\n\t\t\tthis.dashboard.widgets.push(addedWidget);\r\n\t\t}).catch(() => null)\r\n    }\r\n    \r\n    save() {\r\n        if (!this.dashboard.name) return this.submitted = true;\r\n\r\n        (this.existingDashboard) ? this.dashboardService.updateDashboard(this.dashboard) : this.dashboardService.newDashboard(this.dashboard);\r\n        this.toastrService.success(`\"${ this.dashboard.name }\" Saved`);\r\n\r\n        this.router.navigate(['/dashboard', this.dashboard.id]);\r\n    }\r\n\r\n    async delete() {\r\n        await this.utils.confirm(`Are you sure you want to delete this dashboard?`);\r\n\r\n        const dashboardName = this.dashboard.name;\r\n        this.dashboardService.deleteDashboard(this.dashboard);\r\n        this.toastrService.success(`\"${ dashboardName }\" Deleted`);\r\n        this.router.navigate(['/dashboard/new']);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Configure {{ typeLabel }}</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"title\\\">Title</label>\\r\\n                    <input label=\\\"title\\\" type=\\\"text\\\" [(ngModel)]=\\\"widget.name\\\" class=\\\"form-control\\\" placeholder=\\\"Title (Optional)\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!['text', 'kibana'].includes(widget.type)\\\" class=\\\"col-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"workflow\\\">Workflow</label>\\r\\n                  <div>\\r\\n                      <select [(ngModel)]=\\\"widget.options.workflow\\\" class=\\\"custom-select\\\" (change)=\\\"updateExecutions()\\\">\\r\\n                          <option *ngFor=\\\"let x of workflows\\\" [value]=\\\"x.id\\\">{{x.text}}</option>\\r\\n                      </select>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"widget.options.workflow\\\" class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"workflow\\\">Execution</label>\\r\\n                    <div>\\r\\n                        <select [(ngModel)]=\\\"widget.options.execution\\\" class=\\\"custom-select\\\" (change)=\\\"updateNodeResults()\\\">\\r\\n                            <option *ngFor=\\\"let x of executions\\\" [value]=\\\"x.id\\\">{{x.text}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"widget.options.execution\\\" class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"action\\\">Action</label>\\r\\n                    <div>\\r\\n                        <select [(ngModel)]=\\\"widget.options.action\\\" class=\\\"custom-select\\\">\\r\\n                            <option *ngFor=\\\"let x of nodeResults\\\" [value]=\\\"x.id\\\">{{x.text}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"widget.type == 'text'\\\" class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"text\\\">Text</label>\\r\\n                    <textarea name=\\\"text\\\" rows=\\\"4\\\" [(ngModel)]=\\\"widget.options.text\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"widget.type == 'kibana'\\\" class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"embedUrl\\\">Embed Url</label>\\r\\n                    <input label=\\\"embedUrl\\\" type=\\\"text\\\" [(ngModel)]=\\\"widget.options.embedUrl\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Close</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.close(widget)\\\">Save</button>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DashboardWidget } from '../models/dashboard/dashboardWidget';\r\nimport { ExecutionService } from '../execution/execution.service';\r\nimport { PlaybookService } from '../playbook/playbook.service';\r\n\r\n@Component({\r\n    selector: 'widget-modal-component',\r\n    templateUrl: './widget.modal.component.html',\r\n    styleUrls: ['./widget.modal.component.scss']\r\n})\r\nexport class WidgetModalComponent implements OnInit {\r\n\r\n    @Input() widget: DashboardWidget;\r\n    typeLabel: string = 'Widget';\r\n\r\n    workflows: any[] = [];\r\n    executions: any[] = [];\r\n    nodeResults: any[] = [];\r\n\r\n    constructor(public activeModal: NgbActiveModal, private executionService: ExecutionService, private playbookService: PlaybookService) { }\r\n\r\n    ngOnInit() {\r\n        this.updateWorkflows();\r\n        if (this.widget.options.workflow) {\r\n            this.updateExecutions();\r\n        }\r\n    }\r\n\r\n    async updateWorkflows() {\r\n        const workflows = await this.executionService.getWorkflows();\r\n        const workflowOptions = [];\r\n        workflows.forEach(workflow => {\r\n            workflowOptions.push({\r\n                id: workflow.id,\r\n                text: workflow.name,\r\n            });\r\n        });\r\n        this.workflows = workflowOptions;\r\n    }\r\n\r\n    async updateExecutions() {\r\n        const workflowId = this.widget.options.workflow;\r\n        const workflowStatuses = await this.executionService.getAllWorkflowStatuses();\r\n        this.executions = [{id: 'latest', text: 'Latest'}].concat(workflowStatuses\r\n                            .filter(status => status.workflow_id == workflowId && status.status == 'completed')\r\n                            .map(status => ({ id: status.execution_id, text: status.completed_at_local})))\r\n\r\n        this.widget.options.execution = 'latest';\r\n        this.updateNodeResults();\r\n    }\r\n\r\n    async updateNodeResults() {\r\n        const workflowId = this.widget.options.workflow;\r\n        const executionId = this.widget.options.execution;\r\n\r\n        if (executionId == 'latest') {\r\n            const workflow = await this.playbookService.loadWorkflow(workflowId);\r\n            this.nodeResults = workflow.actions.map(action => ({ id: action.id, text: action.name }));\r\n        }\r\n        else {\r\n            const workflowStatus = await this.executionService.getWorkflowStatus(executionId);\r\n            this.nodeResults = workflowStatus.node_statuses.map(status => ({ id: status.node_id, text: status.name }));\r\n        }\r\n\r\n        if (this.nodeResults.length > 0)\r\n            this.widget.options.action = this.nodeResults[0].id;\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, OnInit, AfterViewChecked, ElementRef, ViewChild,\r\n\tChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { interval } from 'rxjs';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ExecutionService } from './execution.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { WorkflowStatus, WorkflowStatuses } from '../models/execution/workflowStatus';\r\nimport { WorkflowStatusEvent } from '../models/execution/workflowStatusEvent';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { NodeStatusEvent } from '../models/execution/nodeStatusEvent';\r\nimport { Argument } from '../models/playbook/argument';\r\nimport { GenericObject } from '../models/genericObject';\r\nimport { NodeStatus, NodeStatuses } from '../models/execution/nodeStatus';\r\n\r\nimport { ExecutionVariableModalComponent } from './execution.variable.modal.component';\r\nimport { EnvironmentVariable } from '../models/playbook/environmentVariable';\r\nimport { NodeStatusSummary } from '../models/execution/nodeStatusSummary';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n\tselector: 'execution-component',\r\n\ttemplateUrl: './execution.html',\r\n\tstyleUrls: [\r\n\t\t'./execution.scss',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [AuthService],\r\n})\r\nexport class ExecutionComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n\t@ViewChild('nodeStatusContainer') nodeStatusContainer: ElementRef;\r\n\t@ViewChild('nodeStatusTable') nodeStatusTable: DatatableComponent;\r\n\r\n\tschedulerStatus: string;\r\n\tworkflowStatuses: WorkflowStatus[] = [];\r\n\tdisplayWorkflowStatuses: WorkflowStatus[] = [];\r\n\tworkflows: Workflow[] = [];\r\n\tavailableWorkflows: Select2OptionData[] = [];\r\n\tworkflowSelectConfig: Select2Options;\r\n\tselectedWorkflow: Workflow;\r\n\tloadedWorkflowStatus: WorkflowStatus;\r\n\tnodeStatusComponentWidth: number;\r\n\tworkflowStatusActions: GenericObject;\r\n\tworkflowStatusStartedRelativeTimes: { [key: string]: string } = {};\r\n\tworkflowStatusCompletedRelativeTimes: { [key: string]: string } = {};\r\n\tnodeStatusStartedRelativeTimes: { [key: string]: string } = {};\r\n\tnodeStatusCompletedRelativeTimes: { [key: string]: string } = {};\r\n\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\tworkflowStatusEventSource: any;\r\n\tnodeStatusEventSource: any;\r\n\trecalculateTableCallback: any;\r\n\r\n\tconstructor(\r\n\t\tprivate executionService: ExecutionService, private authService: AuthService, private cdr: ChangeDetectorRef,\r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService,\r\n\t\tprivate modalService: NgbModal, private router: Router\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component init, set up our workflow select2 config.\r\n\t * Also get workflows to select, workflow statuses to display in the datatable.\r\n\t * Set up SSEs for workflow status and action status to add/update data in our datatables.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.workflowSelectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select a Workflow',\r\n\t\t};\r\n\t\tthis.workflowStatusActions = {\r\n\t\t\tresume: 'resume',\r\n\t\t\tpause: 'pause',\r\n\t\t\tabort: 'abort',\r\n\t\t};\r\n\r\n\t\tthis.getWorkflows();\r\n\t\tthis.getWorkflowStatuses();\r\n\t\tthis.getWorkflowStatusSSE();\r\n\t\tthis.getNodeStatusSSE();\r\n\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterWorkflowStatuses());\r\n\r\n\t\tinterval(30000).subscribe(() => {\r\n\t\t\tthis.recalculateRelativeTimes();\r\n\t\t});\r\n\r\n\t\tthis.recalculateTableCallback = (e: any) => {\r\n\t\t\tif (this.nodeStatusTable && this.nodeStatusTable.recalculate) {\r\n\t\t\t\tif (Array.isArray(this.nodeStatusTable.rows))\r\n\t\t\t\t\tthis.nodeStatusTable.rows = [...this.nodeStatusTable.rows];\r\n\t\t\t\tthis.nodeStatusTable.recalculate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$(document).on('shown.bs.modal', '.nodeStatusModal', this.recalculateTableCallback)\r\n\t}\r\n\r\n\t/**\r\n\t * This angular function is used primarily to recalculate column widths for execution results table.\r\n\t */\r\n\tngAfterViewChecked(): void {\r\n\t\t// Check if the table size has changed, and recalculate.\r\n\t\tif (this.nodeStatusTable && this.nodeStatusTable.recalculate &&\r\n\t\t\t(this.nodeStatusContainer.nativeElement.clientWidth !== this.nodeStatusComponentWidth)) {\r\n\t\t\tthis.nodeStatusComponentWidth = this.nodeStatusContainer.nativeElement.clientWidth;\r\n\t\t\tthis.nodeStatusTable.recalculate();\r\n\t\t\tthis.cdr.detectChanges();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Closes our SSEs on component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tif (this.workflowStatusEventSource && this.workflowStatusEventSource.close) {\r\n\t\t\tthis.workflowStatusEventSource.close();\r\n\t\t}\r\n\t\tif (this.nodeStatusEventSource && this.nodeStatusEventSource.close) {\r\n\t\t\tthis.nodeStatusEventSource.close();\r\n\t\t}\r\n\t\tif (this.recalculateTableCallback) {\r\n\t\t\t$(document).off('shown.bs.modal', '.nodeStatusModal', this.recalculateTableCallback)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Filters out the workflow statuses based on the value in the search/filter box.\r\n\t * Checks against various parameters on the workflow statuses to set our display workflow statuses.\r\n\t */\r\n\tfilterWorkflowStatuses(): void {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayWorkflowStatuses = this.workflowStatuses.filter((s) => {\r\n\t\t\treturn s.name.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\ts.status.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\t(s.node_status &&\r\n\t\t\t\t\t(s.node_status.name.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\t\ts.node_status.label.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\t\ts.node_status.app_name.toLocaleLowerCase().includes(searchFilter)));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of workflow statuses from the server for initial population.\r\n\t */\r\n\tgetWorkflowStatuses(): void {\r\n\t\tthis.executionService\r\n\t\t\t.getAllWorkflowStatuses()\r\n\t\t\t.then(workflowStatuses => {\r\n\t\t\t\tworkflowStatuses.forEach(workflowStatus => {\r\n\t\t\t\t\tthis.calculateLocalizedTimes(workflowStatus);\r\n\t\t\t\t});\r\n\t\t\t\tthis.displayWorkflowStatuses = this.workflowStatuses = workflowStatuses;\r\n\t\t\t\tthis.recalculateRelativeTimes();\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving workflow statuses: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates an EventSource for workflow statuses from the server. Binds various events to the event handler.\r\n\t */\r\n\tgetWorkflowStatusSSE(): void {\r\n\t\tthis.authService.getEventSource('/api/streams/workflowqueue/workflow_status')\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.workflowStatusEventSource = eventSource;\r\n\t\t\t\tthis.workflowStatusEventSource.onerror = (e: any) => this.statusEventErrorHandler(e);\r\n\t\t\t\tObject.values(WorkflowStatuses)\r\n\t\t\t\t\t  .forEach(status => this.workflowStatusEventSource.addEventListener(status, (e: any) => this.workflowStatusEventHandler(e)));\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles an EventSource message for Workflow Status.\r\n\t * Updates existing workflow statuses for status updates or adds new ones to the list for display.\r\n\t * @param message EventSource message for workflow status\r\n\t */\r\n\tworkflowStatusEventHandler(message: any): void {\r\n\t\tconst workflowStatusEvent = plainToClass(WorkflowStatusEvent, (JSON.parse(message.data) as object));\r\n\t\tconsole.log(workflowStatusEvent);\r\n\r\n\t\tconst matchingWorkflowStatus = this.workflowStatuses.find(ws => ws.execution_id === workflowStatusEvent.execution_id);\r\n\r\n\t\tif (matchingWorkflowStatus) {\r\n\t\t\tmatchingWorkflowStatus.status = workflowStatusEvent.status;\r\n\r\n\t\t\tswitch (message.type) {\r\n\t\t\t\tcase WorkflowStatuses.PENDING:\r\n\t\t\t\t\tdelete matchingWorkflowStatus.node_status;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WorkflowStatuses.EXECUTING:\r\n\t\t\t\t\tif (!matchingWorkflowStatus.started_at) {\r\n\t\t\t\t\t\tmatchingWorkflowStatus.started_at = workflowStatusEvent.started_at;\r\n\t\t\t\t\t\tthis.workflowStatusStartedRelativeTimes[matchingWorkflowStatus.execution_id] =\r\n\t\t\t\t\t\t\tthis.utils.getRelativeLocalTime(workflowStatusEvent.started_at);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatchingWorkflowStatus.user = workflowStatusEvent.user;\r\n\t\t\t\t\tmatchingWorkflowStatus.node_status = workflowStatusEvent.node_status;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WorkflowStatuses.PAUSED:\r\n\t\t\t\tcase WorkflowStatuses.AWAITING_DATA:\r\n\t\t\t\t//case 'resumed':\r\n\t\t\t\t//case 'triggered':\r\n\t\t\t\t\tmatchingWorkflowStatus.node_status = workflowStatusEvent.node_status;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WorkflowStatuses.COMPLETED:\r\n\t\t\t\t\t// Add a delay to ensure completed status is updated in quick executing workflows\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tmatchingWorkflowStatus.completed_at = workflowStatusEvent.completed_at;\r\n\t\t\t\t\t\tthis.workflowStatusCompletedRelativeTimes[matchingWorkflowStatus.execution_id] =\r\n\t\t\t\t\t\t\tthis.utils.getRelativeLocalTime(workflowStatusEvent.completed_at);\r\n\t\t\t\t\t\tdelete matchingWorkflowStatus.node_status;\r\n\t\t\t\t\t}, 250);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase WorkflowStatuses.ABORTED:\r\n\t\t\t\t\tmatchingWorkflowStatus.completed_at = workflowStatusEvent.completed_at;\r\n\t\t\t\t\tthis.workflowStatusCompletedRelativeTimes[matchingWorkflowStatus.execution_id] =\r\n\t\t\t\t\t\tthis.utils.getRelativeLocalTime(workflowStatusEvent.completed_at);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.toastrService.warning(`Unknown Workflow Status SSE Type: ${message.type}.`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.calculateLocalizedTimes(matchingWorkflowStatus);\r\n\t\t} else {\r\n\t\t\tconst newWorkflowStatus = workflowStatusEvent.toNewWorkflowStatus();\r\n\t\t\tthis.calculateLocalizedTimes(newWorkflowStatus);\r\n\t\t\tthis.workflowStatuses.push(newWorkflowStatus);\r\n\t\t\t// Induce change detection by slicing array\r\n\t\t\tthis.workflowStatuses = this.workflowStatuses.slice();\r\n\t\t}\r\n\r\n\t\tthis.filterWorkflowStatuses();\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates an EventSource for action statuses from the server. Binds various events to the event handler.\r\n\t */\r\n\tgetNodeStatusSSE(workflowExecutionId: string = null): void {\r\n\t\tif (this.nodeStatusEventSource) this.nodeStatusEventSource.close();\r\n\r\n\t\tlet url = `/api/streams/workflowqueue/actions?summary=true`;\r\n\t\tif (workflowExecutionId) url += `&workflow_execution_id=${ workflowExecutionId }`;\r\n\r\n\t\tthis.authService.getEventSource(url)\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.nodeStatusEventSource = eventSource;\r\n\t\t\t\tthis.nodeStatusEventSource.onerror = (e: any) => this.statusEventErrorHandler(e);\r\n\r\n\t\t\t\tObject.values(NodeStatuses)\r\n\t\t\t\t\t  .forEach(status => this.nodeStatusEventSource.addEventListener(status, (e: any) => this.nodeStatusEventHandler(e)));\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles an EventSource message for Action Status.\r\n\t * Updates the parent workflow status' current_node if applicable.\r\n\t * Will add/update action statuses for display if the parent workflow execution is 'loaded' in the modal.\r\n\t * @param message EventSource message for action status\r\n\t */\r\n\tnodeStatusEventHandler(message: any): void {\r\n\t\tconst nodeStatusEvent = plainToClass(NodeStatusEvent, (JSON.parse(message.data) as object));\r\n\t\tconsole.log(nodeStatusEvent);\r\n\r\n\t\t// if we have a matching workflow status, update the current app/action info.\r\n\t\tconst matchingWorkflowStatus = this.workflowStatuses\r\n\t\t\t.find(ws => ws.execution_id === nodeStatusEvent.execution_id);\r\n\r\n\t\tif (matchingWorkflowStatus) {\r\n\t\t\tmatchingWorkflowStatus.node_status = plainToClass(NodeStatusSummary, {\r\n\t\t\t\texecution_id: nodeStatusEvent.execution_id,\r\n\t\t\t\tid: nodeStatusEvent.node_id,\r\n\t\t\t\tname: nodeStatusEvent.name,\r\n\t\t\t\tapp_name: nodeStatusEvent.app_name,\r\n\t\t\t\tlabel: nodeStatusEvent.label,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// also add this to the modal if possible, or update the existing data.\r\n\t\tif (this.loadedWorkflowStatus && this.loadedWorkflowStatus.execution_id === nodeStatusEvent.execution_id) {\r\n\t\t\tconst matchingNodeStatus = this.loadedWorkflowStatus.node_statuses\r\n\t\t\t\t.find(r => r.execution_id === nodeStatusEvent.execution_id);\r\n\r\n\t\t\tif (matchingNodeStatus) {\r\n\t\t\t\tmatchingNodeStatus.status = nodeStatusEvent.status;\r\n\r\n\t\t\t\tswitch (message.type) {\r\n\t\t\t\t\tcase NodeStatuses.EXECUTING:\r\n\t\t\t\t\t\tmatchingNodeStatus.started_at = nodeStatusEvent.started_at;\r\n\t\t\t\t\t\tthis.nodeStatusStartedRelativeTimes[matchingNodeStatus.execution_id] =\r\n\t\t\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatusEvent.started_at);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase NodeStatuses.SUCCESS:\r\n\t\t\t\t\tcase NodeStatuses.FAILURE:\r\n\t\t\t\t\t\tmatchingNodeStatus.completed_at = nodeStatusEvent.completed_at;\r\n\t\t\t\t\t\tmatchingNodeStatus.result = nodeStatusEvent.result;\r\n\t\t\t\t\t\tthis.nodeStatusCompletedRelativeTimes[matchingNodeStatus.execution_id] =\r\n\t\t\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatusEvent.completed_at);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase NodeStatuses.AWAITING_DATA:\r\n\t\t\t\t\t\t// don't think anything needs to happen here\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis.toastrService.warning(`Unknown Action Status SSE Type: ${message.type}.`);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.calculateLocalizedTimes(matchingNodeStatus);\r\n\t\t\t} else {\r\n\t\t\t\tconst newNodeStatus = nodeStatusEvent.toNewNodeStatus();\r\n\t\t\t\tthis.calculateLocalizedTimes(newNodeStatus);\r\n\t\t\t\tthis.loadedWorkflowStatus.node_statuses.push(newNodeStatus);\r\n\t\t\t\t// Induce change detection by slicing array\r\n\t\t\t\tthis.loadedWorkflowStatus.node_statuses = this.loadedWorkflowStatus.node_statuses.slice();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.filterWorkflowStatuses();\r\n\t}\r\n\r\n\tstatusEventErrorHandler(e: any) {\r\n\t\tif (this.nodeStatusEventSource && this.nodeStatusEventSource.close)\r\n\t\t\tthis.nodeStatusEventSource.close();\r\n\t\tif (this.workflowStatusEventSource && this.workflowStatusEventSource.close)\r\n\t\t\tthis.workflowStatusEventSource.close();\r\n\r\n\t\tconst options = {backdrop: undefined, closeButton: false, buttons: { ok: { label: 'Reload Page' }}}\r\n\t\tthis.utils\r\n\t\t\t.alert('The server stopped responding. Reload the page to try again.', options)\r\n\t\t\t.then(() => location.reload(true))\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the workflow status endpoint to command a non-finished workflow to perform some action.\r\n\t * @param workflowStatus WorkflowStatus to perform the action\r\n\t * @param actionName Name of action to take (e.g. pause, resume, abort)\r\n\t */\r\n\tperformWorkflowStatusAction(workflowStatus: WorkflowStatus, actionName: string): void {\r\n\t\tthis.executionService\r\n\t\t\t.performWorkflowStatusAction(workflowStatus.execution_id, actionName)\r\n\t\t\t.then(() => this.toastrService.success(`Successfully told ${workflowStatus.name} to  ${actionName}`))\r\n\t\t\t.catch(e => this.toastrService.error(`Error performing ${actionName} on workflow: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of playbooks and workflows from the server and compiles them into a list for selection.\r\n\t */\r\n\tgetWorkflows(): void {\r\n\t\tthis.executionService\r\n\t\t\t.getWorkflows()\r\n\t\t\t.then(workflows => {\r\n\t\t\t\t// Map all of the playbook's workflows and collapse them into a single top-level array.\r\n\t\t\t\tthis.workflows = workflows\r\n\r\n\t\t\t\tconst workflowSelectData: Select2OptionData[] = [{ id: '', text: '' }];\r\n\r\n\t\t\t\tworkflows.forEach(workflow => {\r\n\t\t\t\t\tworkflowSelectData.push({\r\n\t\t\t\t\t\tid: workflow.id,\r\n\t\t\t\t\t\ttext: `${workflow.name}`,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.availableWorkflows = workflowSelectData;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Executes a given workflow. Uses the selected workflow (specified via the select2 box).\r\n\t */\r\n\texecuteSelectedWorkflow(environmentVariables: EnvironmentVariable[] = []): void {\r\n\t\tthis.executionService.addWorkflowToQueue(this.selectedWorkflow.id, null, environmentVariables)\r\n\t\t\t.then((workflowStatus: WorkflowStatus) => {\r\n\t\t\t\tthis.toastrService.success(`Starting <b>${this.selectedWorkflow.name}</b>`);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error executing workflow: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies the selected workflow from the select2. Used because in at least the version of select2 component we have,\r\n\t * There is no two-way data binding available.\r\n\t * @param event Event fired from the workflow select2 change.\r\n\t */\r\n\tworkflowSelectChange(event: any): void {\r\n\t\tif (!event.value || event.value === '') {\r\n\t\t\tthis.selectedWorkflow = null;\r\n\t\t} else {\r\n\t\t\tthis.selectedWorkflow = this.workflows.find(w => w.id === event.value);\r\n\t\t\tthis.executionService.loadWorkflow(this.selectedWorkflow.id).then(workflow => {\r\n\t\t\t\tif (this.selectedWorkflow.id == workflow.id) this.selectedWorkflow = workflow;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\topenVariableModal() {\r\n\t\tconst modalRef = this.modalService.open(ExecutionVariableModalComponent);\r\n\t\tmodalRef.componentInstance.workflow = this.selectedWorkflow;\r\n\t\tmodalRef.result.then(variables => {\r\n\t\t\tthis.executeSelectedWorkflow(variables);\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal that contains the action results for a given workflow status.\r\n\t * @param event JS Event from the hyperlink click\r\n\t * @param workflowStatus Workflow Status to get action results for\r\n\t */\r\n\topenNodeStatusModal(event: Event, workflowStatus: WorkflowStatus): void {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet nodeResultsPromise: Promise<void>;\r\n\t\tif (this.loadedWorkflowStatus && this.loadedWorkflowStatus.execution_id === workflowStatus.execution_id) {\r\n\t\t\tnodeResultsPromise = Promise.resolve();\r\n\t\t} else {\r\n\t\t\tnodeResultsPromise = this.executionService.getWorkflowStatus(workflowStatus.execution_id)\r\n\t\t\t\t.then(fullWorkflowStatus => {\r\n\t\t\t\t\tthis.calculateLocalizedTimes(fullWorkflowStatus);\r\n\t\t\t\t\tfullWorkflowStatus.node_statuses.forEach(nodeStatus => {\r\n\t\t\t\t\t\tthis.calculateLocalizedTimes(nodeStatus);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.loadedWorkflowStatus = fullWorkflowStatus;\r\n\t\t\t\t\tthis.recalculateRelativeTimes();\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tthis.toastrService.error(`Error loading action results for \"${workflowStatus.name}\": ${e.message}`)\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tnodeResultsPromise.then(() => {\r\n\t\t\t($('.nodeStatusModal') as any).modal('show');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an input object/value to a friendly string for display in the workflow status table.\r\n\t * @param input Input object / value to convert\r\n\t */\r\n\tgetFriendlyJSON(input: any): string {\r\n\t\tif (!input) { return 'N/A'; }\r\n\t\tlet out = JSON.stringify(input, null, 1);\r\n\t\tout = out.replace(/[\\{\\[\\}\\]\"]/g, '').trim();\r\n\t\tif (!out) { return 'N/A'; }\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an input argument array to a friendly string for display in the workflow status table.\r\n\t * @param args Array of arguments to convert\r\n\t */\r\n\tgetFriendlyArguments(args: Argument[]): string {\r\n\t\tif (!args || !args.length) { return 'N/A'; }\r\n\r\n\t\tconst obj: { [key: string]: string } = {};\r\n\t\targs.forEach(element => {\r\n\t\t\tif (element.value) { obj[element.name] = element.value; }\r\n\t\t});\r\n\r\n\t\tlet out = JSON.stringify(obj, null, 1);\r\n\t\tout = out.replace(/[\\{\\}\"]/g, '');\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the app name from a current node object or returns N/A if undefined.\r\n\t * @param nodeStatusSummary NodeStatusSummary to use as input\r\n\t */\r\n\tgetAppName(nodeStatusSummary: NodeStatusSummary): string {\r\n\t\tif (!nodeStatusSummary) { return'N/A'; }\r\n\t\treturn nodeStatusSummary.app_name;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the action name from a current node object or returns N/A if undefined.\r\n\t * @param nodeStatusSummary NodeStatusSummary to use as input\r\n\t */\r\n\tgetActionName(nodeStatusSummary: NodeStatusSummary): string {\r\n\t\tif (!nodeStatusSummary) { return'N/A'; }\r\n\t\tlet output = nodeStatusSummary.label;\r\n\t\tif (output !== nodeStatusSummary.name) { output = `${output} (${nodeStatusSummary.name})`; }\r\n\t\treturn output;\r\n\t}\r\n\r\n\t/**\r\n\t * Simple comparator function for the datatable sort on the app name column.\r\n\t * @param propA Left side NodeStatusSummary\r\n\t * @param propB Right side NodeStatusSummary\r\n\t */\r\n\tappNameComparator(propA: NodeStatusSummary, propB: NodeStatusSummary) {\r\n\t\tif (!propA) { return 1; }\r\n\t\tif (!propB) { return -1; }\r\n\r\n\t\tif (propA.app_name.toLowerCase() < propB.app_name.toLowerCase()) { return -1; }\r\n\t\tif (propA.app_name.toLowerCase() > propB.app_name.toLowerCase()) { return 1; }\r\n\t}\r\n\r\n\t/**\r\n\t * Simple comparator function for the datatable sort on a date column.\r\n\t * @param propA Left side NodeStatusSummary\r\n\t * @param propB Right side NodeStatusSummary\r\n\t */\r\n\tdateComparator(propA, propB) {\r\n\t\tif (!propA && !propB) return 0;\r\n\t\tif (!propA) return 1; \r\n\t\tif (!propB) return -1;\r\n\t\treturn moment(propA).diff(moment(propB));\r\n\t}\r\n\r\n\t/**\r\n\t * Simple comparator function for the datatable sort on the action name column.\r\n\t * @param propA Left side NodeStatusSummary\r\n\t * @param propB Right side NodeStatusSummary\r\n\t */\r\n\tactionNameComparator(propA: NodeStatusSummary, propB: NodeStatusSummary) {\r\n\t\tif (!propA) { return 1; }\r\n\t\tif (!propB) { return -1; }\r\n\r\n\t\tif (propA.name.toLowerCase() < propB.name.toLowerCase()) { return -1; }\r\n\t\tif (propA.name.toLowerCase() > propB.name.toLowerCase()) { return 1; }\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the relative times shown for start/end date timestamps (e.g. '5 hours ago').\r\n\t */\r\n\trecalculateRelativeTimes(): void {\r\n\t\tif (!this.workflowStatuses || !this.workflowStatuses.length) { return; }\r\n\r\n\t\tthis.workflowStatuses.forEach(workflowStatus => {\r\n\t\t\tif (workflowStatus.started_at) {\r\n\t\t\t\tthis.workflowStatusStartedRelativeTimes[workflowStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(workflowStatus.started_at);\r\n\t\t\t}\r\n\t\t\tif (workflowStatus.completed_at) {\r\n\t\t\t\tthis.workflowStatusCompletedRelativeTimes[workflowStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(workflowStatus.completed_at);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!this.loadedWorkflowStatus || !this.loadedWorkflowStatus.node_statuses ||\r\n\t\t\t!this.loadedWorkflowStatus.node_statuses.length ) { return; }\r\n\r\n\t\tthis.loadedWorkflowStatus.node_statuses.forEach(nodeStatus => {\r\n\t\t\tif (nodeStatus.started_at) {\r\n\t\t\t\tthis.nodeStatusStartedRelativeTimes[nodeStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatus.started_at);\r\n\t\t\t}\r\n\t\t\tif (nodeStatus.completed_at) {\r\n\t\t\t\tthis.nodeStatusCompletedRelativeTimes[nodeStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatus.completed_at);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds/updates localized time strings to a status object.\r\n\t * @param status Workflow or Action Status to mutate\r\n\t */\r\n\tcalculateLocalizedTimes(status: WorkflowStatus | NodeStatus): void {\r\n\t\tif (status.started_at) {\r\n\t\t\tstatus.localized_started_at = this.utils.getLocalTime(status.started_at);\r\n\t\t}\r\n\t\tif (status.completed_at) {\r\n\t\t\tstatus.localized_completed_at = this.utils.getLocalTime(status.completed_at);\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"executionMain\\\">\\r\\n\\t<h1>Execution Control</h1>\\r\\n\\r\\n\\t<div class=\\\"row align-items-center mb-3\\\">\\r\\n\\t\\t<div class=\\\"col-lg-4 my-1 my-lg-none\\\">\\r\\n\\t\\t\\t<select2 [data]=\\\"availableWorkflows\\\" [options]=\\\"workflowSelectConfig\\\" (valueChanged)=\\\"workflowSelectChange($event)\\\"></select2>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-lg-auto mr-auto my-1 my-lg-none\\\">\\r\\n\\t\\t\\t<button *ngIf=\\\"selectedWorkflow\\\" (click)=\\\"executeSelectedWorkflow()\\\" title=\\\"Execute Workflow\\\" class=\\\"btn btn-outline-primary mx-1\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-play\\\"></i>\\r\\n\\t\\t\\t\\tExecute Workflow\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button *ngIf=\\\"selectedWorkflow && selectedWorkflow.referenced_variables.length > 0\\\" (click)=\\\"openVariableModal()\\\" title=\\\"Edit Workflow Variables\\\" class=\\\"btn btn-outline-primary mx-1\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-cog\\\"></i>\\r\\n\\t\\t\\t\\tEdit Workflow Variables\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col col-lg-4 my-1 my-lg-none\\\">\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Filter Results...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ngx-datatable #workflowStatusTable class='material expandable workflowStatusTable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayWorkflowStatuses\\\"\\r\\n\\t [sorts]=\\\"[{prop: 'started_at', dir: 'desc'}]\\\" [sortType]=\\\"'multi'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [limit]=\\\"25\\\">\\r\\n\\t\\t<!-- Column Templates -->\\r\\n\\t\\t<ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<a href=\\\"#\\\" (click)=\\\"openNodeStatusModal($event, row)\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"View Action Results\\\">{{row.name}}</a>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"ID\\\" prop=\\\"execution_id\\\" [flexGrow]=\\\"2\\\"></ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"User\\\" prop=\\\"user\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Started At\\\" prop=\\\"started_at\\\" [comparator]=\\\"dateComparator\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span [title]=\\\"row.localized_started_at\\\">\\r\\n\\t\\t\\t\\t\\t{{workflowStatusStartedRelativeTimes[row.execution_id]}}\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Completed At\\\" prop=\\\"completed_at\\\" [comparator]=\\\"dateComparator\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span [title]=\\\"row.localized_completed_at\\\">\\r\\n\\t\\t\\t\\t\\t{{workflowStatusCompletedRelativeTimes[row.execution_id]}}\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Status\\\" prop=\\\"status\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Current App\\\" prop=\\\"current_node\\\" [comparator]=\\\"appNameComparator\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t{{getAppName(row.current_node)}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Current Node\\\" prop=\\\"current_node\\\" [comparator]=\\\"actionNameComparator\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t{{getActionName(row.current_node)}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"row.status.toLowerCase() === 'paused'\\\" (click)=\\\"performWorkflowStatusAction(row, workflowStatusActions.resume)\\\" ngbTooltip=\\\"Start Scheduled Task\\\"\\r\\n\\t\\t\\t\\t class=\\\"btn btn-primary mx-1\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-play\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"row.status.toLowerCase() === 'running'\\\" (click)=\\\"performWorkflowStatusAction(row, workflowStatusActions.pause)\\\" ngbTooltip=\\\"Pause Scheduled Task\\\"\\r\\n\\t\\t\\t\\t class=\\\"btn btn-warning mx-1\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-pause\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"!(row.status.toLowerCase() === 'completed' || row.status.toLowerCase() === 'aborted')\\\" (click)=\\\"performWorkflowStatusAction(row, workflowStatusActions.abort)\\\"\\r\\n\\t\\t\\t\\t ngbTooltip=\\\"Abort Scheduled Task\\\" class=\\\"btn btn-danger mx-1\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-stop\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t</ngx-datatable>\\r\\n\\r\\n\\t<div class=\\\"modal fade nodeStatusModal\\\" role=\\\"dialog\\\" aria-labelledby=\\\"nodeStatusModalTitle\\\" aria-hidden=\\\"true\\\">\\r\\n\\t\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"loadedWorkflowStatus\\\" class=\\\"modal-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"nodeStatusModalTitle\\\">Action Statuses for {{loadedWorkflowStatus.name}}</h5>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"modal-body\\\" #nodeStatusContainer>\\r\\n\\t\\t\\t\\t\\t<ngx-datatable #nodeStatusTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"loadedWorkflowStatus.node_statuses\\\"\\r\\n\\t\\t\\t\\t\\t [sortType]=\\\"'multi'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[{prop: 'started_at', dir: 'desc'}]\\\"\\r\\n\\t\\t\\t\\t\\t [limit]=\\\"10\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- Column Templates -->\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"ID\\\" prop=\\\"node_id\\\" [flexGrow]=\\\"3\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"App Name\\\" prop=\\\"app_name\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Action Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Started At\\\" prop=\\\"started_at\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span [title]=\\\"row.localized_started_at\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{nodeStatusStartedRelativeTimes[row.execution_id]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Completed At\\\" prop=\\\"completed_at\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span [title]=\\\"row.localized_completed_at\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{nodeStatusCompletedRelativeTimes[row.execution_id]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Status\\\" prop=\\\"status\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Arguments\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{getFriendlyArguments(row.arguments)}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t\\t<ngx-datatable-column name=\\\"Result\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{getFriendlyJSON(row.result)}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</ngx-datatable-column>\\r\\n\\t\\t\\t\\t\\t</ngx-datatable>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","module.exports = \".executionMain {\\n  padding: 10px 15px; }\\n\\n.executionMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\\n.nodeStatusModal > .modal-dialog {\\n  max-width: 95%; }\\n\"","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { plainToClass, classToPlain } from 'class-transformer';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { WorkflowStatus } from '../models/execution/workflowStatus';\r\nimport { Playbook } from '../models/playbook/playbook';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { EnvironmentVariable } from '../models/playbook/environmentVariable';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ExecutionService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\t/**\r\n\t * Asyncronously adds a workflow (by ID) to the queue to be executed.\r\n\t * Returns the new workflow status for the workflow execution.\r\n\t * @param workflowId Workflow Id to queue\r\n\t */\r\n\taddWorkflowToQueue(workflow_id: string, execution_id: string = null, variables: EnvironmentVariable[] = []): Promise<WorkflowStatus> {\r\n\t\tlet data: any = { workflow_id };\r\n\t\tif (execution_id) data.execution_id = execution_id;\r\n\t\tif (variables.length > 0) data.workflow_variables = classToPlain(variables);\r\n\r\n\t\treturn this.http.post('api/workflowqueue', data)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(WorkflowStatus, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * For a given executing workflow, asyncronously perform some action to change its status.\r\n\t * Only returns success\r\n\t * @param executionId Execution ID to act upon\r\n\t * @param action Action to take (e.g. abort, resume, pause)\r\n\t */\r\n\tperformWorkflowStatusAction(executionId: string, action: string): Promise<void> {\r\n\t\treturn this.http.patch(`api/workflowqueue/${ executionId }`, { status: action })\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * For a given executing workflow, asyncronously perform some action to change its status.\r\n\t * Only returns success\r\n\t * @param executionId Execution ID to act upon\r\n\t * @param action Action to take (e.g. abort, resume, pause)\r\n\t */\r\n\tperformWorkflowTrigger(executionId: string, trigger: string, data = {}): Promise<void> {\r\n\t\treturn this.http.patch(`api/workflowqueue/${ executionId }`, { status: 'trigger',  trigger_id: trigger, trigger_data: data})\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronously gets an array of workflow statuses from the server.\r\n\t */\r\n\tgetAllWorkflowStatuses(): Promise<WorkflowStatus[]> {\r\n\t\treturn this.utils.paginateAll<WorkflowStatus>(this.getWorkflowStatuses.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronously gets an array of workflow statuses from the server.\r\n\t */\r\n\tgetWorkflowStatuses(page: number = 1): Promise<WorkflowStatus[]> {\r\n\t\treturn this.http.get(`api/workflowqueue?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(WorkflowStatus, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronously gets the full information for a given workflow status, including action statuses.\r\n\t * @param workflowExecutionId Workflow Status to query\r\n\t */\r\n\tgetWorkflowStatus(workflowExecutionId: string): Promise<WorkflowStatus> {\r\n\t\treturn this.http.get(`api/workflowqueue/${workflowExecutionId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(WorkflowStatus, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncryonously gets arrays of all playbooks and workflows (id, name pairs only).\r\n\t */\r\n\tgetPlaybooks(): Promise<Playbook[]> {\r\n\t\treturn this.http.get('/api/playbooks')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(Playbook, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all playbooks and their child workflows in minimal form (id, name).\r\n\t */\r\n\tgetWorkflows(): Promise<Workflow[]> {\r\n\t\treturn this.http.get('/api/workflows')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the data of a given workflow under a given playbook.\r\n\t * @param workflowId ID of the workflow to load\r\n\t */\r\n\tloadWorkflow(workflowId: string): Promise<Workflow> {\r\n\t\treturn this.http.get(`/api/workflows/${workflowId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tasync getLatestExecution(workflowId: string): Promise<WorkflowStatus> {\r\n\t\tconst workflowStatuses = await this.getAllWorkflowStatuses();\r\n\t\tconst workflowStatus = workflowStatuses.filter(status => status.workflow_id = workflowId && status.completed_at_local).find(e => !!e);\r\n\t\treturn this.getWorkflowStatus(workflowStatus.execution_id);\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { EnvironmentVariable } from '../models/playbook/environmentVariable';\r\n\r\n@Component({\r\n    selector: 'execution-variable-modal-component',\r\n    templateUrl: './execution.variable.modal.html',\r\n})\r\nexport class ExecutionVariableModalComponent {\r\n    @Input() workflow: Workflow;\r\n\r\n    constructor(public activeModal: NgbActiveModal) {}\r\n\r\n    execute(form: NgForm) : void {\r\n        let variables: EnvironmentVariable[] = [];\r\n        this.workflow.referenced_variables.forEach(variable => {\r\n            if (form.value[variable.id] && form.value[variable.id] != '') {\r\n                let newV = new EnvironmentVariable();\r\n                newV.id = variable.id;\r\n                newV.name = variable.name;\r\n                newV.value = form.value[variable.id];\r\n                variables.push(newV);\r\n            }\r\n        })\r\n        this.activeModal.close(variables);\r\n    }\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Edit Environment Variables</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <form #variableForm=\\\"ngForm\\\" (ngSubmit)=\\\"execute(variableForm)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div *ngFor=\\\"let v of workflow.referenced_variables\\\" class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label [for]=\\\"v.id\\\">{{ v.name }}</label>\\r\\n                        <input [name]=\\\"v.id\\\" [id]=\\\"v.id\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"v.value\\\" ngModel>\\r\\n                        <p *ngIf=\\\"v.description\\\" class=\\\"help-block\\\"><i>{{ v.description }}</i></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Close</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"execute(variableForm)\\\">Execute Workflow</button>\\r\\n</div>\"","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { VariableModalComponent } from './variable.modal.component';\r\nimport { GlobalsService } from './globals.service';\r\nimport { Variable } from '../models/variable';\r\n\r\nimport { classToClass } from 'class-transformer';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Component({\r\n\tselector: 'globals-component',\r\n\ttemplateUrl: './globals.html',\r\n\tstyleUrls: [\r\n\t\t'./globals.scss',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n})\r\nexport class GlobalsComponent implements OnInit {\r\n\t//Global Data Table params\r\n\tglobals: Variable[] = [];\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\tconstructor(\r\n\t\tprivate globalsService: GlobalsService, private modalService: NgbModal, \r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component init, initialize the app select2 config, grab globals and global apis from the server.\r\n\t * Set up the search filter to filter globals after 500 ms of inactivity.\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.globalsService.globalsChange.subscribe(globals => this.globals = globals);\r\n\t}\r\n\r\n\t/**\r\n\t * Filters globals based on the selected apps select2, and the value of the search filter input box.\r\n\t * If no apps are selected, assume all apps should be returned.\r\n\t */\r\n\tget filteredGlobals(): Variable[] {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\t\treturn this.globals.filter(global => \r\n\t\t\tglobal.name.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\tglobal.value.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t(global.description && global.description.toLocaleLowerCase().includes(searchFilter))\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a modal for adding a new global. Passes in the app names and apis for usage in the modal.\r\n\t */\r\n\taddGlobal(): void {\r\n\t\tconst modalRef = this.modalService.open(VariableModalComponent);\r\n\t\tmodalRef.componentInstance.isGlobal = true;\r\n\r\n\t\tmodalRef.result.then(variable => {\r\n\t\t\tthis.globalsService.addGlobal(variable).then(() => {\r\n\t\t\t\tthis.toastrService.success(`Added <b>${variable.name}</b>`);\r\n\t\t\t})\r\n\t\t}, () => null)\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a modal for editing an existing global. Passes in the app names and apis for usage in the modal.\r\n\t */\r\n\teditGlobal(global: Variable): void {\r\n\t\tconst modalRef = this.modalService.open(VariableModalComponent);\r\n\t\tmodalRef.componentInstance.isGlobal = true;\r\n\t\tmodalRef.componentInstance.existing = true;\r\n\t\tmodalRef.componentInstance.variable = global.clone();\r\n\t\t\r\n\t\tmodalRef.result.then(variable => {\r\n\t\t\tthis.globalsService.editGlobal(variable).then(() => {\r\n\t\t\t\tthis.toastrService.success(`Updated <b>${variable.name}</b>`);\r\n\t\t\t})\r\n\t\t}, () => null)\r\n\t}\r\n\r\n\t/**\r\n\t * After user confirmation, will delete a given global from the database.\r\n\t * Removes it from our list of globals to display.\r\n\t * @param globalToDelete Global to delete\r\n\t */\r\n\tasync deleteGlobal(globalToDelete: Variable) {\r\n\t\tawait this.utils.confirm(`Are you sure you want to delete <b>${ globalToDelete.name }</b>?`);\r\n\t\tthis.globalsService\r\n\t\t\t.deleteGlobal(globalToDelete)\r\n\t\t\t.then(() => this.toastrService.success(`Deleted <b>${ globalToDelete.name }</b>`))\r\n\t\t\t.catch(e => this.toastrService.error(`Error deleting <b>${ e.message }</b>`));\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"globalsMain\\\">\\r\\n    <h1>Global Variables</h1>\\r\\n\\r\\n    <div class=\\\"row align-items-center mb-3\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <button (click)=\\\"addGlobal()\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> Add Global</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <!-- <select2 [data]=\\\"availableApps\\\" [options]=\\\"appSelectConfig\\\" (valueChanged)=\\\"appSelectChange($event)\\\"></select2> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Filter Globals...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ngx-datatable #globalTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"filteredGlobals\\\"\\r\\n        [sortType]=\\\"'multi'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"25\\\" [rowHeight]=\\\"undefined\\\" [limit]=\\\"25\\\">\\r\\n        <!-- Column Templates -->\\r\\n        <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"2\\\"></ngx-datatable-column>\\r\\n        <ngx-datatable-column name=\\\"ID\\\" prop=\\\"id\\\" [flexGrow]=\\\"2\\\"></ngx-datatable-column>\\r\\n        <ngx-datatable-column name=\\\"Value\\\" prop=\\\"value\\\" [flexGrow]=\\\"3\\\" [sortable]=\\\"false\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                <div class=\\\"d-flex align-items-center\\\">\\r\\n                    <span [class.pt-2]=\\\"row.isHidden\\\">{{ row.isHidden ? '********************' : row.value }}</span>\\r\\n                    <button (click)=\\\"row.isHidden = !row.isHidden\\\" class=\\\"btn btn-link mx-1 p-0\\\">\\r\\n                        <i class=\\\"fa\\\" [class.fa-eye]=\\\"row.isHidden\\\" [class.fa-eye-slash]=\\\"!row.isHidden\\\" \\r\\n                            [ngbTooltip]=\\\"row.isHidden ? 'Show Value' : 'Hide Value'\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n        <ngx-datatable-column name=\\\"Description\\\" prop=\\\"description\\\" [flexGrow]=\\\"3\\\"></ngx-datatable-column>\\r\\n        <ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                <button (click)=\\\"editGlobal(row)\\\" class=\\\"btn btn-primary mx-1\\\" ngbTooltip=\\\"Edit\\\"><i\\r\\n                        class=\\\"fa fa-edit\\\"></i></button>\\r\\n                <button (click)=\\\"deleteGlobal(row)\\\" class=\\\"btn btn-danger mx-1\\\" ngbTooltip=\\\"Delete\\\"><i\\r\\n                        class=\\\"fa fa-times\\\"></i></button>\\r\\n            </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n</div>\"","import { Component, Input, ChangeDetectorRef, ViewChild, ElementRef, OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { GlobalsService } from './globals.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { WorkingGlobal } from '../models/workingGlobal';\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { DeviceApi } from '../models/api/deviceApi';\r\nimport { ParameterSchema } from '../models/api/parameterSchema';\r\nimport { GenericObject } from '../models/genericObject';\r\n\r\n@Component({\r\n\tselector: 'global-modal',\r\n\ttemplateUrl: './globals.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./globals.scss',\r\n\t],\r\n\tproviders: [GlobalsService, UtilitiesService],\r\n})\r\nexport class GlobalsModalComponent implements OnInit, AfterViewInit {\r\n\t@Input() workingGlobal: WorkingGlobal = new WorkingGlobal();\r\n\t@Input() title: string;\r\n\t@Input() submitText: string;\r\n\t@Input() appNames: string[] = [];\r\n\t@Input() appApis: AppApi[] = [];\r\n\t@ViewChild('typeRef') typeRef: ElementRef;\r\n\t// @ViewChild('globalForm') form: FormGroup\r\n\r\n\tglobalTypesForApp: DeviceApi[] = [];\r\n\t// save global type fields on saving/loading so we don't clear all progress if we switch global type\r\n\t// e.g. { 'router': { 'ip': '127.0.0.1', ... }, ... }\r\n\tglobalTypeFields: { [key: string]: {} } = {};\r\n\tselectedGlobalType: DeviceApi;\r\n\tvalidationErrors: { [key: string]: string } = {};\r\n\tencryptedConfirmFields: { [key: string]: string } = {};\r\n\tencryptedFieldsToBeCleared: { [key: string]: boolean } = {};\r\n\r\n\tconstructor (\r\n\t\tprivate globalsService: GlobalsService, public activeModal: NgbActiveModal, \r\n\t\tprivate toastrService: ToastrService, private cdr: ChangeDetectorRef,\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\t//For an existing global, set our available global types and store the known fields for our global type\r\n\t\tif (this.workingGlobal.app_name) {\r\n\t\t\tthis.globalTypesForApp = this.appApis.find(app => app.name === this.workingGlobal.app_name).device_apis;\r\n\t\t}\r\n\t\t//Detect changes beforehand so the select box is updated\r\n\t\tthis.cdr.detectChanges();\r\n\t\tif (this.workingGlobal.type) {\r\n\t\t\tthis.globalTypeFields[this.workingGlobal.type] = this.workingGlobal.fields;\r\n\t\t\tthis.typeRef.nativeElement.value = this.workingGlobal.type;\r\n\t\t\tthis.handleGlobalTypeSelection(null, this.workingGlobal.type);\r\n\t\t}\r\n\t\t//Detect changes once more to actually use the selected global type\r\n\t\tthis.cdr.detectChanges();\r\n\t}\r\n\r\n\t/**\r\n\t * On selecting an app in the app select, get the GlobalTypes for the app from our App Apis.\r\n\t * Also clear global type data if needed.\r\n\t * @param event JS event fired from app select\r\n\t * @param appName App name from the selection\r\n\t */\r\n\thandleAppSelection(event: any, appName: string): void {\r\n\t\tthis.workingGlobal.app_name = appName;\r\n\t\tthis.globalTypesForApp = this.appApis.find(a => a.name === appName).device_apis;\r\n\t\tif (this.selectedGlobalType) { this._clearGlobalTypeData(); }\r\n\t}\r\n\r\n\t/**\r\n\t * On selecting a global type in the global type select, grab the DeviceApi from our AppApis.\r\n\t * Get the default or existing values for our global based on the Global Api.\r\n\t * @param event JS event fired from global type select\r\n\t * @param globalType Global type from the selection\r\n\t */\r\n\thandleGlobalTypeSelection(event: any, globalType: string): void {\r\n\t\t// If we just cleared our global type selection,\r\n\t\t// clear our global type data from the working global and any temp storage\r\n\t\tif (!globalType) {\r\n\t\t\tthis._clearGlobalTypeData();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Grab the first global type that matches our app and newly selected type\r\n\t\tthis.selectedGlobalType = this.appApis.find(a => a.name === this.workingGlobal.app_name)\r\n\t\t\t.device_apis.find(d => d.name === globalType);\r\n\t\t// Set the type on our working global\r\n\t\tthis.workingGlobal.type = globalType;\r\n\t\t// Set our fields to whatever's stored or a new object\r\n\t\tthis.workingGlobal.fields = \r\n\t\t\tthis.globalTypeFields[globalType] = \r\n\t\t\tthis.globalTypeFields[globalType] || this._getDefaultValues(this.selectedGlobalType);\r\n\r\n\t\tthis._getEncryptedConfirmFields(this.selectedGlobalType);\r\n\t\tthis.validationErrors = {};\r\n\t}\r\n\r\n\t/**\r\n\t * On checking/unchecking an encrypted field clear box, we are marking if it is to be cleared on save.\r\n\t * This is needed because we need a distinction between passing empty string and null.\r\n\t * @param fieldName Name of field to toggle\r\n\t * @param isChecked Determine if we're clearing this field on save.\r\n\t */\r\n\thandleEncryptedFieldClear(fieldName: string, isChecked: boolean): void {\r\n\t\tthis.encryptedFieldsToBeCleared[fieldName] = isChecked;\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the add/edit global modal.\r\n\t * If we're editing a global, we also want to handle removing\r\n\t * encrypted fields by setting them as '' rather than just passing null.\r\n\t * Calls POST/PUT based upon add/edit and returns the added/updated global from the server.\r\n\t */\r\n\tsubmit(): void {\r\n\t\tif (!this.validate()) { return; }\r\n\r\n\t\t// const toSubmit = WorkingGlobal.toGlobal(this.workingGlobal);\r\n\r\n\t\t// //If global has an ID, global already exists, call update\r\n\t\t// if (this.workingGlobal.id) {\r\n\t\t// \ttoSubmit.fields.forEach((field, index, array) => {\r\n\t\t// \t\tconst ftype = this.selectedGlobalType.fields.find(ft => ft.name === field.name);\r\n\t\r\n\t\t// \t\tif (!ftype.encrypted) { return; }\r\n\t\r\n\t\t// \t\t//If we are to be clearing our value, please set it to empty string and return\r\n\t\t// \t\tif (this.encryptedFieldsToBeCleared[field.name]) { \r\n\t\t// \t\t\tfield.value = '';\r\n\t\t// \t\t} else if ((typeof(field.value) === 'string' && !field.value.trim()) ||\r\n\t\t// \t\t\t(typeof(field.value) === 'number' && !field.value)) { array.splice(index, 1); }\r\n\t\t// \t});\r\n\r\n\t\t// \tthis.globalsService\r\n\t\t// \t\t.editGlobal(toSubmit)\r\n\t\t// \t\t.then(global => this.activeModal.close({\r\n\t\t// \t\t\tglobal,\r\n\t\t// \t\t\tisEdit: true,\r\n\t\t// \t\t}))\r\n\t\t// \t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t// } else {\r\n\t\t// \tthis.globalsService\r\n\t\t// \t\t.addGlobal(toSubmit)\r\n\t\t// \t\t.then(global => this.activeModal.close({\r\n\t\t// \t\t\tglobal,\r\n\t\t// \t\t\tisEdit: false,\r\n\t\t// \t\t}))\r\n\t\t// \t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t// }\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if basic info on the top level global params is valid (specified).\r\n\t */\r\n\tisBasicInfoValid(): boolean {\r\n\t\tif (this.workingGlobal.name && this.workingGlobal.name.trim() && \r\n\t\t\tthis.workingGlobal.app_name && this.workingGlobal.type) { return true; }\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs validation on each Global field based on the matching ParameterSchema for the DeviceApi.\r\n\t */\r\n\tvalidate(): boolean {\r\n\t\tthis.validationErrors = {};\r\n\t\tconst inputs = this.workingGlobal.fields;\r\n\r\n\t\t//Trim whitespace out of our inputs first\r\n\t\tObject.keys(inputs).forEach(key => {\r\n\t\t\tif (typeof(inputs[key]) === 'string') {\r\n\t\t\t\tinputs[key] = (inputs[key] as string).trim();\r\n\t\t\t\t//Also trim encrypted confirm fields if necessary\r\n\t\t\t\tif (this.encryptedConfirmFields[key]) { \r\n\t\t\t\t\tthis.encryptedConfirmFields[key] = this.encryptedConfirmFields[key].trim();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.selectedGlobalType.fields.forEach(field => {\r\n\t\t\t// if we have a required field, and this field is NOT an edit to an encrypted field,\r\n\t\t\t// check if we have a value specified\r\n\t\t\tif (field.required && !(this.workingGlobal.id && field.encrypted)) {\r\n\t\t\t\tif (inputs[field.name] == null ||\r\n\t\t\t\t\t(typeof inputs[field.name] === 'string' && !inputs[field.name]) ||\r\n\t\t\t\t\t(typeof inputs[field.name] === 'number' && inputs[field.name] === null)) {\r\n\t\t\t\t\tthis.validationErrors[field.name] = `You must enter a value for ${field.name}.`;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (field.schema.type) {\r\n\t\t\t\t//For strings, check against min/max length, regex pattern, or enum constraints\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tif (inputs[field.name] == null) { inputs[field.name] = ''; }\r\n\r\n\t\t\t\t\tif (field.encrypted && \r\n\t\t\t\t\t\t!this.encryptedFieldsToBeCleared[field.name] && \r\n\t\t\t\t\t\tthis.encryptedConfirmFields[field.name] !== inputs[field.name]) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `The values for ${field.name} do not match.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (field.schema.enum) {\r\n\t\t\t\t\t\tconst enumArray: string[] = field.schema.enum.slice(0);\r\n\t\t\t\t\t\tif (!field.required) { enumArray.push(''); }\r\n\t\t\t\t\t\tif (enumArray.indexOf(inputs[field.name]) < 0) {\r\n\t\t\t\t\t\t\tthis._concatValidationMessage(field.name, 'You must select a value from the list.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//We're past the required check; Don't do any more validation if we have an empty string as input\r\n\t\t\t\t\tif (!inputs[field.name]) { break; }\r\n\r\n\t\t\t\t\tif (field.schema.minLength !== undefined && inputs[field.name].length < field.schema.minLength) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `Must be at least ${field.schema.minLength} characters.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (field.schema.maxLength !== undefined && inputs[field.name].length > field.schema.maxLength) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `Must be at most ${field.schema.minLength} characters.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (field.schema.pattern && !new RegExp(field.schema.pattern as string).test(inputs[field.name])) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `Input must match a given pattern: ${field.schema.pattern}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//For numbers, check against min/max and multipleOf constraints\r\n\t\t\t\tcase 'number':\r\n\t\t\t\tcase 'integer':\r\n\t\t\t\t\t//We're past the required check; if number is null, don't do any more validation\r\n\t\t\t\t\tif (inputs[field.name] == null) { break; }\r\n\r\n\t\t\t\t\tconst min = this.getMin(field.schema);\r\n\t\t\t\t\tconst max = this.getMax(field.schema);\r\n\t\t\t\t\tif (min !== null && inputs[field.name] < min) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `The minimum value is ${min}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (max !== null && inputs[field.name] > max) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `The maximum value is ${max}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (field.schema.multipleOf !== undefined && inputs[field.name] % field.schema.multipleOf) {\r\n\t\t\t\t\t\tthis._concatValidationMessage(field.name, `The value must be a multiple of ${field.schema.multipleOf}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//For booleans, just initialize the value to false if it doesn't exist\r\n\t\t\t\tcase 'boolean':\r\n\t\t\t\t\tinputs[field.name] = inputs[field.name] || false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._concatValidationMessage(field.name, `The type specified for field ${field.name} is invalid.`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (Object.keys(this.validationErrors).length) { return false; }\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the minimum value based on a ParameterSchema's minimum and exclusiveMinimum fields.\r\n\t * @param schema ParameterSchema to check against\r\n\t */\r\n\tgetMin(schema: ParameterSchema) {\r\n\t\tif (schema.minimum === undefined) { return null; }\r\n\t\tif (schema.exclusiveMinimum) { return schema.minimum + 1; }\r\n\t\treturn schema.minimum;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the maximum value based on a ParameterSchema's maximum and exclusiveMaximum fields.\r\n\t * @param schema ParameterSchema to check against\r\n\t */\r\n\tgetMax(schema: ParameterSchema) {\r\n\t\tif (schema.maximum === undefined) { return null; }\r\n\t\tif (schema.exclusiveMaximum) { return schema.maximum - 1; }\r\n\t\treturn schema.maximum;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a component variable to track confirm fields for encrypted values.\r\n\t * This is so we can allow the form to have encrypted values entered twice such that a user doesn't fat finger it.\r\n\t * @param globalType DeviceApi to check for encrypted fields.\r\n\t */\r\n\tprivate _getEncryptedConfirmFields(globalType: DeviceApi): void {\r\n\t\tthis.encryptedConfirmFields = {};\r\n\t\tglobalType.fields.forEach(field => {\r\n\t\t\tif (field.encrypted) { this.encryptedConfirmFields[field.name] = ''; }\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a field with the default value specified if possible.\r\n\t * @param deviceApi Global Api to check against\r\n\t */\r\n\tprivate _getDefaultValues(deviceApi: DeviceApi): GenericObject {\r\n\t\tconst out: GenericObject = {};\r\n\r\n\t\tdeviceApi.fields.forEach(field => {\r\n\t\t\tif (field.schema.default) {\r\n\t\t\t\tout[field.name] = field.schema.default;\r\n\t\t\t} else {\r\n\t\t\t\tout[field.name] = null;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all of our global type data. Used if we switch global types or selected app.\r\n\t */\r\n\tprivate _clearGlobalTypeData(): void {\r\n\t\tthis.selectedGlobalType = null;\r\n\t\tthis.workingGlobal.type = null;\r\n\t\tthis.workingGlobal.fields = null;\r\n\t\tthis.validationErrors = {};\r\n\t\tthis.encryptedConfirmFields = {};\r\n\t}\r\n\r\n\t/**\r\n\t * For a given field key in our validationErrors object, add message to the end of the existing message.\r\n\t * @param field Field name to concat validation messages for\r\n\t * @param message Message to concat\r\n\t */\r\n\tprivate _concatValidationMessage(field: string, message: string) {\r\n\t\tif (this.validationErrors[field]) { \r\n\t\t\tthis.validationErrors[field] += '\\n' + message;\r\n\t\t} else { \r\n\t\t\tthis.validationErrors[field] = message;\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<form id=\\\"globalForm\\\" #globalForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name<i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i></label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingGlobal.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" required tabindex=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!name.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tName is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"app_name\\\">Associated App<i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i></label>\\r\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [ngModel]=\\\"workingGlobal.app_name\\\" #app=\\\"ngModel\\\" (change)=\\\"handleAppSelection($event, $event.target.value)\\\" \\r\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"workingGlobal.id\\\" name=\\\"app_name\\\" tabindex=\\\"3\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\"></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of appNames\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"app.errors && (app.dirty || app.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!app.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tApp is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingGlobal.description\\\" name=\\\"ip\\\" tabindex=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"type\\\">Global Type<i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i></label>\\r\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [ngModel]=\\\"workingGlobal.type\\\" #typeRef #type=\\\"ngModel\\\" (change)=\\\"handleGlobalTypeSelection(null, $event.target.value)\\\"\\r\\n\\t\\t\\t\\t\\t\\t name=\\\"type\\\" tabindex=\\\"4\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\"></option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of globalTypesForApp\\\" [value]=\\\"i.name\\\" [label]=\\\"i.name\\\">{{i.name}}</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"type.errors && (type.dirty || type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!type.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tGlobal type is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"selectedGlobalType\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let i of selectedGlobalType.fields\\\" class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"{{i.name}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{i.name}}\\r\\n\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"i.description != null\\\" class=\\\"fa fa-info-circle\\\" [title]=\\\"i.description\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"i.required\\\" class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"i.encrypted\\\" class=\\\"fa fa-lock\\\"\\r\\n\\t\\t\\t\\t\\t\\t title=\\\"This field will be encrypted at rest and will not be returned to the client for viewing or editing.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<!-- If we have an encrypted field AND this is an edit AND there is an encrypted value on the server, allow the user to clear it if it's not required -->\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"workingGlobal.id && i.encrypted && workingGlobal.fields[i.name] !== undefined\\\" class=\\\"form-check form-check-inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tClear Existing Value\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"handleEncryptedFieldClear(i.name, $event.target.checked)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Normal string text entries -->\\r\\n\\t\\t\\t\\t\\t<input *ngIf=\\\"i.schema.type === 'string' && !i.schema.enum\\\" class=\\\"form-control\\\" name=\\\"{{i.name}}\\\" [(ngModel)]=\\\"workingGlobal.fields[i.name]\\\"\\r\\n\\t\\t\\t\\t\\t [attr.type]=\\\"i.encrypted ? 'password' : 'text'\\\" [attr.minlength]=\\\"i.schema.minLength > 0 ? i.schema.minLength : null\\\"\\r\\n\\t\\t\\t\\t\\t [attr.maxlength]=\\\"i.schema.maxLength > 0 ? i.schema.maxLength : null\\\"\\r\\n\\t\\t\\t\\t\\t [attr.pattern]=\\\"i.schema.pattern ? i.schema.pattern : null\\\" [attr.required]=\\\"i.required\\\"\\r\\n\\t\\t\\t\\t\\t [disabled]=\\\"encryptedFieldsToBeCleared[i.name]\\\" [attr.placeholder]=\\\"i.placeholder\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Enum types, make a select box -->\\r\\n\\t\\t\\t\\t\\t<select *ngIf=\\\"i.schema.enum\\\" class=\\\"form-control\\\" name=\\\"{{i.name}}\\\" [(ngModel)]=\\\"workingGlobal.fields[i.name]\\\"\\r\\n\\t\\t\\t\\t\\t[attr.required]=\\\"i.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"!i.required\\\" value=\\\"\\\"></option>\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of i.schema.enum\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- For numbers enter number info -->\\r\\n\\t\\t\\t\\t\\t<input *ngIf=\\\"i.schema.type === 'number' || i.schema.type === 'integer'\\\" class=\\\"form-control\\\" name=\\\"{{i.name}}\\\"\\r\\n\\t\\t\\t\\t\\t [(ngModel)]=\\\"workingGlobal.fields[i.name]\\\" type=\\\"number\\\" [attr.min]=\\\"getMin(i.schema)\\\" [attr.max]=\\\"getMax(i.schema)\\\"\\r\\n\\t\\t\\t\\t\\t [attr.step]=\\\"i.schema.multipleOf > 0 ? i.schema.multipleOf : null\\\" [attr.required]=\\\"i.required\\\"\\r\\n\\t\\t\\t\\t\\t [attr.placeholder]=\\\"i.placeholder\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Checkbox for boolean values -->\\r\\n\\t\\t\\t\\t\\t<input *ngIf=\\\"i.schema.type === 'boolean'\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" name=\\\"{{i.name}}\\\" [(ngModel)]=\\\"workingGlobal.fields[i.name]\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Repeat input for encrypted fields -->\\r\\n\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"encryptedConfirmFields[i.name] !== undefined\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"_{{i.name}}\\\" class=\\\"confirmLabel\\\">Repeat {{i.name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"_{{i.name}}\\\" [(ngModel)]=\\\"encryptedConfirmFields[i.name]\\\"\\r\\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"encryptedFieldsToBeCleared[i.name]\\\" placeholder=\\\"Enter the value for {{i.name}} again\\\" required>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Validation errors go here if they exist -->\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"validationErrors[i.name]\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{validationErrors[i.name]}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!isBasicInfoValid()\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div>\"","module.exports = \"#main.globalsMain {\\n  padding: 10px 15px; }\\n\\n.globalsMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\\n#globalForm input[type=checkbox].form-control {\\n  width: 34px;\\n  margin: 0 5px; }\\n\\n#globalForm .confirmLabel {\\n  margin-top: 15px; }\\n\\n#globalForm .required {\\n  color: crimson; }\\n\\n#globalForm .fa {\\n  margin-left: 5px; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { plainToClass, classToPlain } from 'class-transformer';\r\n\r\nimport { Global } from '../models/global';\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { Variable } from '../models/variable';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class GlobalsService {\r\n\r\n\tglobalsChange: Observable<any>;\r\n\tobserver: Subscriber<any>;\r\n\t\r\n\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {\r\n\t\tthis.globalsChange = new Observable((observer) => {\r\n            this.observer = observer;\r\n            this.getAllGlobals().then(globals => this.observer.next(globals));\r\n        })\r\n\t}\r\n\r\n\temitChange(data: any) {\r\n        if (this.observer) this.getAllGlobals().then(globals => this.observer.next(globals));\r\n        return data;\r\n    }\r\n\r\n\t/**\r\n\t * Asynchronously returns an array of all existing globals from the server.\r\n\t */\r\n\tgetAllGlobals(): Promise<Variable[]> {\r\n\t\treturn this.utils.paginateAll<Variable>(this.getGlobals.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously returns an array of existing globals from the server.\r\n\t */\r\n\tgetGlobals(page: number = 1): Promise<Variable[]> {\r\n\t\treturn this.http.get(`/api/globals?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Variable, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously sends a global to be added to the DB and returns the added global.\r\n\t * @param global Global to add\r\n\t */\r\n\taddGlobal(global: Variable): Promise<Variable> {\r\n\t\treturn this.http.post('/api/globals', classToPlain(global))\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Variable, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously sends a global to be updated within the DB and returns the edited global.\r\n\t * @param global Global to edit\r\n\t */\r\n\teditGlobal(global: Variable): Promise<Variable> {\r\n\t\treturn this.http.put(`/api/globals/${ global.id }`, classToPlain(global))\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Variable, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronously deletes a global from the DB and simply returns success.\r\n\t * @param global Global to delete\r\n\t */\r\n\tdeleteGlobal(global: Variable): Promise<void> {\r\n\t\treturn this.http.delete(`/api/globals/${ global.id }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asynchronously returns a list of AppApi objects for all our loaded Apps.\r\n\t * AppApi objects are scoped to only contain global apis.\r\n\t */\r\n\tgetGlobalApis(): Promise<AppApi[]> {\r\n\t\treturn this.http.get('api/apps/apis?field_name=device_apis')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(AppApi, data as Object[]))\r\n\t\t\t// Clear out any apps without global apis\r\n\t\t\t.then((appApis: AppApi[]) => appApis.filter(a => a.device_apis && a.device_apis.length))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Variable } from '../models/variable';\r\n\r\n@Component({\r\n  selector: 'variable-modal-component',\r\n  templateUrl: './variable.modal.html',\r\n})\r\nexport class VariableModalComponent {\r\n  @Input() variable: Variable = new Variable();\r\n  @Input() isGlobal: boolean = false;\r\n  existing: boolean = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ existing ? 'Edit' : 'Add' }} {{ isGlobal ? 'Global' : 'Workflow' }} Variable</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">Name</label>\\r\\n                    <input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"variable.name\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"value\\\">{{ isGlobal ? 'Value' : 'Default Value'}}</label>\\r\\n                    <input name=\\\"value\\\" type=\\\"text\\\" [(ngModel)]=\\\"variable.value\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"description\\\">Description (optional)</label>\\r\\n                    <textarea name=\\\"description\\\" rows=\\\"4\\\" [(ngModel)]=\\\"variable.description\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Close</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.close(variable)\\\">Save</button>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { Select2Module } from 'ng2-select2';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { JwtInterceptor, JwtModule } from '@auth0/angular-jwt';\r\nimport { RefreshTokenInterceptor, jwtTokenGetter } from './refresh-token-interceptor';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DateTimePickerModule } from 'ng-pick-datetime';\r\nimport { DndModule } from 'ng2-dnd';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { GridsterModule } from 'angular-gridster2';\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { NgJsonEditorModule } from 'ang-jsoneditor' \r\n\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\nimport 'codemirror/mode/shell/shell';\r\nimport 'codemirror/mode/python/python';\r\nimport 'codemirror/addon/display/placeholder';\r\n\r\n// Custom routing module\r\nimport { RoutingModule } from './routing';\r\nimport { MainComponent } from './main/main.component';\r\nimport { SchedulerComponent } from './scheduler/scheduler.component';\r\nimport { PlaybookComponent } from './playbook/playbook.component';\r\nimport { GlobalsComponent } from './globals/globals.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MetricsComponent } from './metrics/metrics.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { DashboardsComponent } from './dashboards/dashboards.component';\r\nimport { ExecutionComponent } from './execution/execution.component';\r\nimport { BucketsComponent } from './buckets/buckets.component';\r\n\r\nimport { SchedulerModalComponent } from './scheduler/scheduler.modal.component';\r\nimport { GlobalsModalComponent } from './globals/globals.modal.component';\r\nimport { BucketsModalComponent } from './buckets/buckets.modal.component';\r\nimport { VariableModalComponent } from './globals/variable.modal.component';\r\nimport { SettingsUserModalComponent } from './settings/settings.user.modal.component';\r\nimport { SettingsRoleModalComponent } from './settings/settings.roles.modal.component';\r\nimport { SettingsTimeoutModalComponent } from './settings/settings.timeout.modal.component';\r\nimport { ExecutionVariableModalComponent } from './execution/execution.variable.modal.component';\r\nimport { PlaybookEnvironmentVariableModalComponent } from './playbook/playbook.environment.variable.modal.component';\r\n\r\nimport { PlaybookArgumentComponent } from './playbook/playbook.argument.component';\r\nimport { PlaybookConditionsComponent } from './playbook/playbook.conditions.component';\r\nimport { PlaybookTransformsComponent } from './playbook/playbook.transforms.component';\r\nimport { PlaybookConditionalExpressionComponent } from './playbook/playbook.conditional.expression.component';\r\nimport { SettingsRolesComponent } from './settings/settings.roles.component';\r\nimport { MessagesModalComponent } from './messages/messages.modal.component';\r\n\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { UtilitiesService } from './utilities.service';\r\nimport { ManageDashboardsComponent } from './dashboards/manage.dashboards.component';\r\nimport { WidgetModalComponent } from './dashboards/widget.modal.component';\r\nimport { SafeEmbedPipe } from './pipes/safeEmbed.pipe';\r\nimport { WorkflowEditorComponent } from './playbook/workflow.editor.component';\r\nimport { MetadataModalComponent } from './playbook/metadata.modal.component';\r\nimport { ImportModalComponent } from './playbook/import.modal.component';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tFormsModule,\r\n\t\tBrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tReactiveFormsModule,\r\n\t\tJwtModule.forRoot({\r\n\t\t\tconfig: {\r\n\t\t\t\ttokenGetter: jwtTokenGetter,\r\n\t\t\t\tblacklistedRoutes: ['/login', '/api/auth', '/api/auth/logout', '/api/auth/refresh']\r\n\t\t\t}\r\n\t\t}),\r\n\t\tNgbModule,\r\n\t\tRoutingModule,\r\n\t\tSelect2Module,\r\n\t\tClipboardModule,\r\n\t\tNgxDatatableModule,\r\n\t\tDateTimePickerModule,\r\n\t\tDndModule.forRoot(),\r\n\t    BrowserAnimationsModule,\r\n\t\tToastrModule.forRoot({ positionClass: 'toast-bottom-right', enableHtml: true, onActivateTick: true }),\r\n\t\tGridsterModule,\r\n\t\tChartsModule,\r\n\t\tCodemirrorModule,\r\n\t\tNgJsonEditorModule\r\n\t],\r\n\tdeclarations: [\r\n\t\t//Main component\r\n\t\tMainComponent,\r\n\t\t//Router module components\r\n\t\tPlaybookComponent,\r\n\t\tWorkflowEditorComponent,\r\n\t\tSchedulerComponent,\r\n\t\tGlobalsComponent,\r\n\t\tMessagesComponent,\r\n\t\tMetricsComponent,\r\n\t\tSettingsComponent,\r\n\t\tDashboardsComponent,\r\n\t\tExecutionComponent,\r\n\t\tBucketsComponent,\r\n\t\t//Modals\r\n\t\tSchedulerModalComponent,\r\n\t\tGlobalsModalComponent,\r\n\t\tBucketsModalComponent,\r\n\t\tVariableModalComponent,\r\n\t\tSettingsUserModalComponent,\r\n\t\tSettingsRoleModalComponent,\r\n\t\tSettingsTimeoutModalComponent,\r\n\t\tMessagesModalComponent,\r\n\t\tPlaybookEnvironmentVariableModalComponent,\r\n\t\tMetadataModalComponent,\r\n\t\tImportModalComponent,\r\n\t\tExecutionVariableModalComponent,\r\n\t\t// Other subcomponents\r\n\t\tPlaybookArgumentComponent,\r\n\t\tPlaybookConditionsComponent,\r\n\t\tPlaybookTransformsComponent,\r\n\t\tPlaybookConditionalExpressionComponent,\r\n\t\tSettingsRolesComponent,\r\n\t\t// Pipes\r\n\t\tKeysPipe,\r\n\t\tManageDashboardsComponent,\r\n\t\tSafeEmbedPipe,\r\n\t\tWidgetModalComponent,\r\n\t],\r\n\tproviders: [\r\n\t\tUtilitiesService,\r\n\t\tAuthService,\r\n\t\tJwtInterceptor, // Providing JwtInterceptor allow to inject JwtInterceptor manually into RefreshTokenInterceptor\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseExisting: JwtInterceptor,\r\n\t\t\tmulti: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseClass: RefreshTokenInterceptor,\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t],\r\n\tentryComponents: [\r\n\t\tSchedulerModalComponent,\r\n\t\tGlobalsModalComponent,\r\n\t\tVariableModalComponent,\r\n\t\tBucketsModalComponent,\r\n\t\tSettingsUserModalComponent,\r\n\t\tSettingsRoleModalComponent,\r\n\t\tSettingsTimeoutModalComponent,\r\n\t\tMessagesModalComponent,\r\n\t\tExecutionVariableModalComponent,\r\n\t\tPlaybookEnvironmentVariableModalComponent,\r\n\t\tImportModalComponent,\r\n\t\tMetadataModalComponent,\r\n\t\tWidgetModalComponent\r\n\t],\r\n\tbootstrap: [MainComponent],\r\n})\r\nexport class MainModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { MessagesModalComponent } from '../messages/messages.modal.component';\r\n\r\nimport { MainService } from './main.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { MessageUpdate } from '../models/message/messageUpdate';\r\nimport { MessageListing } from '../models/message/messageListing';\r\n// import { Message } from '../models/message/message';\r\nimport { GenericObject } from '../models/genericObject';\r\nimport { DashboardService } from '../dashboards/dashboard.service';\r\nimport { Dashboard } from '../models/dashboard/dashboard';\r\n\r\nconst MAX_READ_MESSAGES = 5;\r\nconst MAX_TOTAL_MESSAGES = 20;\r\n\r\n@Component({\r\n\tselector: 'main-component',\r\n\ttemplateUrl: './main.html',\r\n\tstyleUrls: [\r\n\t\t'./main.scss',\r\n\t],\r\n\tproviders: [MainService, AuthService, UtilitiesService],\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n\tcurrentUser: string;\r\n\tdashboards: Dashboard[] = [];\r\n\tmessageListings: MessageListing[] = [];\r\n\tmessageModalRef: NgbModalRef;\r\n\tnewMessagesCount: number = 0;\r\n\tnotificationRelativeTimes: GenericObject = {};\r\n\teventSource: any;\r\n\r\n\tconstructor(\r\n\t\tprivate mainService: MainService, private authService: AuthService,\r\n\t\tprivate modalService: NgbModal, private toastrService: ToastrService,\r\n\t\tpublic utils: UtilitiesService, private dashboardService: DashboardService\r\n\t) {\r\n\t\t/* Hack along with styles.scss for modal animations in ng-bootstrap */\r\n\t\tNgbModalRef.prototype['c'] = NgbModalRef.prototype.close;\r\n        NgbModalRef.prototype.close = function (reason: string) {\r\n            document.querySelector('.modal-backdrop').classList.remove('show');\r\n            document.querySelector('.modal.show').classList.remove('show');\r\n            setTimeout(() => {\r\n                this['c'](reason);\r\n            }, 250);\r\n        };\r\n        NgbModalRef.prototype['d'] = NgbModalRef.prototype.dismiss;\r\n        NgbModalRef.prototype.dismiss = function (reason: string) {\r\n\t\t\tdocument.querySelector('.modal-backdrop').classList.remove('show');\r\n\t\t\tdocument.querySelector('.modal.show').classList.remove('show');\r\n            setTimeout(() => {\r\n                this['d'](reason);\r\n            }, 250);\r\n        };\r\n\t}\r\n\r\n\t/**\r\n\t * On init, set the current user from our JWT.\r\n\t * Get a list of interface names that are installed. Get initial notifications for display.\r\n\t * Set up an SSE for handling new notifications.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.currentUser = this.authService.getAndDecodeAccessToken().user_claims.username;\r\n\t\tthis.dashboardService.dashboardsChange.subscribe(dashboards => this.dashboards = dashboards);\r\n\t\t// this.getInitialNotifications();\r\n\t\t// this.getNotificationsSSE();\r\n\t}\r\n\r\n\t/**\r\n\t * Closes our SSEs on component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tif (this.eventSource && this.eventSource.close) { this.eventSource.close(); }\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs a list of message listings for unread notifications (or some amount of read notifications).\r\n\t */\r\n\tgetInitialNotifications(): void {\r\n\t\tthis.mainService.getInitialNotifications()\r\n\t\t\t.then(messageListings => {\r\n\t\t\t\tthis.messageListings = messageListings.concat(this.messageListings);\r\n\t\t\t\tthis._recalculateNewMessagesCount();\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving notifications: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up an SSE for notifications. On new messages, add a notification to the notifications dropdown.\r\n\t * For existing messages, if they were responded to, remove the ! icon.\r\n\t */\r\n\tgetNotificationsSSE(): void {\r\n\t\tthis.authService.getEventSource('/api/streams/messages/notifications')\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.eventSource = eventSource;\r\n\r\n\t\t\t\tthis.eventSource.addEventListener('created', (message: any) => {\r\n\t\t\t\t\tconst newMessage = plainToClass(MessageListing, (JSON.parse(message.data) as object));\r\n\r\n\t\t\t\t\tconst existingMessage = this.messageListings.find(m => m.id === newMessage.id);\r\n\t\t\t\t\tconst index = this.messageListings.indexOf(existingMessage);\r\n\t\t\t\t\t// If an existing message exists, replace it with the incoming message. Otherwise add it to the top of the array.\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tthis.messageListings[index] = newMessage;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.messageListings.unshift(newMessage);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove the oldest message that is read if we have too many (>5) read messages or too many total (>20)\r\n\t\t\t\t\tif (this.messageListings.filter(m => m.is_read).length > MAX_READ_MESSAGES || \r\n\t\t\t\t\t\tthis.messageListings.length > MAX_TOTAL_MESSAGES) {\r\n\t\t\t\t\t\tthis.messageListings.pop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._recalculateNewMessagesCount();\r\n\t\t\t\t\tthis.recalculateRelativeTimes();\r\n\t\t\t\t});\r\n\t\t\t\t// TODO: re-enable this if we can figure out why componentInstance is throwing an error on get\r\n\t\t\t\t// eventSource.addEventListener('read', (message: any) => {\r\n\t\t\t\t// const update = plainToClass(MessageUpdate, (JSON.parse(message.data) as object));\r\n\r\n\t\t\t\t// \tif (!this.messageModalRef || !this.messageModalRef.componentInstance) { return; }\r\n\r\n\t\t\t\t// \tif (this.messageModalRef.componentInstance.message.id === update.id) {\r\n\t\t\t\t// \t\t(this.messageModalRef.componentInstance.message as Message).read_by.push(update.username);\r\n\t\t\t\t// \t}\r\n\t\t\t\t// });\r\n\t\t\t\tthis.eventSource.addEventListener('responded', (message: any) => {\r\n\t\t\t\t\tconst update = plainToClass(MessageUpdate, (JSON.parse(message.data) as object));\r\n\r\n\t\t\t\t\tconst existingMessage = this.messageListings.find(m => m.id === update.id);\r\n\r\n\t\t\t\t\tif (existingMessage) {\r\n\t\t\t\t\t\texistingMessage.awaiting_response = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// TODO: re-enable this if we can figure out why componentInstance is throwing an error on get\r\n\t\t\t\t\t// if (!this.messageModalRef || !this.messageModalRef.componentInstance) { return; }\r\n\r\n\t\t\t\t\t// if (this.messageModalRef.componentInstance.message.id === update.id) {\r\n\t\t\t\t\t// \t(this.messageModalRef.componentInstance.message as Message).responded_at = update.timestamp;\r\n\t\t\t\t\t// \t(this.messageModalRef.componentInstance.message as Message).responded_by = update.username;\r\n\t\t\t\t\t// \t(this.messageModalRef.componentInstance.message as Message).awaiting_response = false;\r\n\t\t\t\t\t// }\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the auth service logout method and redirects to login\r\n\t * TODO: should likely roll login into the main component so we don't need to do the location.href.\r\n\t */\r\n\tlogout(): void {\r\n\t\tthis.authService.logout()\r\n\t\t\t.then(() => location.href = '/login')\r\n\t\t\t.catch(e => console.error(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the full message detail from the server and displays the message in a new modal.\r\n\t * @param event JS event fired from clicking the message link\r\n\t * @param messageListing Message Listing object to query.\r\n\t */\r\n\topenMessage(event: Event, messageListing: MessageListing): void {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.mainService.getMessage(messageListing.id)\r\n\t\t\t.then(message => {\r\n\t\t\t\tmessageListing.is_read = true;\r\n\t\t\t\tmessageListing.last_read_at = this.utils.getCurrentIsoString();\r\n\t\t\t\tthis._recalculateNewMessagesCount();\r\n\r\n\t\t\t\tthis.messageModalRef = this.modalService.open(MessagesModalComponent);\r\n\t\t\t\t\r\n\t\t\t\tthis.messageModalRef.componentInstance.message = this.utils.cloneDeep(message);\r\n\t\t\r\n\t\t\t\tthis._handleModalClose(this.messageModalRef);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error opening message: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the relative times displayed for notifications (e.g. \"a minute ago\").\r\n\t * Called when a new message is received and every time the notifications dropdown is opened/closed.\r\n\t */\r\n\trecalculateRelativeTimes(): void {\r\n\t\tthis.messageListings.forEach(ml => {\r\n\t\t\tthis.notificationRelativeTimes[ml.id] = this.utils.getRelativeLocalTime(ml.created_at);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of new notifications to display.\r\n\t */\r\n\tprivate _recalculateNewMessagesCount(): void {\r\n\t\tthis.newMessagesCount = this.messageListings.filter(m => !m.is_read).length;\r\n\t}\r\n\r\n\t/**\r\n\t * Doesn't do anything if the message modal is closed normally. Shows an error if the modal is dismissed erroneously.\r\n\t * @param modalRef Modal reference that is being closed\r\n\t */\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => null,\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n\\r\\n  <!-- Main Header -->\\r\\n  <header>\\r\\n    <nav id=\\\"walkoffNav\\\" class=\\\"navbar navbar-expand-md navbar-dark\\\">\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><b>WALK</b>OFF</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/workflows\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-sitemap\\\"></i><span class=\\\"navLink\\\">Workflows</span></a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item dropdown\\\" routerLinkActive=\\\"active\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              <i class=\\\"fa fa-area-chart\\\"></i><span class=\\\"navLink\\\">Dashboards</span>\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu border-0\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n              <a *ngFor=\\\"let dashboard of dashboards\\\" class=\\\"dropdown-item installedDashboard\\\" routerLink=\\\"/dashboard/{{dashboard.id}}\\\">\\r\\n                <span>{{ dashboard.name }}</span>\\r\\n              </a>\\r\\n              <div *ngIf=\\\"dashboards && dashboards.length > 0\\\" class=\\\"dropdown-divider\\\"></div>\\r\\n              <a class=\\\"dropdown-item installedDashboard\\\" routerLink=\\\"/dashboard/new\\\">\\r\\n                <span><i>Create New Dashboard...</i></span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/execution\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-play-circle\\\"></i><span class=\\\"navLink\\\">Execution</span></a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/globals\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-globe\\\"></i><span class=\\\"navLink\\\">Globals</span></a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/scheduler\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-calendar-o\\\"></i><span class=\\\"navLink\\\">Scheduler</span></a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/buckets\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-folder\\\"></i><span class=\\\"navLink\\\">Buckets</span></a>\\r\\n          </li>\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/messages\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-envelope-o\\\"></i><span class=\\\"navLink\\\">Messages</span></a>\\r\\n          </li> -->\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/metrics\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-pie-chart\\\"></i><span class=\\\"navLink\\\">Metrics</span></a>\\r\\n          </li> -->\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/settings\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-store\\\"></i><span class=\\\"navLink\\\">Marketplace</span></a>\\r\\n          </li> -->\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/settings\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-gear\\\"></i><span class=\\\"navLink\\\">Settings</span></a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <!-- <form class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\r\\n          <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n        </form> -->\\r\\n        <!-- Navbar Right Menu -->\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n          <!-- <li class=\\\"nav-item dropdown messages messages-menu\\\">\\r\\n            <a class=\\\"nav-link\\\" [class.newMessages]=\\\"newMessagesCount\\\" href=\\\"#\\\" id=\\\"messageDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"recalculateRelativeTimes()\\\">\\r\\n              <i class=\\\"fa\\\" [ngClass]=\\\"{ 'fa-envelope': newMessagesCount, 'fa-envelope-open-o': !newMessagesCount }\\\"></i>\\r\\n              <span> {{newMessagesCount}}</span>\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"messageDropdown\\\">\\r\\n              <span *ngIf=\\\"!messageListings.length\\\" class=\\\"noMessages\\\">You have no messages.</span>\\r\\n                <table class=\\\"messageTable\\\">\\r\\n                  <tr *ngFor=\\\"let messageListing of messageListings\\\" [class.oldMessage]=\\\"messageListing.is_read\\\">\\r\\n                    <td>\\r\\n                        <i *ngIf=\\\"messageListing.awaiting_response\\\" class=\\\"fa fa-exclamation required\\\" title=\\\"This message is awaiting response.\\\"></i>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"openMessage($event, messageListing)\\\">{{utils.getTruncatedString(messageListing.subject, 25, '(no subject)')}}</a>    \\r\\n                    </td>\\r\\n                    <td [title]=\\\"utils.getLocalTime(messageListing.created_at)\\\">{{notificationRelativeTimes[messageListing.id]}}</td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n          </li> -->\\r\\n          <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"https://walkoff.readthedocs.io\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-file-text-o\\\"></i><span class=\\\"navLink\\\">Documentation</span></a>\\r\\n            </li>\\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"http://localhost:9020\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-cloud\\\"></i><span class=\\\"navLink\\\">Manage Stack</span></a>\\r\\n            </li> -->\\r\\n          <li class=\\\"nav-item dropdown user user-menu\\\" routerLinkActive=\\\"active\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarUserDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              <!-- The user image in the navbar-->\\r\\n              <img src=\\\"client/dist/assets/img/genericUser.png\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\">\\r\\n              <!-- hidden-xs hides the username on small devices so only the image appears. -->\\r\\n              <span class=\\\"userName\\\">{{currentUser}}</span>\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right border-0\\\" aria-labelledby=\\\"navbarUserDropdown\\\">\\r\\n              <a class=\\\"dropdown-item installedDashboard\\\" href=\\\"/login\\\" (click)=\\\"logout()\\\">Sign Out</a>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </header>\\r\\n\\r\\n  <main role=\\\"main\\\">\\r\\n    <section>\\r\\n      <div>\\r\\n        <router-outlet></router-outlet>\\r\\n        <!--Modal container for ng-bootstrap, should remove if upgrading to bootstrap 4 / ng-bootstrap 1.0.0-alpha.18+-->\\r\\n        <template ngbModalContainer></template>\\r\\n      </div>\\r\\n    </section>\\r\\n    <div></div>\\r\\n  </main>\\r\\n\\r\\n  <!--<footer class=\\\"footer\\\">\\r\\n    <strong>WALKOFF</strong>\\r\\n  </footer>-->\\r\\n</div>\\r\\n\"","module.exports = \"/* @import '~@swimlane/ngx-datatable/release/index.css';\\r\\n@import '~@swimlane/ngx-datatable/release/themes/material.css';\\r\\n@import '~@swimlane/ngx-datatable/release/assets/icons.css';\\r\\n@import '~bootstrap/dist/css/bootstrap.min.css';\\r\\n@import '~font-awesome/css/font-awesome.min.css';\\r\\n@import '~ng2-toasty/style-bootstrap.css';\\r\\n@import '~select2/dist/css/select2.min.css'; */\\n/* h1 {\\r\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif, sans-serif;\\r\\n  font-weight: bold;\\r\\n  font-size: 30px;\\r\\n  color: #255876;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif, sans-serif;\\r\\n  font-weight: bold;\\r\\n} */\\n.contentContainer {\\n  position: relative;\\n  padding-bottom: 56.25%;\\n  /* 16:9 */\\n  padding-top: 25px;\\n  height: 0; }\\n/* .contentContainer iframe {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n} */\\n#walkoffNav {\\n  background-color: #3c8dbc; }\\n/* #walkoffNav a {\\r\\n  color: #f6f6f6;\\r\\n} */\\n#walkoffNav a .navLink {\\n  margin-left: 5px; }\\n/* #walkoffNav .dropdown-item {\\r\\n  color: #333333;\\r\\n} */\\n#walkoffNav {\\n  margin-bottom: 0;\\n  border: none;\\n  border-radius: 0; }\\n#walkoffNav .user-image {\\n  float: left;\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 50%;\\n  margin-right: 10px;\\n  margin-top: -2px; }\\n@media (max-width: 767px) {\\n  #walkoffNav .user-image {\\n    float: none;\\n    margin-right: 0;\\n    margin-top: -8px;\\n    line-height: 10px; } }\\n#walkoffNav .navbar-nav .dropdown .dropdown-menu {\\n  background-color: #3c8dbc; }\\n#walkoffNav .navbar-nav .dropdown .dropdown-menu .installedDashboard {\\n  color: white; }\\n#walkoffNav .navbar-nav .dropdown .dropdown-menu .installedDashboard:hover {\\n  color: #3c8dbc; }\\n#walkoffNav .navbar-nav .dropdown .dropdown-menu .installedDashboard span {\\n  margin-left: 5px; }\\n#walkoffNav .navbar-nav > .open > a {\\n  color: #3c8dbc; }\\n#walkoffNav .navbar-nav .newMessages {\\n  color: orange;\\n  font-weight: bold; }\\n#walkoffNav .navbar-nav .required {\\n  color: crimson; }\\n#walkoffNav .navbar-nav .messages-menu table,\\n#walkoffNav .navbar-nav .messages-menu table a {\\n  width: 320px;\\n  color: white;\\n  margin: 5px; }\\n#walkoffNav .navbar-nav .messages-menu table .oldMessage,\\n#walkoffNav .navbar-nav .messages-menu table .oldMessage a {\\n  color: #DDD;\\n  font-style: italic; }\\n#walkoffNav .navbar-nav .messages-menu .noMessages {\\n  color: #DDD;\\n  font-style: italic;\\n  margin-left: 10px; }\\n#walkoffNav .navbar-nav .messages-menu table tr {\\n  border-bottom: 1px solid #AAA; }\\n#walkoffNav .navbar-nav .messages-menu table tr:last-child {\\n  border-bottom: none; }\\n.footer {\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%;\\n  height: 51px;\\n  background-color: #e7e7e7;\\n  padding: 15px; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { Message } from '../models/message/message';\r\nimport { MessageListing } from '../models/message/messageListing';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { DashboardService } from '../dashboards/dashboard.service';\r\n\r\n@Injectable()\r\nexport class MainService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) { }\r\n\r\n\t/**\r\n\t * Asyncryonously returns a list of imported interface names from the server.\r\n\t */\r\n\tgetInterfaceNames(): Promise<string[]> {\r\n\t\treturn this.http.get('/api/dashboards')\r\n\t\t\t.toPromise()\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronously returns a listing of initial notifications for the initial WALKOFF page load.\r\n\t * Should return only a subset of notifications if many unread notifications exist.\r\n\t * Will fill up to 5 read notifications if unread notifications do not exist.\r\n\t */\r\n\tgetInitialNotifications(): Promise<MessageListing[]> {\r\n\t\treturn this.http.get('/api/notifications')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(MessageListing, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Asyncronouly retrieves a message by ID, marks it as read, and returns the message data.\r\n\t * @param messageId DB ID of message to retrieve\r\n\t */\r\n\tgetMessage(messageId: number): Promise<Message> {\r\n\t\treturn this.http.get(`/api/messages/${messageId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Message, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { MessagesService } from './messages.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { MessagesModalComponent } from './messages.modal.component';\r\n\r\nimport { GenericObject } from '../models/genericObject';\r\nimport { MessageListing } from '../models/message/messageListing';\r\n\r\n@Component({\r\n\tselector: 'messages-component',\r\n\ttemplateUrl: './messages.html',\r\n\tstyleUrls: [\r\n\t\t'./messages.scss',\r\n\t],\r\n\tproviders: [MessagesService],\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\t//Device Data Table params\r\n\tmessages: MessageListing[] = [];\r\n\tdisplayMessages: MessageListing[] = [];\r\n\tmessageSelectConfig: Select2Options;\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\tselectMapping: GenericObject = {};\r\n\tmessageRelativeTimes: GenericObject = {};\r\n\r\n\tconstructor(\r\n\t\tprivate messagesService: MessagesService, private modalService: NgbModal,\r\n\t\tprivate toastrService: ToastrService,\r\n\t\tpublic utils: UtilitiesService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component init, get a list of messages to display in our datatable and bind our search filter input.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.listMessages();\r\n\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterMessages());\r\n\t}\r\n\r\n\t/**\r\n\t * Filters the messages displayed based upon what is entered in the search filter input.\r\n\t * Filters based on the subject line and also recalculates the relative time of when the message was created.\r\n\t */\r\n\tfilterMessages(): void {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayMessages = this.messages.filter((message) => {\r\n\t\t\t// Update our relative time first\r\n\t\t\tthis.messageRelativeTimes[message.id] = this.utils.getRelativeLocalTime(message.created_at);\r\n\r\n\t\t\treturn (message.subject.toLocaleLowerCase().includes(searchFilter));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs an array of message listings from the server to display and performs the initial filter.\r\n\t */\r\n\tlistMessages(): void {\r\n\t\tthis.messagesService.getAllMessageListings()\r\n\t\t\t.then(messages => {\r\n\t\t\t\tthis.messages = messages;\r\n\t\t\t\tthis.filterMessages();\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving messages: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs a full message object from the server based upon a Message Listing and opens a message modal.\r\n\t * \r\n\t * @param event JS Event fired from clicking the link\r\n\t * @param messageListing Message Listing to open/query\r\n\t */\r\n\topenMessage(event: any, messageListing: MessageListing): void {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.messagesService.getMessage(messageListing.id)\r\n\t\t\t.then(message => {\r\n\t\t\t\tmessageListing.is_read = true;\r\n\t\t\t\tmessageListing.last_read_at = this.utils.getCurrentIsoString();\r\n\r\n\t\t\t\tconst modalRef = this.modalService.open(MessagesModalComponent);\r\n\t\t\r\n\t\t\t\tmodalRef.componentInstance.message = this.utils.cloneDeep(message);\r\n\t\t\r\n\t\t\t\tthis._handleModalClose(modalRef);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error opening message: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * After confirmation, will instruct the server to delete the message IDs that are selected.\r\n\t * Will then remove these from our display and perform the filter action once more.\r\n\t */\r\n\tdeleteSelected(): void {\r\n\t\tconst idsToDelete = this._getSelectedIds();\r\n\r\n\t\tif (!confirm(`Are you sure you want to delete ${idsToDelete.length} messages?`)) { return; }\r\n\r\n\t\tthis.messagesService.performActionOnMessages(idsToDelete, 'delete')\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.messages = this.messages.filter(message => idsToDelete.indexOf(message.id) === -1);\r\n\r\n\t\t\t\tidsToDelete.forEach(id => {\r\n\t\t\t\t\tthis.selectMapping[id] = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.filterMessages();\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error deleting messages: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Instructs the server to mark the message IDs that are selected as read.\r\n\t * Will then mark them as read within the data table.\r\n\t */\r\n\tmarkSelectedAsRead(): void {\r\n\t\tconst idsToRead = this._getSelectedIds();\r\n\r\n\t\tthis.messagesService.performActionOnMessages(idsToRead, 'read')\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.messages.forEach(message => {\r\n\t\t\t\t\tif (idsToRead.indexOf(message.id) !== -1) {\r\n\t\t\t\t\t\tmessage.is_read = true;\r\n\t\t\t\t\t\tmessage.last_read_at = this.utils.getCurrentIsoString();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error marking messages as read: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Instructs the server to mark the message IDs that are selected as unread.\r\n\t * Will then mark them as unread within the data table.\r\n\t */\r\n\tmarkSelectedAsUnread(): void {\r\n\t\tconst idsToUnread = this._getSelectedIds();\r\n\r\n\t\tthis.messagesService.performActionOnMessages(idsToUnread, 'unread')\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.messages.forEach(message => {\r\n\t\t\t\t\tif (idsToUnread.indexOf(message.id) !== -1) {\r\n\t\t\t\t\t\tmessage.is_read = false;\r\n\t\t\t\t\t\tmessage.last_read_at = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error marking messages as unread: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an array of all IDs that are selected (checkboxes checked in the data table).\r\n\t */\r\n\tprivate _getSelectedIds(): number[] {\r\n\t\tconst ids: number[] = [];\r\n\r\n\t\tObject.keys(this.selectMapping).forEach(id => {\r\n\t\t\tif (this.selectMapping[id]) { ids.push(+id); }\r\n\t\t});\r\n\r\n\t\treturn ids;\r\n\t}\r\n\r\n\t/**\r\n\t * On normal message modal close, do nothing. Only show an error if something goes awry.\r\n\t * @param modalRef Modal reference that is being closed\r\n\t */\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => null,\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"messagesMain\\\">\\r\\n\\t<h1>Messages</h1>\\r\\n\\r\\n\\t<div class=\\\"row align-items-center mb-3\\\">\\r\\n\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t<button (click)=\\\"deleteSelected()\\\" class=\\\"btn btn-outline-primary mx-1\\\" title=\\\"Delete Selected\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-trash-o\\\"></i>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button (click)=\\\"markSelectedAsRead()\\\" class=\\\"btn btn-outline-primary mx-1\\\" title=\\\"Mark Selected as Read\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-envelope-open-o\\\"></i>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button (click)=\\\"markSelectedAsUnread()\\\" class=\\\"btn btn-outline-primary mx-1\\\" title=\\\"Mark Selected as Unread\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-envelope-o\\\"></i>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"col-auto col-form-label\\\">Search Filter</label>\\r\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<template ngbModalContainer></template>\\r\\n\\t<ngx-datatable #messagesTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayMessages\\\" [sortType]=\\\"'multi'\\\"\\r\\n\\t [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[{prop: 'created_at', dir: 'desc'}]\\\" [limit]=\\\"25\\\">\\r\\n\\t\\t<!-- Column Templates -->\\r\\n\\t\\t<ngx-datatable-column name=\\\"\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"0\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectMapping[row.id]\\\">\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Subject\\\" prop=\\\"subject\\\" [flexGrow]=\\\"2\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<i *ngIf=\\\"row.awaiting_response\\\" class=\\\"fa fa-exclamation required\\\" title=\\\"This message is awaiting response.\\\"></i>\\r\\n\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"messageLink\\\" [class.unread]=\\\"!row.is_read\\\" (click)=\\\"openMessage($event, row)\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{utils.getDefaultString(row.subject, '(no subject)')}}\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Sent\\\" prop=\\\"created_at\\\" [flexGrow]=\\\"1\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span [title]=\\\"utils.getLocalTime(row.created_at)\\\">\\r\\n\\t\\t\\t\\t\\t{{messageRelativeTimes[row.id]}}\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t</ngx-datatable>\\r\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { MessagesService } from './messages.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { Message } from '../models/message/message';\r\n\r\n@Component({\r\n\tselector: 'messages-modal',\r\n\ttemplateUrl: './messages.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./messages.scss',\r\n\t],\r\n\tproviders: [MessagesService, UtilitiesService],\r\n})\r\nexport class MessagesModalComponent implements OnInit {\r\n\t@Input() message: Message;\r\n\r\n\tconstructor(\r\n\t\tprivate messagesService: MessagesService, private activeModal: NgbActiveModal,\r\n\t\tprivate toastrService: ToastrService, public utils: UtilitiesService,\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a given action against a message (e.g. accept, decline).\r\n\t * Removes the \"awaiting_response\" flag and updates the responded_at within the view.\r\n\t * @param action Action to perform against the message\r\n\t */\r\n\tperformMessageAction(action: string) {\r\n\t\tthis.messagesService.respondToMessage(this.message.workflow_execution_id, action)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.message.awaiting_response = false;\r\n\t\t\t\tthis.message.responded_at = this.utils.getCurrentIsoString();\r\n\t\t\t\tthis.toastrService.success(`Successfully performed \"${action}\" on message.`);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error performing ${action} on message: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Dismisses this modal.\r\n\t */\r\n\tdismiss(): void {\r\n\t\tthis.activeModal.dismiss();\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">\\r\\n\\t\\t{{message.subject}}\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</h4>\\r\\n</div>\\r\\n<div id=\\\"messageModalBody\\\" class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div *ngIf=\\\"message.read_by && message.read_by.length\\\">\\r\\n\\t\\t\\t<i>Read by: {{message.read_by.join(', ')}}</i>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"message.responded_by\\\">\\r\\n\\t\\t\\t<i>\\r\\n\\t\\t\\t\\tResponded by: {{message.responded_by}}\\r\\n\\t\\t\\t\\t<span [title]=\\\"utils.getLocalTime(message.responded_at)\\\">({{utils.getRelativeLocalTime(message.responded_at)}})</span>\\r\\n\\t\\t\\t</i>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngFor=\\\"let body of message.body\\\">\\r\\n\\t\\t\\t<p *ngIf=\\\"body.type === 'text'\\\">{{body.data.text}}</p>\\r\\n\\t\\t\\t<a *ngIf=\\\"body.type === 'url'\\\" [href]=\\\"body.data.url\\\">{{body.data.title ? body.data.title : body.data.url}}</a>\\r\\n\\t\\t\\t<div *ngIf=\\\"body.type === 'accept_decline'\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"performMessageAction('decline')\\\" [disabled]=\\\"!message.awaiting_response\\\">Decline</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"performMessageAction('accept')\\\" [disabled]=\\\"!message.awaiting_response\\\">Accept</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<!-- <div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!roleForm.form.valid\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div> -->\"","module.exports = \".messagesMain {\\n  padding: 10px 15px; }\\n\\n.messagesMain .unread {\\n  font-weight: bold; }\\n\\n.messagesMain .required {\\n  color: crimson; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Message } from '../models/message/message';\r\nimport { MessageListing } from '../models/message/messageListing';\r\nimport { Argument } from '../models/playbook/argument';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n\tconstructor(private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\t/**\r\n\t * Grabs an array of all message listings from the server.\r\n\t */\r\n\tgetAllMessageListings(): Promise<MessageListing[]> {\r\n\t\treturn this.utils.paginateAll<MessageListing>(this.getMessageListings.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs an array of message listings from the server.\r\n\t */\r\n\tgetMessageListings(page: number = 1): Promise<MessageListing[]> {\r\n\t\treturn this.http.get(`/api/messages?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(MessageListing, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Queries a given message by ID.\r\n\t * @param messageId ID of message to query\r\n\t */\r\n\tgetMessage(messageId: number): Promise<Message> {\r\n\t\treturn this.http.get(`/api/messages/${messageId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Message, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a given action against a given message or messages by ID.\r\n\t * @param messageIds ID or IDs array to perform action against\r\n\t * @param action Action to perform on the message (e.g. read, unread, delete)\r\n\t */\r\n\tperformActionOnMessages(messageIds: number | number[], action: string): Promise<void> {\r\n\t\tif (!Array.isArray(messageIds)) { messageIds = [messageIds]; }\r\n\r\n\t\treturn this.http.put('/api/messages', { ids: messageIds, action })\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Responds to a message by calling a trigger endpoint for a given workflow's execution ID.\r\n\t * @param workflow_execution_id Execution ID of workflow to trigger\r\n\t * @param action Action to send to trigger endpoint\r\n\t */\r\n\trespondToMessage(workflow_execution_id: string, action: string): Promise<string[]> {\r\n\t\tconst arg = new Argument();\r\n\t\targ.name = 'action';\r\n\t\targ.value = action;\r\n\t\tconst body: object = {\r\n\t\t\texecution_ids: [workflow_execution_id],\r\n\t\t\tdata_in: action,\r\n\t\t\targuments: [arg],\r\n\t\t};\r\n\t\treturn this.http.put('/api/triggers/send_data', body)\r\n\t\t\t.toPromise()\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import { Component, ViewEncapsulation, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\nimport { MetricsService } from './metrics.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { AppMetric } from '../models/metric/appMetric';\r\nimport { WorkflowMetric } from '../models/metric/workflowMetric';\r\n\r\n@Component({\r\n\tselector: 'metrics-component',\r\n\ttemplateUrl: './metrics.html',\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tstyleUrls: [\r\n\t\t'./metrics.scss',\r\n\t],\r\n\tproviders: [MetricsService],\r\n})\r\n\r\nexport class MetricsComponent implements OnInit {\r\n    appMetrics: AppMetric[] = [];\r\n    appFilter: string = '';\r\n    workflowMetrics: WorkflowMetric[] = [];\r\n\tavailableApps: Select2OptionData[] = [];\r\n\tappSelectConfig: any;\r\n\trecalculateTableCallback: any;\r\n\r\n\t@ViewChild('appMetricsTable') appMetricsTable: DatatableComponent; \r\n\t@ViewChild('workflowMetricsTable') workflowMetricsTable: DatatableComponent; \r\n\r\n\tconstructor(\r\n        private metricsService: MetricsService, private toastrService: ToastrService, \r\n\t\tprivate utils: UtilitiesService, private cdr: ChangeDetectorRef\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.appSelectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select an App to view its Metrics',\r\n\t\t};\r\n\r\n\t\tthis.recalculateTableCallback = (e: any) => {\r\n\t\t\tthis.recalculateTable(e);\r\n\t\t}\r\n\t\t$(document).on('shown.bs.tab', 'a[data-toggle=\"tab\"]', this.recalculateTableCallback)\r\n\r\n\t\tthis.getAppMetrics();\r\n\t\tthis.getWorkflowMetrics();\r\n\t}\r\n\r\n\t/**\r\n\t * Closes our SSEs on component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tif (this.recalculateTableCallback) { $(document).off('shown.bs.tab', 'a[data-toggle=\"tab\"]', this.recalculateTableCallback); }\r\n\t}\r\n\r\n\t/**\r\n\t * This angular function is used primarily to recalculate column widths for execution results table.\r\n\t */\r\n\trecalculateTable(event: any) : void {\r\n\t\tlet table: DatatableComponent;\r\n\t\tswitch(event.target.getAttribute('href')) {\r\n\t\t\tcase '#apps':\r\n\t\t\t\ttable = this.appMetricsTable;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '#workflows':\r\n\t\t\t\ttable = this.workflowMetricsTable;\r\n\t\t}\r\n\t\tif (table && table.recalculate) {\r\n\t\t\tthis.cdr.detectChanges();\r\n\t\t\tif (Array.isArray(table.rows)) table.rows = [...table.rows];\r\n\t\t\ttable.recalculate();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Grabs case events from the server for the selected case (from the JS event supplied).\r\n\t * Will update the case events data table with the new case events.\r\n\t * @param event JS event from the select2 case select box\r\n\t */\r\n\tappSelectChange(event: any): void {\r\n\t\tif (!event.value || event.value === '') { \r\n            this.appFilter = '';\r\n        }\r\n        else {\r\n            this.appFilter = event.value;\r\n        }\r\n    }\r\n    \r\n    getFilteredAppMetrics(): AppMetric[] {\r\n        if (!this.appFilter || this.appFilter == 'all') return this.appMetrics;\r\n        return this.appMetrics.filter(appMetric => appMetric.name == this.appFilter);\r\n    }\r\n\r\n    displayAppMetrics(): object[] {\r\n        let metrics: object[] = [];\r\n        this.getFilteredAppMetrics().forEach(appMetric => {\r\n            appMetric.actions.forEach(actionMetric => {\r\n                metrics.push({\r\n                    app: appMetric.name,\r\n                    action: actionMetric.name,\r\n                    success: actionMetric.success_metrics.display_text,\r\n                    error: actionMetric.error_metrics.display_text,\r\n                    total_count: actionMetric.success_metrics.count + actionMetric.error_metrics.count\r\n                })\r\n            })\r\n        })\r\n        return metrics;\r\n    }\r\n    \r\n    /**\r\n\t * Grabs all the existing cases in the DB for use in populating the cases datatable.\r\n\t * Will also populate the case select2 data for use on the case events tab.\r\n\t */\r\n\tgetAppMetrics(): void {\r\n\t\tthis.metricsService\r\n\t\t\t.getAppMetrics()\r\n\t\t\t.then((appMetrics) => {\r\n\t\t\t\tthis.appMetrics = appMetrics;\r\n                this.availableApps = [{ id: '', text: '' },{ id: 'all', text: 'All' }].concat(appMetrics.map(m => ({ id: m.name, text: m.name })));\r\n                this.displayAppMetrics();\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving app metrics: ${e.message}`));\r\n    }\r\n    \r\n    /**\r\n\t * Grabs all the existing cases in the DB for use in populating the cases datatable.\r\n\t * Will also populate the case select2 data for use on the case events tab.\r\n\t */\r\n\tgetWorkflowMetrics(): void {\r\n\t\tthis.metricsService\r\n\t\t\t.getWorkflowMetrics()\r\n\t\t\t.then((workflowMetrics) => {\r\n\t\t\t\tthis.workflowMetrics = workflowMetrics;\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving workflow metrics: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a string of concatenated array values.\r\n\t * E.g. ['some', 'text', 'here'] => 'some, text, here'\r\n\t * @param input Array of strings to concat into a friendly string\r\n\t */\r\n\tgetFriendlyArray(input: string[]): string {\r\n\t\treturn input.join(', ');\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an input object to a JSON string, removing the quotes for better reading.\r\n\t * @param input Input object to convert\r\n\t */\r\n\tgetFriendlyObject(input: object): string {\r\n\t\tlet out = JSON.stringify(input, null, 1);\r\n\t\tout = out.substr(1, out.length - 2).replace(/\"/g, '');\r\n\t\treturn out;\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"metricsMain\\\">\\r\\n\\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" href=\\\"#workflows\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">Workflow Metrics</a></li>\\r\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#apps\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">App Metrics</a></li>\\r\\n\\t</ul>\\r\\n\\t<div class=\\\"tab-content\\\">\\r\\n\\t\\t<div id=\\\"workflows\\\" class=\\\"tab-pane fade show active\\\">\\r\\n\\t\\t\\t<h1>Workflow Metrics</h1>\\r\\n\\r\\n\\t\\t\\t<ngx-datatable #workflowMetricsTable class='material expandable workflowMetricsTable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"workflowMetrics\\\"\\r\\n\\t\\t\\t [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[{prop: 'name', dir: 'asc'}]\\\" [limit]=\\\"25\\\">\\r\\n\\t\\t\\t\\t<!-- Column Templates -->\\r\\n\\t\\t\\t\\t<ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"4\\\"></ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Executions (Average Time)\\\" prop=\\\"display_text\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t</ngx-datatable>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div id=\\\"apps\\\" class=\\\"tab-pane fade\\\">\\r\\n\\t\\t\\t<h1>App Metrics</h1>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-offset-7 col-5\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<select2 [data]=\\\"availableApps\\\" [value]=\\\"\\\" [options]=\\\"appSelectConfig\\\" (valueChanged)=\\\"appSelectChange($event)\\\"></select2>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<ngx-datatable #appMetricsTable class='material expandable appMetricsTable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayAppMetrics()\\\" [sortType]=\\\"'multi'\\\"\\r\\n\\t\\t\\t\\t[headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[{prop: 'app', dir: 'asc'}, {prop: 'action', dir: 'asc'}]\\\" [limit]=\\\"25\\\">\\r\\n\\t\\t\\t\\t<!-- Column Templates -->\\r\\n\\t\\t\\t\\t<ngx-datatable-column name=\\\"App\\\" prop=\\\"app\\\" [flexGrow]=\\\"2\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t<ngx-datatable-column name=\\\"Action\\\" prop=\\\"action\\\" [flexGrow]=\\\"2\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t<ngx-datatable-column name=\\\"Successful Executions (Average Time)\\\" prop=\\\"success\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t\\t<ngx-datatable-column name=\\\"Failed Executions (Average Time)\\\" prop=\\\"error\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t\\t</ngx-datatable>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"#main.metricsMain {\\n  padding: 10px 15px; }\\n\\n.metricsMain .box-title {\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n  font-weight: bold; }\\n\\n.metricsMain .form-control.input-sm {\\n  margin-left: 10px; }\\n\\n.metricsMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { AppMetric } from '../models/metric/appMetric';\r\nimport { WorkflowMetric } from '../models/metric/workflowMetric';\r\n// import { ActionMetric } from '../models/metric/actionMetric';\r\n\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Injectable()\r\nexport class MetricsService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\t/**\r\n\t * Gets an array of AppMetric objects specified in the DB.\r\n\t */\r\n\tgetAppMetrics(): Promise<AppMetric[]> {\r\n\t\treturn this.http.get('/api/metrics/apps')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((res: any) => res.apps)\r\n\t\t\t.then((data) => plainToClass(AppMetric, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n    }\r\n    \r\n    /**\r\n\t * Gets an array of WorkflowMetric objects specified in the  DB.\r\n\t */\r\n\tgetWorkflowMetrics(): Promise<WorkflowMetric[]> {\r\n\t\treturn this.http.get('/api/metrics/workflows')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((res: any) => res.workflows)\r\n\t\t\t.then((data) => plainToClass(WorkflowMetric, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { UserClaims } from './userClaims';\r\n\r\nexport class AccessToken {\r\n\texp: number;\r\n\r\n\tfresh: boolean;\r\n\r\n\tiat: number;\r\n\r\n\tidentity: number;\r\n\r\n\tjti: string;\r\n\r\n\tnbf: number;\r\n\r\n\ttype: string;\r\n\t\r\n\t@Type(() => UserClaims)\r\n\tuser_claims: UserClaims;\r\n}\r\n","import { Type, Exclude } from 'class-transformer';\r\n\r\nimport { ParameterApi } from './parameterApi';\r\nimport { ReturnApi } from './returnApi';\r\n\r\nexport enum ActionType {\r\n\tACTION = 'ACTION',\r\n\tCONDITION = 'CONDITION',\r\n\tTRANSFORM = 'TRANSFORM',\r\n\tTRIGGER = 'TRIGGER'\r\n}\r\n\r\nexport class ActionApi {\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\tparallel_parameter: string[];\r\n\r\n\t@Type(() => ParameterApi)\r\n\tparameters: ParameterApi[] = [];\r\n\r\n\tdefault_return: string;\r\n\r\n\t@Type(() => ReturnApi)\r\n\treturns: ReturnApi[] = [];\r\n\r\n\t// Name of event in the case of a triggered action, null or whitespace to indicate no event\r\n\tevent: string;\r\n\r\n\trun: string;\r\n\r\n\tdeprecated: boolean;\r\n\r\n\t@Exclude()\r\n\tapp_name: string;\r\n\r\n\t@Exclude()\r\n\tapp_version: string;\r\n\r\n\t// tags: Tag[] = [];\r\n\r\n\tsummary: string;\r\n\r\n\tnode_type: ActionType = ActionType.ACTION;\r\n\r\n\t// external_docs: ExternalDoc[] = [];\r\n\r\n\tglobal: boolean;\r\n\r\n\tget parallelParameters(): ParameterApi[] {\r\n\t\treturn this.parameters.filter(p => p.parallelizable);\r\n\t}\r\n\r\n\tget canRunInParallel() : boolean {\r\n\t\treturn this.parallelParameters.length > 0;\r\n\t}\r\n}\r\n","import { Type, Expose } from 'class-transformer';\r\n\r\nimport { ActionApi } from './actionApi';\r\nimport { ConditionApi } from './conditionApi';\r\nimport { TransformApi } from './transformApi';\r\nimport { DeviceApi } from './deviceApi';\r\n\r\nexport class AppApi {\r\n\r\n\t@Expose({ name: 'id_'})\r\n\tid: string;\r\n\r\n\tname: string;\r\n\r\n\twalkoff_version?: string;\r\n\r\n\tapp_version?: string;\r\n\r\n\tdescription?: string;\r\n\r\n\tcontact_info?: {\r\n\t\tname: string,\r\n\t\turl: string,\r\n\t\temail: string\r\n\t};\r\n\r\n\tlicense_info?: {\r\n\t\tname: string,\r\n\t\turl: string\r\n\t};\r\n\r\n\ttags?: any[];\r\n\r\n\texternal_docs?: any[];\r\n\r\n\r\n\t@Expose({ name: 'actions'})\r\n\t@Type(() => ActionApi)\r\n\taction_apis?: ActionApi[] = [];\r\n\r\n\t@Type(() => ConditionApi)\r\n\tcondition_apis?: ConditionApi[] = [];\r\n\r\n\t@Type(() => TransformApi)\r\n\ttransform_apis?: TransformApi[] = [];\r\n\r\n\t@Type(() => DeviceApi)\r\n\tdevice_apis?: DeviceApi[] = [];\r\n\r\n\tgetFilteredActionApis(searchTerm: string) : ActionApi[] {\r\n\t\tsearchTerm = searchTerm.trim().toLowerCase();\r\n\t\treturn (searchTerm) ?\r\n\t\t\tthis.action_apis.filter(api => api.name.toLowerCase().includes(searchTerm) || this.name.toLowerCase().includes(searchTerm)) :\r\n\t\t\tthis.action_apis;\r\n\t}\r\n\r\n\t// info: AppInfo;\r\n\r\n\t// tags: Tag[] = [];\r\n\r\n\t// external_docs: ExternalDoc[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { ParameterApi } from './parameterApi';\r\nimport { ReturnApi } from './returnApi';\r\n\r\nexport class ConditionApi {\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\t@Type(() => ParameterApi)\r\n\tparameters: ParameterApi[] = [];\r\n\r\n\t@Type(() => ReturnApi)\r\n\treturns: ReturnApi[] = [];\r\n\r\n\trun: string;\r\n\r\n\tdata_in: string;\r\n\r\n\tdeprecated: boolean;\r\n\r\n\t// tags: Tag[] = [];\r\n\r\n\tsummary: string;\r\n\r\n\t// external_docs: ExternalDoc[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { DeviceFieldApi } from './deviceFieldApi';\r\n\r\nexport class DeviceApi {\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\t@Type(() => DeviceFieldApi)\r\n\tfields: DeviceFieldApi[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { ParameterSchema } from './parameterSchema';\r\n\r\nexport class DeviceFieldApi {\r\n\tname: string;\r\n\r\n\tdescription?: string;\r\n\r\n\tencrypted?: boolean;\r\n\r\n\trequired?: boolean = false;\r\n\r\n\t@Type(() => ParameterSchema)\r\n\tschema: ParameterSchema;\r\n}\r\n","import { ParameterSchema } from './parameterSchema';\r\n\r\nexport class ParameterApi {\r\n\tname: string;\r\n\tdescription?: string;\r\n\texample?: any;\r\n\trequired?: boolean = false;\r\n\tparallelizable?: boolean = false;\r\n\tschema: ParameterSchema;\r\n}\r\n","export class ParameterSchema {\r\n\ttype: string;\r\n\r\n\tdefault?: any;\r\n\r\n\tplaceholder?: string;\r\n\t\r\n\t// maxLength: 10;\r\n\t// Additional JSON Schema Properties can be added (e.g. maxLength)\r\n\t[key: string]: any;\r\n}\r\n","\r\nimport { Type } from 'class-transformer';\r\n\r\nimport { ParameterSchema } from './parameterSchema';\r\n\r\nexport class ReturnApi {\r\n\tstatus: string;\r\n\r\n\tfailure: boolean = false;\r\n\r\n\tdescription: string;\r\n\r\n\t@Type(() => ParameterSchema)\r\n\tschema: ParameterSchema;\r\n\r\n\texamples: any;\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { ParameterApi } from './parameterApi';\r\nimport { ReturnApi } from './returnApi';\r\n\r\nexport class TransformApi {\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\t@Type(() => ParameterApi)\r\n\tparameters: ParameterApi[] = [];\r\n\r\n\t@Type(() => ReturnApi)\r\n\treturns: ReturnApi[] = [];\r\n\r\n\trun: string;\r\n\r\n\tdata_in: string;\r\n\r\n\tdeprecated: boolean;\r\n\r\n\t// tags: Tag[] = [];\r\n\r\n\tsummary: string;\r\n\r\n\t// external_docs: ExternalDoc[] = [];\r\n}\r\n","export class AvailableResourceAction {\r\n\tname: string;\r\n\r\n\tapp_name?: string;\r\n\r\n\tactions: string[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { BucketTrigger } from './trigger';\r\n\r\nexport class Bucket {\r\n\tid: number;\r\n\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\t@Type(() => BucketTrigger)\r\n\tbucket_trigger: BucketTrigger[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nexport class BucketTrigger {\r\n\tid: number;\r\n\r\n\tsuffix: string;\r\n\r\n\tprefix: string;\r\n\r\n\tevent_type: string; //\"s3:ObjectCreated:*\", \"s3:ObjectRemoved:*\", \"s3:ObjectAccessed:*\"\r\n\r\n\tworkflow: string;\r\n}\r\n","export class Configuration {\r\n\r\n\tstatic getDefaultConfiguration(): Configuration {\r\n\t\treturn {\r\n\t\t\taccess_token_duration: 15,\r\n\t\t\trefresh_token_duration: 30\r\n\t\t};\r\n\t}\r\n\r\n\taccess_token_duration: number; //in minutes\r\n\r\n\trefresh_token_duration: number; //in days\r\n}\r\n","import { Type, Expose } from 'class-transformer';\r\n\r\nimport { DashboardWidget, \r\n         BarChartWidget, \r\n         PieChartWidget, \r\n         LineChartWidget,  \r\n         TextWidget,\r\n         TableWidget,\r\n         KibanaWidget\r\n} from \"./dashboardWidget\";\r\n\r\nimport { UUID } from 'angular2-uuid';\r\n\r\nexport class Dashboard {\r\n\r\n    @Expose({ name: \"id_\" })\r\n    id: string;\r\n\r\n    name: string;\r\n\r\n    @Type(() => DashboardWidget, {\r\n        keepDiscriminatorProperty: true,\r\n        discriminator: {\r\n            property: \"type_\",\r\n            subTypes: [\r\n                { value: BarChartWidget, name: \"bar\" },\r\n                { value: PieChartWidget, name: \"pie\" },\r\n                { value: LineChartWidget, name: \"line\" },\r\n                { value: TextWidget, name: \"text\" },\r\n                { value: TableWidget, name: \"table\" },\r\n                { value: KibanaWidget, name: \"kibana\" },\r\n            ]\r\n        }\r\n    })\r\n    widgets: DashboardWidget[] = []; \r\n\r\n    constructor() { \r\n        this.id = UUID.UUID();\r\n    }\r\n}\r\n","import { Exclude, Expose } from 'class-transformer';\r\n\r\nexport abstract class DashboardWidget {\r\n\r\n    @Expose({ name: \"id_\" })\r\n    id: string;\r\n\r\n    type_ = 'text';\r\n\r\n    name: string = \"\";\r\n\r\n    options: any = {};\r\n\r\n    @Exclude()\r\n    metadata: any = {};\r\n\r\n    constructor(\r\n        public x = 0, \r\n        public y = 0, \r\n        public cols = 4, \r\n        public rows = 4,\r\n    ) { }\r\n\r\n    get type(): string {\r\n        return this.type_;\r\n    }\r\n\r\n    setMetadata(results: any) {\r\n        this.metadata = results;\r\n    }\r\n}\r\n\r\nexport abstract class ChartWidget extends DashboardWidget {\r\n    @Exclude()\r\n    chartLabels: string[];\r\n\r\n    @Exclude()\r\n    chartData: any[];\r\n\r\n    @Exclude()\r\n    chartOptions: any = {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true\r\n    };\r\n\r\n    @Exclude()\r\n    showLegend: boolean = false;\r\n\r\n    setMetadata(results: any) {\r\n        this.metadata = {\r\n            chartLabels: results.headers,\r\n            chartData: [{\r\n                data: results.rows[0],\r\n                label: (this.options.units) ? this.options.units : 'Count'\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\nexport class BarChartWidget extends ChartWidget {\r\n    type_ = 'bar';\r\n\r\n    @Exclude()\r\n    chartLabels: string[] = ['192.168.1.105', '192.168.1.103', '192.168.1.102', '192.168.1.104', '192.168.1.1', 'fe80::219:e3ff:fee7:5d23', 'fe80::2c23:b96c:78d:e116', '169.254.225.22', '0.0.0.0', '255.255.255.255'];\r\n\r\n    @Exclude()\r\n    chartData: any[] = [\r\n        { data: [951, 914, 896, 81, 427, 35, 34, 28, 4, 1, 1], label: 'Yesterday' },\r\n        { data: [560, 800, 1200, 43, 500, 80, 25, 50, 10, 0, 0], label: 'Today' },\r\n    ];\r\n}\r\n\r\nexport class PieChartWidget  extends ChartWidget {\r\n    type_ = 'pie';\r\n\r\n    @Exclude()\r\n    chartLabels: string[] = ['UDP', 'TCP', 'ICMP'];\r\n\r\n    @Exclude()\r\n    chartData: number[] = [1881, 1408, 2];\r\n\r\n    setMetadata(results: any) {\r\n        this.metadata = {\r\n            chartLabels: results.headers,\r\n            chartData: results.rows[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class LineChartWidget  extends ChartWidget {\r\n    type_ = 'line';\r\n\r\n    @Exclude()\r\n    chartLabels: string[] = ['80', '53', '138', '137', '67', '5353', '443', '547', '995', '37'];\r\n\r\n    @Exclude()\r\n    chartData: any[] = [\r\n        { data: [1316, 1271, 270, 159, 71, 68, 44, 17, 17, 16], label: 'Count' },\r\n    ];\r\n}\r\n\r\nexport class TableWidget extends DashboardWidget {\r\n    type_ = 'table';\r\n    \r\n    setMetadata(results: any) {\r\n        const columns = results.headers.map(h => ({prop: h}))\r\n\r\n        this.metadata = {\r\n            columns,\r\n            rows: results.data\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextWidget  extends DashboardWidget {\r\n    type_ = 'text';\r\n}\r\n\r\nexport class KibanaWidget  extends DashboardWidget {\r\n    type_ = 'kibana';\r\n}\r\n","export class ConsoleLog {\r\n\tmessage: string;\r\n\r\n\t// action_name: string;\r\n  //\r\n\t// app_name: string;\r\n  //\r\n\t// workflow: string;\r\n  //\r\n\t// level: string;\r\n\r\n\ttoNewConsoleLog(): ConsoleLog {\r\n\t\tconst out = new ConsoleLog();\r\n\r\n\t\tout.message = this.message;\r\n\t\t// out.action_name = this.action_name;\r\n\t\t// out.app_name = this.app_name;\r\n\t\t// out.workflow = this.workflow;\r\n\t\t// out.level = this.level;\r\n\r\n\t\treturn out;\r\n\t}\r\n}\r\n","import { Type, Exclude } from 'class-transformer';\r\n\r\nimport { Argument } from '../playbook/argument';\r\n\r\nexport enum NodeStatuses {\r\n\t  //PAUSED = \"PAUSED\",\r\n    AWAITING_DATA = \"AWAITING_DATA\",\r\n    //PENDING = \"PENDING\",\r\n    //COMPLETED = \"COMPLETED\",\r\n    //ABORTED = \"ABORTED\",\r\n    EXECUTING = \"EXECUTING\",\r\n    SUCCESS = \"SUCCESS\",\r\n    FAILURE = \"FAILURE\",\r\n}\r\n\r\nexport class NodeStatus {\r\n\r\n\texecution_id: string;\r\n\r\n\tnode_id: string;\r\n\r\n\tlabel: string;\r\n\r\n\tapp_name: string;\r\n\r\n\tname: string;\r\n\r\n\t/**\r\n\t * Type of action result. executing, success, failure\r\n\t */\r\n\tstatus: string;\r\n\r\n\tresult?: any;\r\n\r\n\tstarted_at: string;\r\n\r\n\tcompleted_at?: string;\r\n\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\t@Exclude({ toPlainOnly: true })\r\n\tlocalized_started_at?: string;\r\n\r\n\t@Exclude({ toPlainOnly: true })\r\n\tlocalized_completed_at?: string;\r\n}\r\n","import { Type, Expose } from 'class-transformer';\r\n\r\nimport { Argument } from '../playbook/argument';\r\nimport { NodeStatus } from './nodeStatus';\r\n\r\nexport class NodeStatusEvent {\r\n\texecution_id: string;\r\n\r\n\t@Expose({name: 'node_id'})\r\n\tnode_id: string;\r\n\r\n\tlabel: string;\r\n\r\n\tapp_name: string;\r\n\r\n\tname: string;\r\n\r\n\tresult?: any;\r\n\r\n\t/**\r\n\t * Type of action result. executing, success, failure\r\n\t */\r\n\tstatus: string;\r\n\r\n\tstarted_at: string;\r\n\r\n\tcompleted_at: string\r\n\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\r\n\r\n\ttoNewNodeStatus(): NodeStatus {\r\n\t\tconst out = new NodeStatus();\r\n\r\n\t\tout.execution_id = this.execution_id;\r\n\t\tout.node_id = this.node_id;\r\n\t\tout.name = this.name;\r\n\t\tout.app_name = this.app_name;\r\n\t\tout.label = this.label;\r\n\t\tout.status = this.status;\r\n\t\tout.started_at = this.started_at;\r\n\t\tout.completed_at = this.completed_at;\r\n\t\tout.arguments = this.arguments;\r\n\t\tout.result = this.result;\r\n\r\n\t\treturn out;\r\n\t}\r\n}\r\n","export class NodeStatusSummary {\r\n\r\n\tnode_id: string;\r\n\r\n\texecution_id: string;\r\n\r\n\tlabel: string;\r\n\r\n\tname: string;\r\n\r\n\tapp_name: string;\r\n}\r\n","import { Type, Exclude } from 'class-transformer';\r\n\r\nimport { NodeStatus } from './nodeStatus';\r\n\r\nimport * as moment from 'moment';\r\nimport { NodeStatusSummary } from './nodeStatusSummary';\r\n\r\nexport enum WorkflowStatuses {\r\n\tPAUSED = \"PAUSED\",\r\n    AWAITING_DATA = \"AWAITING_DATA\",\r\n    PENDING = \"PENDING\",\r\n    COMPLETED = \"COMPLETED\",\r\n    ABORTED = \"ABORTED\",\r\n    EXECUTING = \"EXECUTING\",\r\n    //SUCCESS = \"SUCCESS\",\r\n    //FAILURE = \"FAILURE\",\r\n}\r\n\r\nexport class WorkflowStatus {\r\n\r\n\tid?: string;\r\n\r\n\texecution_id: string;\r\n\r\n\tworkflow_id: string;\r\n\r\n\tname: string;\r\n\r\n\tstarted_at?: string;\r\n\r\n\tuser: string;\r\n\r\n\t/**\r\n\t * Date when workflow ended.\r\n\t * TODO: figure out if we want to use this for various stopping points: awaiting data, paused, completed, aborted\r\n\t */\r\n\tcompleted_at?: string;\r\n\r\n\t/**\r\n\t * Status of the workflow.\r\n\t * Possible values: queued, running, awaiting_data, paused, completed, aborted\r\n\t */\r\n\tstatus: string;\r\n\r\n\t@Type(() => NodeStatusSummary)\r\n\tnode_status?: NodeStatusSummary;\r\n\r\n\t@Type(() => NodeStatus)\r\n\tnode_statuses?: NodeStatus[] = [];\r\n\r\n\t@Exclude({ toPlainOnly: true })\r\n\tlocalized_started_at?: string;\r\n\r\n\t@Exclude({ toPlainOnly: true })\r\n\tlocalized_completed_at?: string;\r\n\r\n\tget completed_at_local() : string {\r\n\t\tif (this.completed_at)\r\n\t\t\treturn moment(this.completed_at).format('LL LTS');\r\n\t}\r\n\r\n\tget completed_at_relative() : string {\r\n\t\tif (this.completed_at)\r\n\t\t\treturn moment(this.completed_at).toNow()\r\n\t}\r\n\r\n\tget started_at_local() : string {\r\n\t\tif (this.started_at)\r\n\t\t\treturn moment(this.started_at).format('LL LTS');\r\n\t}\r\n\r\n\tget started_at_relative() : string {\r\n\t\tif (this.started_at)\r\n\t\t\treturn moment(this.started_at).toNow();\r\n\t}\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { WorkflowStatus } from './workflowStatus';\r\nimport { NodeStatusSummary } from './nodeStatusSummary';\r\n\r\nexport class WorkflowStatusEvent {\r\n\texecution_id: string;\r\n\r\n\tworkflow_id: string;\r\n\r\n\tname: string;\r\n\r\n\tuser: string;\r\n\r\n\ttimestamp: string;\r\n\r\n\tstarted_at: string;\r\n\r\n\tcompleted_at: string;\r\n\r\n\tstatus: string;\r\n\r\n\t@Type(() => NodeStatusSummary)\r\n\tnode_status?: NodeStatusSummary;\r\n\r\n\ttoNewWorkflowStatus(): WorkflowStatus {\r\n\t\tconst out = new WorkflowStatus();\r\n\r\n\t\tout.execution_id = this.execution_id;\r\n\t\tout.workflow_id = this.workflow_id;\r\n\t\tout.name = this.name;\r\n\t\tout.status = this.status;\r\n\t\tout.node_status = this.node_status;\r\n\r\n\t\treturn out;\r\n\t}\r\n}\r\n","\r\nexport class Global {\r\n\tid: number;\r\n\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\ttype: string;\r\n\r\n\tapp_name: string;\r\n\r\n\tfields: Array<{ name: string; value: any }> = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { MessageBody } from './messageBody';\r\n\r\nexport class Message {\r\n\tid: number;\r\n\r\n\tworkflow_execution_id: string;\r\n\r\n\tworkflow_name: string;\r\n\r\n\trequires_reauthorization: boolean;\r\n\r\n\tsubject: string;\r\n\r\n\t@Type(() => MessageBody)\r\n\tbody: MessageBody[] = [];\r\n\r\n\tcreated_at: string;\r\n\r\n\tlast_read_at?: string;\r\n\r\n\tis_read: boolean;\r\n\r\n\tawaiting_response: boolean;\r\n\r\n\tresponded_by?: string;\r\n\r\n\tresponded_at?: string;\r\n\r\n\tread_by?: string[] = [];\r\n}\r\n","export class MessageBody {\r\n\ttype: string;\r\n\r\n\tdata: object;\r\n}\r\n","export class MessageListing {\r\n\tid: number;\r\n\r\n\tsubject: string;\r\n\r\n\tcreated_at: string;\r\n\r\n\tawaiting_response: boolean;\r\n\r\n\tis_read: boolean;\r\n\r\n\tlast_read_at: string;\r\n}\r\n","export class MessageUpdate {\r\n\tid: number;\r\n\r\n\tusername: string;\r\n\r\n\ttimestamp: string;\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { Metric } from './metric';\r\n\r\nexport class ActionMetric {\r\n\tname: string;\r\n\r\n\t@Type(() => Metric)\r\n    success_metrics: Metric = new Metric();\r\n\r\n    @Type(() => Metric)\r\n    error_metrics: Metric = new Metric();\r\n}","import { Type } from 'class-transformer';\r\n\r\nimport { ActionMetric } from './actionMetric';\r\n\r\nexport class AppMetric {\r\n\tname: string;\r\n\r\n\tcount: string;\r\n\r\n\t@Type(() => ActionMetric)\r\n\tactions: ActionMetric[] = [];\r\n}","import * as moment from 'moment';\r\n\r\nexport class Metric {\r\n    count: number = 0;\r\n\r\n    avg_time: string = '0:00:00.000000';\r\n\r\n    get display_avg_time() : string {\r\n        let duration = moment.duration(this.avg_time);\r\n        return duration.asSeconds() >= 1 ? duration.asSeconds() + ' s' : duration.asMilliseconds() + ' ms';\r\n    }\r\n\r\n    get display_text(): string {\r\n        return (this.count > 0) ? `${this.count} (${this.display_avg_time})` : '0';\r\n    }\r\n}","import { Metric } from './metric';\r\n\r\nexport class WorkflowMetric extends Metric {\r\n    name: string;\r\n}","import { Type, Expose, Exclude } from 'class-transformer';\r\n\r\nimport { Argument } from './argument';\r\nimport { GraphPosition } from './graphPosition';\r\nimport { ExecutionElement } from './executionElement';\r\nimport { ActionType } from '../api/actionApi';\r\nimport { WorkflowNode } from './WorkflowNode';\r\n\r\nexport class Action extends ExecutionElement implements WorkflowNode {\r\n\r\n\t@Exclude()\r\n\taction_type: ActionType = ActionType.ACTION;\r\n\t\r\n\t// _workflow_id: number;\r\n\t@Expose({ name: 'label' })\r\n\tname: string;\r\n\r\n\t@Type(() => GraphPosition)\r\n\tposition: GraphPosition;\r\n\r\n\tapp_name: string;\r\n\r\n\tapp_version: string;\r\n\r\n\t@Expose({ name: 'name' })\r\n\taction_name: string;\r\n\r\n\trisk?: number;\r\n\r\n\t@Expose({ name: 'parameters' })\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors\r\n\t\t\t\t   .concat(...(this.arguments) ? this.arguments.map(argument => argument.all_errors) : [])\r\n\t}\r\n\r\n\tgetArgument(name: string) : Argument {\r\n\t\treturn this.arguments.find(a => a.name == name)\r\n\t}\r\n\r\n\t@Expose()\r\n\tget parallelized(): boolean {\r\n\t\treturn (this.parallel_parameter) ? true : false\r\n\t}\r\n\r\n\tget parallel_parameter() : string {\r\n\t\tconst argument = this.arguments.find(a => a.parallelized == true);\r\n\t\treturn (argument) ? argument.name : null;\r\n\t}\r\n\r\n\tset parallel_parameter(name: string) {\r\n\t\tthis.arguments.forEach(a => a.parallelized = false);\r\n\t\tconst argument = this.arguments.find(a => a.name == name);\r\n\t\tif (argument) argument.parallelized = true;\r\n\t}\r\n}\r\n","import { Transform, Exclude, Expose } from 'class-transformer';\r\nimport { TransformationType } from 'class-transformer/TransformOperationExecutor';\r\n\r\nexport enum Variant {\r\n\tSTATIC_VALUE = 'STATIC_VALUE',\r\n\tACTION_RESULT = 'ACTION_RESULT',\r\n\tWORKFLOW_VARIABLE = 'WORKFLOW_VARIABLE',\r\n\tGLOBAL = 'GLOBAL'\r\n}\r\n\r\nexport class Argument {\r\n\t@Expose({ name: 'id_'})\r\n\t@Exclude({ toPlainOnly: true})\r\n\tid?: number;\r\n\t// _node_id: number;\r\n\t// _condition_id: number;\r\n\t// _transform_id: number;\r\n\r\n\t/**\r\n\t * Name of the argument in question\r\n\t */\r\n\tname: string;\r\n\r\n\t/**\r\n\t * The static value of the argument in question. Only used if reference is not specified.\r\n\t * If reference is specified, selection is used to select specific values.\r\n\t */\r\n\tvalue?: any;\r\n\r\n\t/**\r\n\t * The type of argument in question\r\n\t */\r\n\tvariant: Variant = Variant.STATIC_VALUE;\r\n\r\n\t/**\r\n\t * If the worker should run this action in parallel based on this parameter or not\r\n\t */\r\n\tparallelized: boolean = false;\r\n\r\n\t/**\r\n\t * Selection is currently specified in the UI as a string,\r\n\t * but is split and sent/ingested as an array containing strings and numbers\r\n\t */\r\n\t@Transform((value, obj, type) => {\r\n\t\tswitch(type) {\r\n\t\t\tcase TransformationType.CLASS_TO_PLAIN:\r\n\t\t\t\tif (value) return value.split('.').map((v, i) => ({ name: 'selection_' + i, value: v }));\r\n\t\t\t\tbreak;\r\n\t\t\tcase TransformationType.PLAIN_TO_CLASS:\r\n\t\t\t\tif (Array.isArray(value)) return value.map(v => v.value).join('.');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (value) return value;\r\n\t\t}\r\n\t})\r\n\tselection?: string | Array<Argument>;\r\n\r\n\t/**\r\n\t * Array of errors returned from the server for this Argument\r\n\t */\r\n\t@Exclude()\r\n\terrors?: string[] = [];\r\n\r\n\t/**\r\n\t * Array of errors returned from the server for this Argument and any of its descendants\r\n\t */\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if this Argument or any of its descendants contain errors\r\n\t */\r\n\tget has_errors(): boolean {\r\n\t\treturn (this.all_errors.length > 0) ? true : false;\r\n\t}\r\n\r\n\thasInput() : boolean {\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tsanitize(): void {\r\n\t\t// First trim any string inputs for sanitation and so we can check against ''\r\n\t\tif (typeof (this.value) === 'string') { this.value = this.value.trim(); }\r\n\t}\r\n}\r\n","import { Type, Exclude } from 'class-transformer';\r\n\r\nimport { ConditionalExpression } from './conditionalExpression';\r\nimport { ExecutionElement } from './executionElement';\r\n\r\nexport class Branch extends ExecutionElement {\r\n\tsource_id: string;\r\n\r\n\tdestination_id: string;\r\n\r\n\t@Exclude()\r\n\tstatus: string;\r\n\r\n\t@Exclude()\r\n\tpriority: number;\r\n\t\r\n\t@Exclude()\r\n\t@Type(() => ConditionalExpression)\r\n\tcondition?: ConditionalExpression;\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat((this.condition) ? this.condition.all_errors : []);\r\n\t}\r\n}\r\n","import { Type, Expose, Exclude } from 'class-transformer';\r\n\r\nimport { Argument } from './argument';\r\nimport { ExecutionElement } from './executionElement';\r\nimport { GraphPosition } from './graphPosition';\r\nimport { ActionType } from '../api/actionApi';\r\nimport { WorkflowNode } from './WorkflowNode';\r\n\r\nexport class Condition extends ExecutionElement implements WorkflowNode {\r\n\t\r\n\t@Exclude()\r\n    action_type: ActionType = ActionType.CONDITION;\r\n\r\n\t@Expose({ name: 'label' })\r\n\tname: string = 'Label';\r\n\r\n\tapp_name: string = 'Builtin';\r\n\r\n\tapp_version: string;\r\n\r\n\t@Expose({ name: 'name' })\r\n\taction_name: string = 'Condition';\r\n\r\n\t@Type(() => GraphPosition)\r\n\tposition: GraphPosition;\r\n\r\n\t@Exclude()\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\tconditional: string = '';\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat(...this.arguments.map(argument => argument.all_errors))\r\n\t}\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { ExecutionElement } from './executionElement';\r\nimport { Condition } from './condition';\r\n\r\nexport class ConditionalExpression extends ExecutionElement {\r\n\toperator: string;\r\n\t\r\n\tis_negated: boolean;\r\n\r\n\t@Type(() => Condition)\r\n\tconditions: Condition[] = [];\r\n\r\n\t@Type(() => ConditionalExpression)\r\n\tchild_expressions: ConditionalExpression[] = [];\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors\r\n\t\t\t\t   .concat(...this.conditions.map(condition => condition.all_errors))\r\n\t\t\t\t   .concat(...this.child_expressions.map(expression => expression.all_errors))\r\n\t}\r\n}\r\n","import { UUID } from 'angular2-uuid';\r\nimport { Expose } from 'class-transformer';\r\n\r\nexport class EnvironmentVariable {\r\n\r\n    @Expose({ name: \"id_\" })\r\n    id: string;\r\n    \r\n    name: string;\r\n    \r\n    value: string;\r\n\r\n    description?: string;\r\n    \r\n    constructor() {\r\n        this.id = UUID.UUID();\r\n    }\r\n}\r\n","import { Type, Expose, Exclude, classToClass } from 'class-transformer';\r\nimport { UUID } from 'angular2-uuid';\r\n\r\nexport class ExecutionElement {\r\n\r\n\t@Expose({ name: \"id_\" })\r\n\tid: string;\r\n\r\n\t@Exclude({ toPlainOnly: true })\r\n\terrors: string[] = [];\r\n\r\n\tconstructor() {\r\n\t\t//this.id = UUID.UUID()\r\n\t}\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors;\r\n\t}\r\n\t\r\n\tget has_errors(): boolean {\r\n\t\treturn (this.all_errors.length > 0) ? true : false;\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn classToClass(this, { ignoreDecorators: true });\r\n\t}\r\n}\r\n","import { Expose } from 'class-transformer';\r\n\r\nexport class GraphPosition {\r\n\t@Expose({name: 'id_'})\r\n\tid: string;\r\n\r\n\tx: number;\r\n\r\n\ty: number;\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { Workflow } from './workflow';\r\nimport { ExecutionElement } from './executionElement';\r\n\r\nexport class Playbook extends ExecutionElement {\r\n\tname: string;\r\n\r\n\t@Type(() => Workflow)\r\n\tworkflows: Workflow[] = [];\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat(...this.workflows.map(workflow => workflow.all_errors))\r\n\t}\r\n}\r\n","import { Type, Expose, Exclude } from 'class-transformer';\r\n\r\nimport { Argument } from './argument';\r\nimport { ExecutionElement } from './executionElement';\r\nimport { GraphPosition } from './graphPosition';\r\nimport { ActionType } from '../api/actionApi';\r\nimport { WorkflowNode } from './WorkflowNode';\r\n\r\nexport class Transform extends ExecutionElement implements WorkflowNode {\r\n\t\r\n\t@Exclude()\r\n    action_type: ActionType = ActionType.TRANSFORM;\r\n\r\n\t@Expose({ name: 'label' })\r\n\tname: string = 'Label';\r\n\r\n\tapp_name: string = 'Builtin';\r\n\r\n\tapp_version: string;\r\n\r\n\t@Expose({ name: 'name' })\r\n\taction_name: string = 'Transform';\r\n\r\n\t@Type(() => GraphPosition)\r\n\tposition: GraphPosition;\r\n\r\n\t@Exclude()\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\ttransform: string = '';\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat(...this.arguments.map(argument => argument.all_errors))\r\n\t}\r\n}\r\n","import { Type, Expose, Exclude } from 'class-transformer';\r\nimport { Argument } from './argument';\r\nimport { ExecutionElement } from './executionElement';\r\nimport { GraphPosition } from './graphPosition';\r\nimport { ActionType } from '../api/actionApi';\r\nimport { WorkflowNode } from './WorkflowNode';\r\n\r\nexport class Trigger extends ExecutionElement implements WorkflowNode {\r\n\r\n    @Exclude()\r\n    action_type: ActionType = ActionType.TRIGGER;\r\n\r\n\t@Expose({ name: 'label' })\r\n\tname: string = 'Label';\r\n\r\n\tapp_name: string = 'Builtin';\r\n\r\n    app_version: string;\r\n\r\n\t@Expose({ name: 'name' })\r\n\taction_name: string = 'Trigger';\r\n\r\n\t@Type(() => GraphPosition)\r\n\tposition: GraphPosition;\r\n\r\n\t@Exclude()\r\n\t@Type(() => Argument)\r\n\targuments: Argument[] = [];\r\n\r\n\ttrigger_schema: object = {};\r\n\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat(...this.arguments.map(argument => argument.all_errors))\r\n\t}\r\n}\r\n","import { Type, Expose } from 'class-transformer';\r\nimport { Select2OptionData } from 'ng2-select2/ng2-select2';\r\n\r\nimport { Action } from './action';\r\nimport { Branch } from './branch';\r\nimport { ExecutionElement } from './executionElement';\r\nimport { EnvironmentVariable } from './environmentVariable';\r\nimport { ConditionalExpression } from './conditionalExpression';\r\nimport { Argument } from './argument';\r\nimport { Condition } from './condition';\r\nimport { ActionType } from '../api/actionApi';\r\nimport { Trigger } from './trigger';\r\nimport { WorkflowNode } from './WorkflowNode';\r\nimport { Transform } from './transform';\r\n\r\nexport class Workflow extends ExecutionElement {\r\n\t// _playbook_id: number;\r\n\t/**\r\n\t * Playbook ID this workflow resides under. Only used on create/duplicate.\r\n\t */\r\n\tplaybook_id?: string;\r\n\r\n\t/**\r\n\t * Name of the workflow. Updated by passing in new_name in POST.\r\n\t */\r\n\tname: string;\r\n\r\n\t/**\r\n\t * Name of the workflow. Updated by passing in new_name in POST.\r\n\t */\r\n\tdescription: string;\r\n\r\n\t/**\r\n\t * Name of the workflow. Updated by passing in new_name in POST.\r\n\t */\r\n\ttags: string[] = [];\r\n\r\n\t/**\r\n\t * Array of actions specified in the workflow.\r\n\t */\r\n\t@Type(() => Action)\r\n\tactions?: Action[] = [];\r\n\r\n\t/**\r\n\t * Array of branches between actions.\r\n\t */\r\n\t@Type(() => Branch)\r\n\tbranches?: Branch[] = [];\r\n\r\n\t/**\r\n\t * Array of conditions between actions.\r\n\t */\r\n\t@Type(() => Condition)\r\n\tconditions?: Condition[] = [];\r\n\r\n\t/**\r\n\t * Array of triggers between actions.\r\n\t */\r\n\t@Type(() => Trigger)\r\n\ttriggers?: Trigger[] = [];\r\n\r\n\t/**\r\n\t * Array of triggers between actions.\r\n\t */\r\n\t@Type(() => Transform)\r\n\ttransforms?: Transform[] = [];\r\n\r\n\t/**\r\n\t * Array of environment variables.\r\n\t */\r\n\t@Type(() => EnvironmentVariable)\r\n\t@Expose({name: 'workflow_variables'})\r\n\tenvironment_variables?: EnvironmentVariable[] = [];\r\n\r\n\t/**\r\n\t * ID of the action designated as the start action.\r\n\t */\r\n\tstart?: string;\r\n\t\r\n\t/**\r\n\t * A factor of how often the workflow fails.\r\n\t */\r\n\taccumulated_risk?: number;\r\n\r\n\t/**\r\n\t * Returns true if this workflow doesn't contain any errors\r\n\t */\r\n\tis_valid: boolean;\r\n\r\n\tget nodes(): WorkflowNode[] {\r\n\t\treturn [].concat(this.actions, this.conditions, this.triggers, this.transforms);\r\n\t}\r\n\r\n\t/**\r\n\t * Array of errors returned from the server for this Argument and any of its descendants \r\n\t */\r\n\tget all_errors(): string[] {\r\n\t\treturn this.errors.concat(...this.nodes.map(action => action.all_errors))\r\n\t}\r\n\r\n\tget all_arguments(): Argument[] {\r\n\t\tlet allArgs: Argument[] = [];\r\n\t\tthis.nodes.forEach(action => allArgs = allArgs.concat(action.arguments));\r\n\t\treturn allArgs;\r\n\t}\r\n\r\n\tget referenced_variables() : EnvironmentVariable[] {\r\n\t\tif (!this.environment_variables) return [];\r\n\t\treturn this.environment_variables.filter(variable => this.all_arguments.some(arg => arg.value == variable.id));\r\n\t}\r\n\r\n\taddNode(node: WorkflowNode) {\r\n\t\tif (node instanceof Action )\r\n\t\t\tthis.actions.push(node);\r\n\t\telse if (node instanceof Condition)\r\n\t\t\tthis.conditions.push(node);\r\n\t\telse if (node instanceof Trigger)\r\n\t\t\tthis.triggers.push(node);\r\n\t\telse if (node instanceof Transform)\r\n\t\t\tthis.transforms.push(node);\r\n\t}\r\n\r\n\tremoveNode(nodeId: string) {\r\n\t\tthis.actions = this.actions.filter(a => a.id !== nodeId);\r\n\t\tthis.conditions = this.conditions.filter(a => a.id !== nodeId);\r\n\t\tthis.triggers = this.triggers.filter(a => a.id !== nodeId);\r\n\t\tthis.transforms = this.transforms.filter(a => a.id !== nodeId);\r\n\t\tthis.branches = this.branches.filter(b => !(b.source_id === nodeId || b.destination_id === nodeId));\r\n\t}\r\n\r\n\tdeleteVariable(deletedVariable: EnvironmentVariable) {\r\n\t\tthis.environment_variables = this.environment_variables.filter(variable => variable.id !== deletedVariable.id);\r\n\t\tthis.all_arguments.filter(arg => arg.value == deletedVariable.id).forEach(arg => arg.value = '');\r\n\t}\r\n\r\n\tgetNextActionName(actionName: string) : string {\r\n\t\tlet numActions = this.nodes.filter(a => a.action_name === actionName && a.name).length;\r\n\t\treturn numActions ? `${actionName}_${ ++numActions }` : actionName;\r\n\t}\r\n\r\n\tgetPreviousActions(action: WorkflowNode): WorkflowNode[] {\r\n\t\treturn this.branches\r\n\t\t\t.filter(b => b.destination_id == action.id)\r\n\t\t\t.map(b => this.nodes.find(a => a.id == b.source_id))\r\n\t\t\t.reduce((previous, action) => previous.concat([action], this.getPreviousActions(action)).filter((v, i, a) => a.indexOf(v) == i), []);\r\n\t}\r\n}\r\n","export class Resource {\r\n\tresource_id: number;\r\n\r\n\trole_id: number;\r\n\r\n\tname: string;\r\n\r\n\tapp_name?: string;\r\n\r\n\tpermissions: string[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { Resource } from './resource';\r\n\r\nexport class Role {\r\n\tid: number;\r\n\r\n\tname?: string;\r\n\r\n\tdescription?: string;\r\n\r\n\t@Type(() => Resource)\r\n\tresources?: Resource[] = [];\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { ScheduledTaskTrigger } from './scheduledTaskTrigger';\r\n\r\nexport class ScheduledTask {\r\n\tid: number;\r\n\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\tstatus: string; //['running', 'paused', 'stopped']\r\n\r\n\tworkflows: string[] = [];\r\n\r\n\t@Type(() => ScheduledTaskTrigger)\r\n\ttask_trigger: ScheduledTaskTrigger = new ScheduledTaskTrigger();\r\n}\r\n","import { IScheduledTaskArgs } from './ischeduledTaskArgs';\r\nimport { Moment } from 'moment';\r\n\r\nexport class ScheduledTaskCron implements IScheduledTaskArgs {\r\n\t// One of these is required\r\n\t// If specified as a string, use expression syntax described at\r\n\t// http://apscheduler.readthedocs.io/en/latest/modules/triggers/cron.html\r\n\tyear: number | string; //4-digit year YYYY\r\n\r\n\tmonth: number | string; //1-12 month of year\r\n\r\n\tday: number | string; //1-31 day of month\r\n\r\n\tweek: number | string; //1-53 week of year\r\n\r\n\tday_of_week: number | string; //1-7\r\n\r\n\thour: number | string; //0-23 hour of day\r\n\r\n\tminute: number | string; //0-59 minute of hour\r\n\r\n\tsecond: number | string; //0-59 second of minute\r\n\r\n\t//Start date is required, end date optional\r\n\tstart_date: string | Moment;\r\n\r\n\tend_date: string | Moment;\r\n\r\n\t//Timezone will most likely never be used\r\n\ttimezone: string;\r\n}\r\n","import { IScheduledTaskArgs } from './ischeduledTaskArgs';\r\nimport { Moment } from 'moment';\r\n\r\nexport class ScheduledTaskDate implements IScheduledTaskArgs {\r\n\trun_date: string | Moment;\r\n\r\n\t//Timezone will most likely never be used\r\n\ttimezone: string;\r\n}\r\n","import { IScheduledTaskArgs } from './ischeduledTaskArgs';\r\nimport { Moment } from 'moment';\r\n\r\nexport class ScheduledTaskInterval implements IScheduledTaskArgs {\r\n\t//One of these is required\r\n\tweeks: number;\r\n\r\n\tdays: number;\r\n\r\n\thours: number;\r\n\r\n\tminutes: number;\r\n\r\n\tseconds: number;\r\n\r\n\t//Start date is required, end date optional\r\n\tstart_date: string | Moment;\r\n\r\n\tend_date: string | Moment;\r\n\r\n\t//Timezone will most likely never be used\r\n\ttimezone: string;\r\n}\r\n","import { IScheduledTaskArgs } from './ischeduledTaskArgs';\r\n\r\nexport class ScheduledTaskTrigger {\r\n\ttype: string; //['date', 'interval', 'cron']\r\n\r\n\targs: IScheduledTaskArgs;\r\n}\r\n","import { Type } from 'class-transformer';\r\n\r\nimport { Role } from './role';\r\n\r\nexport class User {\r\n\tid: number;\r\n\r\n\tusername: string;\r\n\r\n\t/**\r\n\t * Used to verify the user's old password on edit. Should never be populated when retrieving data.\r\n\t */\r\n\told_password: string;\r\n\r\n\t/**\r\n\t * Used for setting password on add/edit. Leave null or empty to not change password.\r\n\t * Should never be populated when retrieving data.\r\n\t */\r\n\tpassword: string;\r\n\r\n\t@Type(() => Role)\r\n\troles: Role[] = [];\r\n\r\n\tactive: boolean;\r\n}\r\n","export class UserClaims {\r\n\tusername: string;\r\n\r\n\troles: number[];\r\n}\r\n","import { UUID } from 'angular2-uuid';\r\nimport { Expose, classToClass, Exclude } from 'class-transformer';\r\n\r\nexport class Variable {\r\n\r\n    @Expose({ name: \"id_\" })\r\n    id: string;\r\n    \r\n    name: string;\r\n    \r\n    value: string;\r\n\r\n    description?: string;\r\n\r\n    @Exclude()\r\n\tisHidden: boolean = true;\r\n    \r\n    constructor() {\r\n        this.id = UUID.UUID();\r\n    }\r\n\r\n    clone() {\r\n        return classToClass(this, { ignoreDecorators: true });\r\n    }\r\n}\r\n","import { Global } from './global';\r\nimport { GenericObject } from './genericObject';\r\n\r\nexport class WorkingGlobal {\r\n\tid: number;\r\n\r\n\tname: string;\r\n\r\n\tdescription: string;\r\n\r\n\tapp_name: string;\r\n\r\n\ttype: string;\r\n\r\n\tfields: GenericObject = {};\r\n\r\n\tpublic static toGlobal(workingGlobal: WorkingGlobal): Global {\r\n\t\tconst out = new Global();\r\n\t\tout.id = workingGlobal.id;\r\n\t\tout.name = workingGlobal.name;\r\n\t\tout.description = workingGlobal.description;\r\n\t\tout.app_name = workingGlobal.app_name;\r\n\t\tout.type = workingGlobal.type;\r\n\t\tout.fields = [];\r\n\r\n\t\tObject.keys(workingGlobal.fields).forEach(key => {\r\n\t\t\tout.fields.push({ name: key, value: workingGlobal.fields[key] });\r\n\t\t});\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tpublic static fromGlobal(global: Global) : WorkingGlobal {\r\n\t\tconst out = new WorkingGlobal();\r\n\t\tout.id = global.id;\r\n\t\tout.name = global.name;\r\n\t\tout.description = global.description;\r\n\t\tout.app_name = global.app_name;\r\n\t\tout.type = global.type;\r\n\t\tout.fields = {};\r\n\r\n\t\tglobal.fields.forEach(element => {\r\n\t\t\tout.fields[element.name] = element.value !== undefined ? element.value : null;\r\n\t\t});\r\n\r\n\t\treturn out;\r\n\t}\r\n}\r\n","import { User } from './user';\r\n\r\nexport class WorkingUser {\r\n\tid: number;\r\n\r\n\tusername: string;\r\n\t\r\n\trole_ids: number[] = [];\r\n\r\n\tactive: boolean;\r\n\r\n\tcurrentPassword: string;\r\n\r\n\tnewPassword: string;\r\n\r\n\tconfirmNewPassword: string;\r\n\r\n\tpublic static toUser(workingUser: WorkingUser): User {\r\n\t\tconst returnUser = new User();\r\n\r\n\t\treturnUser.id = workingUser.id;\r\n\t\treturnUser.username = workingUser.username;\r\n\t\treturnUser.roles = workingUser.role_ids.map(id => ({ id }));\r\n\t\treturnUser.active = workingUser.active;\r\n\r\n\t\treturnUser.old_password = workingUser.currentPassword;\r\n\t\treturnUser.password = workingUser.newPassword;\r\n\t\treturn returnUser;\r\n\t}\r\n\r\n\tpublic static fromUser(user: User): WorkingUser {\r\n\t\tconst returnUser = new WorkingUser();\r\n\r\n\t\treturnUser.id = user.id;\r\n\t\treturnUser.username = user.username;\r\n\t\t// returnUser.roles = user.roles;\r\n\r\n\t\tArray.isArray(user.roles) ?\r\n\t\t\treturnUser.role_ids = user.roles.map(r => r.id) :\r\n\t\t\treturnUser.role_ids = [];\r\n\r\n\t\treturnUser.active = user.active;\r\n\r\n\t\treturn returnUser;\r\n\t}\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({ name: 'keys', pure: false })\r\nexport class KeysPipe implements PipeTransform {\r\n\ttransform(value: object, args: string[]): any {\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (const key in value) {\r\n\t\t\tif (value.hasOwnProperty(key)) { keys.push(key); }\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeEmbed' })\r\nexport class SafeEmbedPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}","import { Component, Input, ViewChild } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'import-modal-component',\r\n    templateUrl: './import.modal.html',\r\n})\r\nexport class ImportModalComponent {\r\n    @ViewChild('myForm')\r\n    myForm: NgForm;\r\n    submitted: boolean = false;\r\n    importFile: File;\r\n    \r\n    constructor(public activeModal: NgbActiveModal) { }\r\n\r\n    /**\r\n\t * Sets our playbook to import based on a file input change.\r\n\t * @param event JS Event for the playbook file input\r\n\t */\r\n\tonImportSelectChange(event: Event) {\r\n        this.importFile = (event.srcElement as any).files[0];\r\n        console.log(this.importFile)\r\n\t}\r\n    \r\n    submit() {\r\n        this.submitted = true;\r\n        if (this.importFile) this.activeModal.close(this.importFile);\r\n    }\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Import Workflow</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form #myForm=\\\"ngForm\\\" [class.was-validated]=\\\"submitted\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h6>Select import file:</h6>\\r\\n            <input name=\\\"file\\\" type=\\\"file\\\" class=\\\"form-control-file\\\" (change)=\\\"onImportSelectChange($event)\\\" required>\\r\\n            <div class=\\\"invalid-feedback\\\">\\r\\n                Please select import file.\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Cancel</button>\\r\\n    <button ngbAutofocus type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Import</button>\\r\\n</div>\"","import { Component, Input, ViewChild } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { NgForm, NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'metadata-modal-component',\r\n    templateUrl: './metadata.modal.html',\r\n})\r\nexport class MetadataModalComponent {\r\n    @Input() workflow: Workflow = new Workflow();\r\n    @Input() existingWorkflows: Workflow[] = [];\r\n    @Input() currentTags: string[] = [];\r\n    @Input() existing: boolean = false;\r\n\r\n    @ViewChild('myForm')\r\n    myForm: NgForm;\r\n\r\n    @ViewChild('workflowName') \r\n    workflowNameModel: NgModel;\r\n\r\n    tagSelectOptions = {\r\n        multiple: true,\r\n        tags: true,\r\n        width: '100%',\r\n        placeholder: 'Add Tags...'\r\n    };\r\n\r\n    constructor(public activeModal: NgbActiveModal) { }\r\n\r\n    tagsChanged($event: any): void {\r\n\t\tthis.workflow.tags = $event.value;\r\n    }\r\n    \r\n    submit() {\r\n        const compareWorkflow = (w: Workflow) => \r\n            w.name.toLocaleLowerCase() == this.workflow.name.toLocaleLowerCase() && w.id != this.workflow.id;\r\n\r\n        if (!this.workflow.name) {\r\n            this.workflowNameModel.control.setErrors({'required': true});\r\n        }\r\n        else if (this.existingWorkflows.find(compareWorkflow)) {\r\n            this.workflowNameModel.control.setErrors({'unique': true});\r\n        }\r\n\r\n        if (this.myForm.valid) this.activeModal.close(this.workflow);\r\n    }\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ existing ? 'Edit Workflow' : 'Create Workflow' }}</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form #myForm=\\\"ngForm\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"existing && workflow.id\\\">\\r\\n            <h6>Workflow ID</h6>\\r\\n            <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext px-2\\\"  [value]=\\\"workflow.id\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h6>Enter a Workflow Name</h6>\\r\\n            <input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"workflow.name\\\" class=\\\"form-control\\\" placeholder=\\\"Workflow Name\\\"\\r\\n            ngbAutoFocus #workflowName=\\\"ngModel\\\" [class.is-invalid]=\\\"workflowName.touched && workflowName.invalid\\\">\\r\\n            <div class=\\\"invalid-feedback\\\">\\r\\n                <span *ngIf=\\\"workflowName.hasError('unique')\\\">\\r\\n                    Workflow with name already exists.\\r\\n                </span>\\r\\n                <span *ngIf=\\\"workflowName.hasError('required')\\\">\\r\\n                    Please enter a unique workflow name.\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h6>Enter a Description (Optional)</h6>\\r\\n            <textarea name=\\\"description\\\" rows=\\\"3\\\" [(ngModel)]=\\\"workflow.description\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Description (Optional)\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h6>Add Tags (Optional)</h6>\\r\\n            <select2 [data]=\\\"currentTags\\\" [value]=\\\"workflow.tags\\\" [options]=\\\"tagSelectOptions\\\"\\r\\n                (valueChanged)=\\\"tagsChanged($event)\\\"></select2>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Cancel</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">{{ existing ? 'Save' : 'Continue' }}</button>\\r\\n</div>\"","import { Component, ViewEncapsulation, Input, Output, EventEmitter, OnChanges, ElementRef, ViewChild } from '@angular/core';\r\nimport { Select2OptionData } from 'ng2-select2/ng2-select2';\r\n\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { Action } from '../models/playbook/action';\r\nimport { ParameterApi } from '../models/api/parameterApi';\r\nimport { ParameterSchema } from '../models/api/parameterSchema';\r\nimport { Argument, Variant } from '../models/playbook/argument';\r\nimport { GenericObject } from '../models/genericObject';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { Global } from '../models/global';\r\nimport { WorkflowNode } from '../models/playbook/WorkflowNode';\r\nimport { JsonEditorComponent } from 'ang-jsoneditor';\r\n\r\nconst AVAILABLE_TYPES = ['string', 'number', 'boolean'];\r\n\r\n@Component({\r\n\tselector: 'playbook-argument-component',\r\n\ttemplateUrl: './playbook.argument.html',\r\n\tstyleUrls: [],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [],\r\n})\r\nexport class PlaybookArgumentComponent implements OnChanges {\r\n\t@Input() id: number;\r\n\t@Input() argument: Argument;\r\n\t@Input() parameterApi: ParameterApi;\r\n\t@Input() selectedAction: Action;\r\n\t@Input() loadedWorkflow: Workflow;\r\n\t@Input() users: User[];\r\n\t@Input() roles: Role[];\r\n\t@Input() globals: Global[];\r\n\t@Input() branchCounters: any[];\r\n\r\n\t@ViewChild('jsonEditor') jsonEditor: JsonEditorComponent;\r\n\r\n\t@Output() createVariable = new EventEmitter<Argument>();\r\n\r\n\tvalueType: string = Variant.STATIC_VALUE;\r\n\tvalueTypes: any[];\r\n\r\n\tpropertyName: string = '';\r\n\tselectedType: string;\r\n\tavailableTypes: string[] = AVAILABLE_TYPES;\r\n\tarrayTypes: string[] = [];\r\n\tobjectTypes: GenericObject = {};\r\n\r\n\t// Simple parameter schema reference so I'm not constantly showing parameterApi.schema\r\n\tparameterSchema: ParameterSchema;\r\n\tselectData: Select2OptionData[];\r\n\tselectConfig: Select2Options;\r\n\tselectInitialValue: string[];\r\n\r\n\tinitialValue;\r\n\r\n\teditorOptionsData: any = {\r\n\t\tmode: 'code',\r\n\t\tmodes: ['code', 'tree'],\r\n\t\thistory: false,\r\n\t\tsearch: false,\r\n\t\t// mainMenuBar: false,\r\n\t\tnavigationBar: false,\r\n\t\tstatusBar: false,\r\n\t\tenableSort: false,\r\n\t\tenableTransform: false,\r\n\t}\r\n\t\r\n\r\n\t// tslint:disable-next-line:no-empty\r\n\tconstructor() { }\r\n\r\n\t/**\r\n\t * On init, we want to ensure our data is correctly formatted.\r\n\t * If reference is null, set it to empty string for editing.\r\n\t * If our value is of type array or object and is null, initalize them as such.\r\n\t * Additionally, if we're array or object types, track the types of the values that currently exist.\r\n\t * Initialize user and role selects if necessary (if schema type user or role is used).\r\n\t */\r\n\tngOnChanges(): void {\r\n\t\tthis.initParameterSchema();\r\n\t\tthis.initTypeSelector();\r\n\t\tthis.initUserSelect();\r\n\t\tthis.initRoleSelect();\r\n\t}\r\n\r\n\tinitParameterSchema(): void {\r\n\t\tthis.parameterSchema = this.parameterApi.schema;\r\n\t\tif (this.argument.value == null) {\r\n\t\t\tif (this.parameterSchema.type === 'array') { \r\n\t\t\t\tthis.argument.value = [];\r\n\t\t\t} else if (this.parameterSchema.type === 'object') {\r\n\t\t\t\tthis.argument.value = {};\r\n\t\t\t} else if (this.parameterSchema.type === 'boolean') {\r\n\t\t\t\tthis.argument.value = false;\r\n\t\t\t}\r\n\t\t} else if (this.argument.value && this.parameterSchema.type === 'array') {\r\n\t\t\tfor (const item of (this.argument.value as any[])) {\r\n\t\t\t\tthis.arrayTypes.push(typeof(item));\r\n\t\t\t}\r\n\t\t} else if (this.argument.value && this.parameterSchema.type === 'object') {\r\n\t\t\tfor (const key in (this.argument.value as GenericObject)) {\r\n\t\t\t\tif ((this.argument.value as GenericObject).hasOwnProperty(key)) {\r\n\t\t\t\t\tthis.objectTypes[key] = typeof((this.argument.value as GenericObject)[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Store initial value for use in JSONeditor widget\r\n\t\tthis.initialValue = this.argument.value;\r\n\t\tif (this.parameterSchema) this.editorOptionsData.schema = this.parameterSchema;\r\n\t}\r\n\r\n\tinitTypeSelector(): void {\r\n\t\tthis.valueTypes = [\r\n\t\t\t{ id: Variant.STATIC_VALUE, name: 'Static Value'},\r\n\t\t\t{ id: Variant.ACTION_RESULT, name: 'Action Output'},\r\n\t\t\t{ id: Variant.WORKFLOW_VARIABLE, name: 'Workflow Variable'},\r\n\t\t\t{ id: Variant.GLOBAL, name: 'Global'}\r\n\t\t];\r\n\r\n\t\tif (this.argument.variant) this.valueType = this.argument.variant;\r\n\t\tthis.selectedType = this.availableTypes[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the user select2 box for arguments that have { type: 'user' } ParameterSchemas.\r\n\t */\r\n\tinitUserSelect(): void {\r\n\t\tif (!this.isUserSelect) { return; }\r\n\r\n\t\tthis.selectData = this.users.map((user) => {\r\n\t\t\treturn { id: user.id.toString(), text: user.username };\r\n\t\t});\r\n\r\n\t\tthis.selectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select user',\r\n\t\t};\r\n\r\n\t\tthis.selectInitialValue = JSON.parse(JSON.stringify(this.argument.value));\r\n\r\n\t\tif (this.parameterSchema.type === 'array') {\r\n\t\t\tthis.selectConfig.placeholder += '(s)';\r\n\t\t\tthis.selectConfig.multiple = true;\r\n\t\t\tthis.selectConfig.allowClear = true;\r\n\t\t\tthis.selectConfig.closeOnSelect = false;\r\n\t\t\tif (Array.isArray(this.argument.value)) \r\n\t\t\t\tthis.selectInitialValue = this.argument.value.map((val: number) => val.toString());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the role select2 box for arguments that have { type: 'role' } ParameterSchemas.\r\n\t */\r\n\tinitRoleSelect(): void {\r\n\t\tif (!this.isRoleSelect) { return; }\r\n\r\n\t\tthis.selectData = this.roles.map((role) => {\r\n\t\t\treturn { id: role.id.toString(), text: role.name };\r\n\t\t});\r\n\r\n\t\tthis.selectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select role',\r\n\t\t};\r\n\r\n\t\tthis.selectInitialValue = JSON.parse(JSON.stringify(this.argument.value));\r\n\r\n\t\tif (this.parameterSchema.type === 'array') {\r\n\t\t\tthis.selectConfig.placeholder += '(s)';\r\n\t\t\tthis.selectConfig.multiple = true;\r\n\t\t\tthis.selectConfig.allowClear = true;\r\n\t\t\tthis.selectConfig.closeOnSelect = false;\r\n\t\t\tif (Array.isArray(this.argument.value)) \r\n\t\t\t\tthis.selectInitialValue = this.argument.value.map((val: number) => val.toString());\r\n\t\t}\r\n\t}\r\n\r\n\tupdateValue($event: any): void {\r\n\t\tthis.argument.value = $event;\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired on the select2 change for users/roles. Updates the value based on the event value.\r\n\t * @param $event JS Event Fired\r\n\t */\r\n\tselectChange($event: any): void {\r\n\t\t// Convert strings to numbers here\r\n\t\tif (this.parameterSchema.type === 'array') {\r\n\t\t\tconst array = $event.value.map((id: string) => +id);\r\n\t\t\tthis.argument.value = array;\r\n\t\t} else {\r\n\t\t\tthis.argument.value = +$event.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired on the select2 change for users/roles. Updates the value based on the event value.\r\n\t * @param $event JS Event Fired\r\n\t */\r\n\tclearValue(): void {\r\n\t\tthis.argument.value = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item to an array if the argument parameter is array.\r\n\t */\r\n\taddItem(): void {\r\n\t\tif (!this.argument.value) this.argument.value = [];\r\n\r\n\t\tswitch (this.selectedType) {\r\n\t\t\tcase 'string':\r\n\t\t\t\t(this.argument.value as any[]).push('');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\t(this.argument.value as any[]).push(null);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'boolean':\r\n\t\t\t\t(this.argument.value as any[]).push(false);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.arrayTypes.push(this.selectedType);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in an array \"up\" (by swapping it with the ID before).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveUp(index: number): void {\r\n\t\tconst idAbove = index - 1;\r\n\t\tconst toBeSwapped = (this.argument.value as any[])[idAbove];\r\n\t\tconst arrayTypeToBeSwapped = this.arrayTypes[idAbove];\r\n\r\n\t\t(this.argument.value as any[])[idAbove] = (this.argument.value as any[])[index];\r\n\t\t(this.argument.value as any[])[index] = toBeSwapped;\r\n\r\n\t\tthis.arrayTypes[idAbove] = this.arrayTypes[index];\r\n\t\tthis.arrayTypes[index] = arrayTypeToBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in an array \"down\" (by swapping it with the ID after).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveDown(index: number): void {\r\n\t\tconst idBelow = index + 1;\r\n\t\tconst toBeSwapped = (this.argument.value as any[])[idBelow];\r\n\t\tconst arrayTypeToBeSwapped = this.arrayTypes[idBelow];\r\n\r\n\t\t(this.argument.value as any[])[idBelow] = (this.argument.value as any[])[index];\r\n\t\t(this.argument.value as any[])[index] = toBeSwapped;\r\n\r\n\t\tthis.arrayTypes[idBelow] = this.arrayTypes[index];\r\n\t\tthis.arrayTypes[index] = arrayTypeToBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value at a given index of the argument value (if the value is an array).\r\n\t * @param index Index to remove\r\n\t */\r\n\tremoveItem(index: number): void {\r\n\t\t(this.argument.value as any[]).splice(index, 1);\r\n\t\tthis.arrayTypes.splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new property to an our argument's value object of a given name and type.\r\n\t */\r\n\taddProperty(): void {\r\n\t\tif ((this.argument.value as object).hasOwnProperty(this.propertyName)) { return; }\r\n\t\tthis.propertyName = this.propertyName.trim();\r\n\t\tswitch (this.selectedType) {\r\n\t\t\tcase 'string':\r\n\t\t\t\t(this.argument.value as any)[this.propertyName] = '';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\t(this.argument.value as any)[this.propertyName] = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'boolean':\r\n\t\t\t\t(this.argument.value as any)[this.propertyName] = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tthis.objectTypes[this.propertyName] = this.selectedType;\r\n\t\tthis.propertyName = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a property from our argument's value object by key.\r\n\t * @param key Key to remove\r\n\t */\r\n\tremoveProperty(key: string): void {\r\n\t\tdelete (this.argument.value as any)[key];\r\n\t\tdelete this.objectTypes[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Track by function for arrays.\r\n\t * Needed to track by index for primitives (since normally it tracks by reference for objects/arrays).\r\n\t * @param index Index to track by\r\n\t * @param item Item in array by index\r\n\t */\r\n\ttrackArraysBy(index: any, item: any) {\r\n\t\treturn index;\r\n\t}\r\n\r\n\t// TODO: maybe somehow recursively find actions that may occur before. Right now it just returns all of them.\r\n\tgetPreviousActions(): WorkflowNode[] {\r\n\t\treturn this.loadedWorkflow.getPreviousActions(this.selectedAction);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the minimum value to check against for JSON Schema minimum / exclusiveMinimum parameters\r\n\t * @param schema JSON Schema object\r\n\t */\r\n\tgetMin(schema: ParameterSchema): number {\r\n\t\tif (schema.minimum === undefined) { return null; }\r\n\t\tif (schema.exclusiveMinimum) { return schema.minimum + 1; }\r\n\t\treturn schema.minimum;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum value to check against for JSON Schema maximum / exclusiveMaximum parameters\r\n\t * @param schema JSON Schema Object\r\n\t */\r\n\tgetMax(schema: ParameterSchema): number {\r\n\t\tif (schema.maximum === undefined) { return null; }\r\n\t\tif (schema.exclusiveMaximum) { return schema.maximum - 1; }\r\n\t\treturn schema.maximum;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this array is an array of primitives only.\r\n\t * Returns false if the schema is not an array or if it contains user/role types.\r\n\t * @param schema JSON Schema Object to check against\r\n\t */\r\n\tisNormalArray(schema: ParameterSchema): boolean {\r\n\t\tif (schema.type !== 'array') { return false; }\r\n\r\n\t\tif (Array.isArray(schema.items)) {\r\n\t\t\t(schema.items as GenericObject[]).forEach(i => {\r\n\t\t\t\tif (i.type === 'user' || i.type === 'role') { return false; }\r\n\t\t\t});\r\n\t\t} else if (schema.items && (schema.items.type === 'user' || schema.items.type === 'role')) { return false; }\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this schema represents a user select (single or multiple via array type).\r\n\t * @param schema JSON Schema Object to check against\r\n\t */\r\n\tget isUserSelect(): boolean {\r\n\t\treturn this.parameterSchema && \r\n\t\t\t   (this.parameterSchema.type === 'user' || \r\n\t\t\t   (this.parameterSchema.type === 'array' && this.parameterSchema.items && \r\n\t\t\t   !Array.isArray(this.parameterSchema.items) && this.parameterSchema.items.type === 'user'));\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this schema represents a role select (single or multiple via array type).\r\n\t * @param schema JSON Schema Object to check against\r\n\t */\r\n\tget isRoleSelect(): boolean {\r\n\t\treturn this.parameterSchema &&\r\n\t\t\t   (this.parameterSchema.type === 'role' || \r\n\t\t\t   (this.parameterSchema.type === 'array' && this.parameterSchema.items && \r\n\t\t\t   !Array.isArray(this.parameterSchema.items) && this.parameterSchema.items.type === 'role'));\r\n\t}\r\n\r\n\tget isReference(): boolean {\r\n\t\treturn [Variant.STATIC_VALUE, Variant.GLOBAL, Variant.WORKFLOW_VARIABLE].indexOf(this.argument.variant) == -1;\r\n\t}\r\n\r\n\tget isStatic(): boolean {\r\n\t\treturn this.argument.variant == Variant.STATIC_VALUE;\r\n\t}\r\n\r\n\tget isActionSelect(): boolean {\r\n\t\treturn this.argument.variant == Variant.ACTION_RESULT;\r\n\t}\r\n\r\n\tget isVariableSelect(): boolean {\r\n\t\treturn this.argument.variant == Variant.WORKFLOW_VARIABLE;\r\n\t}\r\n\r\n\tget isStringSelect(): boolean {\r\n\t\treturn this.isStatic && this.parameterSchema && this.parameterSchema.type === 'string' && !this.parameterSchema.enum;\r\n\t}\r\n\r\n\tget isNumberSelect(): boolean {\r\n\t\treturn this.isStatic && this.parameterSchema && (this.parameterSchema.type === 'number' || this.parameterSchema.type === 'integer')\r\n\t}\r\n\r\n\tget isEnumSelect(): boolean {\r\n\t\treturn this.isStatic && this.parameterSchema && this.parameterSchema.enum;\r\n\t}\r\n\r\n\tget isBooleanSelect(): boolean {\r\n\t\treturn this.isStatic && this.parameterSchema && this.parameterSchema.type === 'boolean';\r\n\t}\r\n\r\n\tget isGlobalSelect() : boolean {\r\n\t\treturn this.argument.variant == Variant.GLOBAL;\r\n\t}\r\n\r\n\taddVariable() {\r\n\t\tthis.createVariable.emit(this.argument)\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"form-group argument {{id % 2 ? 'odd' : 'even'}}\\\">\\r\\n\\t<!-- Label for argument with optional required icon -->\\r\\n\\t<label for=\\\"{{argument.name}}\\\">\\r\\n\\t\\t<b class=\\\"text-capitalize\\\">{{argument.name}}</b> ({{parameterSchema.type}})\\r\\n\\t\\t<i *ngIf=\\\"parameterApi.required\\\" class=\\\"fa fa-asterisk required m-0\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t<small class=\\\"form-text text-muted\\\">{{ parameterApi.description }}</small>\\r\\n\\t</label>\\r\\n\\r\\n\\t<!-- Columns for allowing users to specify outputs of other action as arguments for this one -->\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<select name=\\\"playbookSelect\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.variant\\\" (change)=\\\"clearValue()\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of valueTypes\\\" [ngValue]=\\\"i.id\\\" [label]=\\\"i.name\\\">{{i.name}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-8 d-flex align-items-center\\\">\\r\\n\\t\\t\\t<!-- Normal string text entries -->\\r\\n\\t\\t\\t<input *ngIf=\\\"isStringSelect\\\" class=\\\"form-control\\\" name=\\\"{{argument.name}}\\\" [(ngModel)]=\\\"argument.value\\\"\\r\\n\\t\\t\\t\\ttype=\\\"text\\\" [attr.minlength]=\\\"parameterSchema.minLength > 0 ? parameterSchema.minLength : null\\\" [attr.maxlength]=\\\"parameterSchema.maxLength > 0 ? parameterSchema.maxLength : null\\\"\\r\\n\\t\\t\\t\\t[attr.pattern]=\\\"parameterSchema.pattern ? parameterSchema.pattern : null\\\" [attr.required]=\\\"parameterApi.required\\\" [attr.placeholder]=\\\"parameterApi.placeholder\\\">\\r\\n\\r\\n\\t\\t\\t<!-- Enum types, make a select box -->\\r\\n\\t\\t\\t<select *ngIf=\\\"isEnumSelect\\\" class=\\\"form-control\\\" name=\\\"{{argument.name}}\\\" [(ngModel)]=\\\"argument.value\\\"  [attr.required]=\\\"parameterApi.required\\\">\\r\\n\\t\\t\\t\\t<option *ngIf=\\\"!parameterApi.required\\\" value=\\\"\\\"></option>\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of parameterSchema.enum\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t<!-- For numbers enter number info -->\\r\\n\\t\\t\\t<input *ngIf=\\\"isNumberSelect\\\" class=\\\"form-control\\\" name=\\\"{{argument.name}}\\\" [(ngModel)]=\\\"argument.value\\\" \\r\\n\\t\\t\\t type=\\\"number\\\" [attr.min]=\\\"getMin(parameterSchema)\\\" [attr.max]=\\\"getMax(parameterSchema)\\\"\\r\\n\\t\\t\\t\\t[attr.step]=\\\"parameterSchema.multipleOf > 0 ? parameterSchema.multipleOf : null\\\" [attr.required]=\\\"parameterApi.required\\\"\\r\\n\\t\\t\\t\\t[attr.placeholder]=\\\"parameterApi.placeholder\\\">\\r\\n\\r\\n\\t\\t\\t<!-- Checkbox for boolean values -->\\r\\n\\t\\t\\t<div *ngIf=\\\"isBooleanSelect\\\">  \\r\\n\\t\\t\\t\\t<span class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"switch\\\" [name]=\\\"argument.name\\\" [(ngModel)]=\\\"argument.value\\\" [id]=\\\"argument.id\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"m-0\\\" [for]=\\\"argument.id\\\">{{ argument.value ? 'True' : 'False'}}</label>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <input *ngIf=\\\"isBooleanSelect\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" name=\\\"{{argument.name}}\\\" [(ngModel)]=\\\"argument.value\\\"> -->\\r\\n\\r\\n\\t\\t\\t<!-- User select -->\\r\\n\\t\\t\\t<select2 *ngIf=\\\"isStatic && isUserSelect\\\" [data]=\\\"selectData\\\" [value]=\\\"selectInitialValue\\\" [options]=\\\"selectConfig\\\"\\r\\n\\t\\t\\t\\t(valueChanged)=\\\"selectChange($event)\\\"></select2>\\r\\n\\r\\n\\t\\t\\t<!-- Role select -->\\r\\n\\t\\t\\t<select2 *ngIf=\\\"isStatic && isRoleSelect\\\" [data]=\\\"selectData\\\" [value]=\\\"selectInitialValue\\\" [options]=\\\"selectConfig\\\"\\r\\n\\t\\t\\t\\t(valueChanged)=\\\"selectChange($event)\\\"></select2>\\r\\n\\r\\n\\t\\t\\t<!-- Global select -->\\r\\n\\t\\t\\t<select *ngIf=\\\"isGlobalSelect\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value\\\">\\r\\n\\t\\t\\t\\t<option [ngValue]=\\\"''\\\"></option>\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of globals\\\" [ngValue]=\\\"i.id\\\" [label]=\\\"i.name\\\">{{i.name}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t<!-- Branch Counter select -->\\r\\n\\t\\t\\t<!-- <select *ngIf=\\\"isBranchCounterSelect\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.reference\\\">\\r\\n\\t\\t\\t\\t<option [ngValue]=\\\"0\\\"></option>\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of branchCounters\\\" [ngValue]=\\\"i.id\\\" [label]=\\\"i.text\\\">{{i.text}}</option>\\r\\n\\t\\t\\t</select> -->\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<!-- Action select -->\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isActionSelect\\\">\\r\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value\\\">\\r\\n                \\t<option [ngValue]=\\\"''\\\"></option>\\r\\n                \\t<option *ngFor=\\\"let i of getPreviousActions()\\\" [ngValue]=\\\"i.id\\\" [label]=\\\"i.name\\\">{{i.name}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t<!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.selection\\\" name=\\\"selection\\\" placeholder=\\\"(Optional) Dot Notation selection into objects\\\"> -->\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t<!-- Action select -->\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"isVariableSelect\\\">\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value\\\" [disabled]=\\\"!loadedWorkflow?.environment_variables?.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option [ngValue]=\\\"''\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!loadedWorkflow?.environment_variables?.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tNone Created\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of loadedWorkflow.environment_variables\\\" [ngValue]=\\\"i.id\\\" [label]=\\\"i.name\\\">{{ i.name }}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isStatic && (isNormalArray(parameterSchema) || parameterSchema.type === 'object')\\\" class=\\\"mb-3\\\">\\r\\n\\t<json-editor #jsonEditor [options]=\\\"editorOptionsData\\\" [data]=\\\"initialValue\\\" (change)=\\\"updateValue($event)\\\"></json-editor>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"false && isStatic && isNormalArray(parameterSchema)\\\" class=\\\"indent\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedType\\\" name=\\\"selectedType\\\">\\r\\n\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of availableTypes\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addItem()\\\" [disabled]=\\\"!selectedType\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>Add Items\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"form-group argument arrayItem {{itemId % 2 ? 'odd' : 'even'}}\\\" *ngFor=\\\"let item of argument.value; let itemId = index; trackBy:trackArraysBy\\\">\\r\\n\\t\\t<div class=\\\"row propertyHeader\\\">\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<label>Item {{itemId+1}}:</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"itemId > 0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveUp(itemId)\\\" title=\\\"Move Up\\\"><i class=\\\"fa fa-arrow-up\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"itemId < argument.value.length - 1\\\" class=\\\"btn ml-1 btn-primary\\\" (click)=\\\"moveDown(itemId)\\\" title=\\\"Move Down\\\"><i class=\\\"fa fa-arrow-down\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn ml-1 btn-danger\\\" (click)=\\\"removeItem(itemId)\\\" title=\\\"Remove Item\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<input *ngIf=\\\"arrayTypes[itemId] === 'string'\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[itemId]\\\">\\r\\n\\t\\t<input *ngIf=\\\"arrayTypes[itemId] === 'number'\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[itemId]\\\">\\r\\n\\t\\t<input *ngIf=\\\"arrayTypes[itemId] === 'boolean'\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[itemId]\\\">\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"false && isStatic && parameterSchema.type === 'object'\\\" class=\\\"indent\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"propertyName\\\" placeholder=\\\"Enter a parameter name\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedType\\\" name=\\\"selectedType\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of availableTypes\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProperty()\\\" [disabled]=\\\"!propertyName.trim() || !selectedType\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>Add Property\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"form-group argument {{itemId % 2 ? 'odd' : 'even'}}\\\" *ngFor=\\\"let key of argument.value | keys; let itemId = index\\\">\\r\\n\\t\\t<div class=\\\"row propertyHeader\\\">\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<label>Property \\\"{{key}}\\\":</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"removeProperty(key)\\\" title=\\\"Remove Item\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<input *ngIf=\\\"objectTypes[key] === 'string'\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[key]\\\">\\r\\n\\t\\t<input *ngIf=\\\"objectTypes[key] === 'number'\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[key]\\\">\\r\\n\\t\\t<input *ngIf=\\\"objectTypes[key] === 'boolean'\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"argument.value[key]\\\">\\r\\n\\t</div>\\r\\n</div>\"","import { Component, ViewEncapsulation, OnInit, OnDestroy} from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport * as Fuse from 'fuse.js';\r\nimport { saveAs } from 'file-saver';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormControl } from '@angular/forms';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { PlaybookService } from './playbook.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { GlobalsService } from '../globals/globals.service';\r\nimport { SettingsService } from '../settings/settings.service';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { WorkflowStatuses } from '../models/execution/workflowStatus';\r\nimport { MetadataModalComponent } from './metadata.modal.component';\r\nimport { ImportModalComponent } from './import.modal.component';\r\nimport { WorkflowStatusEvent } from '../models/execution/workflowStatusEvent';\r\n\r\n@Component({\r\n\tselector: 'playbook-component',\r\n\ttemplateUrl: './playbook.html',\r\n\tstyleUrls: [\r\n\t\t'./playbook.scss',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [AuthService, GlobalsService, SettingsService],\r\n})\r\nexport class PlaybookComponent implements OnInit, OnDestroy {\r\n\tworkflowsLoaded: boolean = false;\r\n\tworkflows: Workflow[] = [];\r\n\teventSource: any;\r\n\tfilterQuery: FormControl = new FormControl();\r\n\tfilteredWorkflows: Workflow[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate playbookService: PlaybookService, private authService: AuthService,\r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService, \r\n\t\tprivate modalService: NgbModal, private router: Router\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component initialization, we grab arrays of globals, app apis, and playbooks/workflows (id, name pairs).\r\n\t * We also initialize an EventSoruce for Action Statuses for the execution results table.\r\n\t * Also initialize cytoscape event bindings.\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.getPlaybooksWithWorkflows();\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(() => this.filterWorkflows());\r\n\t}\r\n\r\n\t/**\r\n\t * Closes our SSEs on component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tif (this.eventSource && this.eventSource.close) { this.eventSource.close(); }\r\n\t}\r\n\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/// Playbook CRUD etc functions\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/**\r\n\t * Sets up the EventStream for receiving stream actions from the server. Binds various events to the event handler.\r\n\t * Will currently return ALL stream actions and not just the ones manually executed.\r\n\t */\r\n\tgetWorkflowStatusSSE(executionId: string) {\r\n\t\tif (this.eventSource) this.eventSource.close();\r\n\r\n\t\treturn this.authService.getEventSource(`/api/streams/workflowqueue/workflow_status`)\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.eventSource = eventSource;\r\n\t\t\t\tthis.eventSource.onerror = (e: any) => this.eventSource.close();\r\n\t\t\t\tObject.values(WorkflowStatuses)\r\n\t\t\t\t\t  .forEach(status => this.eventSource.addEventListener(status, (e: any) => this.workflowStatusEventHandler(e, executionId)));\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handles an EventSource message for Workflow Status.\r\n\t * Updates existing workflow statuses for status updates or adds new ones to the list for display.\r\n\t * @param message EventSource message for workflow status\r\n\t */\r\n\tworkflowStatusEventHandler(message: any, executionId: string): void {\r\n\t\tconst workflowStatusEvent = plainToClass(WorkflowStatusEvent, (JSON.parse(message.data) as object));\r\n\r\n\t\tif (executionId != workflowStatusEvent.execution_id) return;\r\n\r\n\t\tswitch (workflowStatusEvent.status) {\r\n\t\t\tcase WorkflowStatuses.COMPLETED:\r\n\t\t\t\tthis.eventSource.close();\r\n\t\t\t\tthis.toastrService.success(`<b>${workflowStatusEvent.name}</b> completed`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase WorkflowStatuses.ABORTED:\r\n\t\t\t\tthis.eventSource.close();\r\n\t\t\t\tthis.toastrService.warning(`<b>${workflowStatusEvent.name}</b> aborted`)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the loaded workflow as it exists on the server. Will not currently execute the workflow as it stands.\r\n\t */\r\n\tasync executeWorkflow(workflow: Workflow): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst executionId = UUID.UUID();\r\n\t\t\tawait this.getWorkflowStatusSSE(executionId);\r\n\t\t\tawait this.playbookService.addWorkflowToQueue(workflow.id, executionId);\r\n\t\t\tthis.toastrService.success(`Starting <b>${workflow.name}</b>`)\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tthis.toastrService.error(`Error starting <b>${workflow.name}</b>: ${e.message}`)\r\n\t\t}\r\n\t}\r\n\r\n\trouteToWorkflow(workflow: Workflow): void {\r\n\t\tthis.router.navigateByUrl(`/workflows/${ workflow.id }`);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of all the loaded playbooks along with their workflows.\r\n\t */\r\n\tgetPlaybooksWithWorkflows(): void {\r\n\t\tthis.playbookService.getWorkflows()\r\n\t\t\t.then(workflows => {\r\n\t\t\t\tthis.workflowsLoaded = true;\r\n\t\t\t\tthis.workflows = workflows;\r\n\t\t\t\tthis.filterWorkflows();\r\n\r\n\t\t\t\tthis.playbookService.workflowsChange.subscribe(workflows => {\r\n\t\t\t\t\tthis.workflows = workflows\r\n\t\t\t\t\tthis.filterWorkflows();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\t/**\r\n\t * Downloads a playbook as a JSON representation.\r\n\t * @param event JS Event fired from button\r\n\t * @param playbook Playbook to export (id, name pair)\r\n\t */\r\n\tasync exportWorkflow(workflow: Workflow) {\r\n\t\ttry {\r\n\t\t\tconst blob = await this.playbookService.exportWorkflow(workflow.id);\r\n\t\t\tsaveAs(blob, `${workflow.name}.json`);\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tthis.toastrService.error(`Error exporting workflow \"${workflow.name}\": ${e.message}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal to add a new workflow to a given playbook or under a new playbook.\r\n\t */\r\n\tcreateWorkflow(): void {\r\n\t\tconst modalRef = this.modalService.open(MetadataModalComponent);\r\n\t\tmodalRef.componentInstance.workflow = new Workflow();\r\n\t\tmodalRef.componentInstance.currentTags = this.currentTags;\r\n\t\tmodalRef.componentInstance.existingWorkflows = this.workflows;\r\n\t\tmodalRef.result.then(workflow => {\r\n\t\t\tthis.playbookService.workflowToCreate = workflow;\r\n\t\t\tthis.router.navigateByUrl(`/workflows/new`);\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal to add a new workflow to a given playbook or under a new playbook.\r\n\t */\r\n\tasync editDescription(workflow: Workflow): Promise<void> {\r\n\t\tworkflow = await this.playbookService.loadWorkflow(workflow.id);\r\n\t\tconst modalRef = this.modalService.open(MetadataModalComponent);\r\n\t\tmodalRef.componentInstance.existing = true;\r\n\t\tmodalRef.componentInstance.workflow = workflow;\r\n\t\tmodalRef.componentInstance.currentTags = this.currentTags;\r\n\t\tmodalRef.componentInstance.existingWorkflows = this.workflows;\r\n\t\tmodalRef.result.then(w => {\r\n\t\t\tthis.playbookService.saveWorkflow(w)\r\n\t\t\t\t.then(w => this.toastrService.success(`Updated <b>${workflow.name}</b>`))\r\n\t\t\t\t.catch(e => this.toastrService.error(`Error loading workflow \"${workflow.name}\": ${e.message}`));\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\tasync duplicateWorkflow(workflow: Workflow) {\r\n\t\tlet name = await this.utils.prompt('Enter a name for the duplicate workflow');\r\n\r\n\t\ttry {\r\n\t\t\tconst duplicateWorkflow: Workflow = await this.playbookService.duplicateWorkflow(workflow.id, name);\r\n\t\t\tthis.toastrService.success(`Duplicated <b>${ duplicateWorkflow.name }</b>`);\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tthis.toastrService.error(`Error duplicating workflow \"${ name }\": ${e.message}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal to delete a given workflow and performs the delete action on submit.\r\n\t * @param playbook Playbook the workflow resides under\r\n\t * @param workflow Workflow to delete\r\n\t */\r\n\tasync deleteWorkflow(workflow: Workflow) {\r\n\t\tawait this.utils.confirm(`Are you sure you want to delete <b>${workflow.name}</b>?`);\r\n\r\n\t\ttry {\r\n\t\t\tawait this.playbookService.deleteWorkflow(workflow.id);\r\n\t\t\tthis.toastrService.success(`Deleted <b>${workflow.name}</b>`);\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tthis.toastrService.error(`Error deleting \"${workflow.name}\": ${e.message}`)\r\n\t\t}\r\n\t}\r\n\r\n\timportWorkflow() {\r\n\t\tconst modalRef = this.modalService.open(ImportModalComponent);\r\n\t\tmodalRef.result.then(importFile => {\r\n\t\t\tthis.playbookService.importWorkflow(importFile).then(workflow => {\r\n\t\t\t\tthis.toastrService.success(`Imported <b>${workflow.name}</b>`);\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tthis.toastrService.error(`Error importing workflow \"${importFile.name}\": ${e.message}`)\r\n\t\t\t})\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\tfilterWorkflows() {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\t\tconst fuse = new Fuse(this.workflows, { tokenize: true,  matchAllTokens: true, threshold: 0.5, keys: ['name', 'description', 'tags']})\r\n\t\tthis.filteredWorkflows = (searchFilter) ? fuse.search(searchFilter.trim()) : this.workflows;\r\n\t}\r\n\r\n\tget currentTags(): string[] {\r\n\t\tlet tags = [];\r\n\t\tthis.workflows.forEach(w => tags = tags.concat(w.tags));\r\n\t\treturn tags.filter((v, i, a) => a.indexOf(v) == i);\r\n\t}\r\n}\r\n","import { Component, ViewEncapsulation, Input, Output, OnInit, EventEmitter } from '@angular/core';\r\n\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { ConditionalExpression } from '../models/playbook/conditionalExpression';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { Argument } from '../models/playbook/argument';\r\n\r\n@Component({\r\n\tselector: 'playbook-conditional-expression-component',\r\n\ttemplateUrl: './playbook.conditional.expression.html',\r\n\tstyleUrls: [],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [],\r\n})\r\nexport class PlaybookConditionalExpressionComponent implements OnInit {\r\n\t@Input() selectedAppName: string;\r\n\t@Input() conditionalExpression: ConditionalExpression;\r\n\t@Input() appApis: AppApi[];\r\n\t@Input() loadedWorkflow: Workflow;\r\n\r\n\t@Output() createVariable = new EventEmitter<Argument>();\r\n\r\n\tavailableOperators: string[];\r\n\r\n\t// tslint:disable-next-line:no-empty\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.availableOperators = [ 'and', 'or', 'xor' ];\r\n\r\n\t\tif (this.conditionalExpression && !this.conditionalExpression.operator) {\r\n\t\t\tthis.conditionalExpression.operator = 'and';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new blank conditional expression to our child expressions array.\r\n\t */\r\n\taddChildExpression(): void {\r\n\t\tthis.conditionalExpression.child_expressions.push(new ConditionalExpression());\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our child expressions array \"up\" (by swapping it with the ID before).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveUp(index: number): void {\r\n\t\tconst idAbove = index - 1;\r\n\t\tconst toBeSwapped = this.conditionalExpression.child_expressions[idAbove];\r\n\r\n\t\tthis.conditionalExpression.child_expressions[idAbove] = this.conditionalExpression.child_expressions[index];\r\n\t\tthis.conditionalExpression.child_expressions[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our child expressions array \"down\" (by swapping it with the ID after).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveDown(index: number): void {\r\n\t\tconst idBelow = index + 1;\r\n\t\tconst toBeSwapped = this.conditionalExpression.child_expressions[idBelow];\r\n\r\n\t\tthis.conditionalExpression.child_expressions[idBelow] = this.conditionalExpression.child_expressions[index];\r\n\t\tthis.conditionalExpression.child_expressions[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child expression from our child expressions array by a given index.\r\n\t * @param index Index to remove\r\n\t */\r\n\tremoveChildExpression(index: number): void {\r\n\t\tthis.conditionalExpression.child_expressions.splice(index, 1);\r\n\t}\r\n\r\n\tonCreateVariable(argument: Argument) {\r\n\t\tthis.createVariable.emit(argument);\r\n\t}\r\n\r\n\t// This method was used to disable the operator dropdown, but I feel it might confuse users if it's disabled.\r\n\t// isOnlyOneChild(): boolean {\r\n\t// \treturn this.conditionalExpression.conditions.length + this.conditionalExpression.child_expressions.length <= 1;\r\n\t// }\r\n}\r\n","module.exports = \"<div class=\\\"indent\\\">\\r\\n\\t<!-- Basic Info -->\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label>Operator</label>\\r\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"conditionalExpression.operator\\\">\\r\\n\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of availableOperators\\\" [value]=\\\"i\\\" [label]=\\\"i.toUpperCase()\\\">{{i.toUpperCase()}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label>Negated</label>\\r\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"conditionalExpression.is_negated\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<!-- Conditions Component -->\\r\\n\\t<div>\\r\\n\\t\\t<h4>Conditions</h4>\\r\\n\\t\\t<playbook-conditions-component [conditions]=\\\"conditionalExpression.conditions\\\" [appApis]=\\\"appApis\\\" [loadedWorkflow]=\\\"loadedWorkflow\\\"\\r\\n\\t\\t [selectedAppName]=\\\"selectedAppName\\\" (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-conditions-component>\\r\\n\\t</div>\\r\\n\\t<!-- Add Child Expressions Header -->\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<h4>Child Expressions</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addChildExpression()\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>Add Child Expression\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<!-- Child expressions control and component -->\\r\\n\\t<div *ngFor=\\\"let childExpression of conditionalExpression.child_expressions; let id = index\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<label>Child Expression {{id+1}}</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id > 0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveUp(id)\\\" title=\\\"Move Up\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-up\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id < conditionalExpression.child_expressions.length - 1\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveDown(id)\\\" title=\\\"Move Down\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-down\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"removeChildExpression(id)\\\" title=\\\"Remove Conditional Expression\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-close\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<playbook-conditional-expression-component [conditionalExpression]=\\\"childExpression\\\" [appApis]=\\\"appApis\\\" [selectedAppName]=\\\"selectedAppName\\\"\\r\\n\\t\\t [loadedWorkflow]=\\\"loadedWorkflow\\\" (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-conditional-expression-component>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, ViewEncapsulation, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { ConditionApi } from '../models/api/conditionApi';\r\nimport { ParameterApi } from '../models/api/parameterApi';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { Argument } from '../models/playbook/argument';\r\nimport { Condition } from '../models/playbook/condition';\r\n\r\n\r\n@Component({\r\n\tselector: 'playbook-conditions-component',\r\n\ttemplateUrl: './playbook.conditions.html',\r\n\tstyleUrls: [],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [],\r\n})\r\nexport class PlaybookConditionsComponent implements OnInit {\r\n\t@Input() selectedAppName: string;\r\n\t@Input() conditions: Condition[];\r\n\t@Input() appApis: AppApi[];\r\n\t@Input() loadedWorkflow: Workflow;\r\n\r\n\t@Output() createVariable = new EventEmitter<Argument>();\r\n\r\n\tselectedConditionApi: string;\r\n\tappNamesWithConditions: string[];\r\n\r\n\t// tslint:disable-next-line:no-empty\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tconst appsWithConditions = this.appApis.filter(app => app.condition_apis && app.condition_apis.length);\r\n\r\n\t\t// If our selected app doesn't have conditions, just auto select the first one\r\n\t\tif (!appsWithConditions.find(a => a.name === this.selectedAppName)) {\r\n\t\t\tconst firstApp = appsWithConditions[0];\r\n\t\t\tif (firstApp) { this.selectedAppName = firstApp.name; }\r\n\t\t}\r\n\r\n\t\tthis.appNamesWithConditions = appsWithConditions.map(app => app.name);\r\n\r\n\t\tthis.resetConditionSelection(this.selectedAppName);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets/resets the condition selection to the initial condition in the list on load/after adding a condition.\r\n\t * @param appName App name to reset the conditions for\r\n\t */\r\n\tresetConditionSelection(appName: string) {\r\n\t\tconst app = this.appApis.find(a => a.name === appName);\r\n\r\n\t\tif (app.condition_apis && app.condition_apis.length) { this.selectedConditionApi = app.condition_apis[0].name; }\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new condition of a given selected app/action to our conditions array.\r\n\t */\r\n\taddCondition(): void {\r\n\t\tif (!this.selectedAppName || !this.selectedConditionApi) { return; }\r\n\r\n\t\tconst newCondition = new Condition();\r\n\t\tnewCondition.app_name = this.selectedAppName;\r\n\t\tnewCondition.action_name = this.selectedConditionApi;\r\n\t\t// newCondition.arguments = [];\r\n\r\n\t\tthis.conditions.push(newCondition);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our conditions array \"up\" (by swapping it with the ID before).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveUp(index: number): void {\r\n\t\tconst idAbove = index - 1;\r\n\t\tconst toBeSwapped = this.conditions[idAbove];\r\n\r\n\t\tthis.conditions[idAbove] = this.conditions[index];\r\n\t\tthis.conditions[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our conditions array \"down\" (by swapping it with the ID after).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveDown(index: number): void {\r\n\t\tconst idBelow = index + 1;\r\n\t\tconst toBeSwapped = this.conditions[idBelow];\r\n\r\n\t\tthis.conditions[idBelow] = this.conditions[index];\r\n\t\tthis.conditions[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a condition from our conditions array by a given index.\r\n\t * @param index Index to remove\r\n\t */\r\n\tremoveCondition(index: number): void {\r\n\t\tthis.conditions.splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a ConditionApi by app name and condition name.\r\n\t * @param appName App name to find\r\n\t * @param conditionName Condition name to find\r\n\t */\r\n\tgetConditionApi(appName: string, conditionName: string): ConditionApi {\r\n\t\tconst conditionApi = this.appApis.find(a => a.name === appName).condition_apis.find(c => c.name === conditionName);\r\n\t\t// Filter out the data_in parameter\r\n\t\tconditionApi.parameters = conditionApi.parameters.filter(p => p.name !== conditionApi.data_in);\r\n\t\treturn conditionApi;\r\n\t}\r\n\r\n\t/**\r\n\t * For a given condition and parameter api, return the argument that already exists (by parameter name),\r\n\t * or create, add, and return an argument with the default values specified in the parameter API.\r\n\t * @param condition Condition to query/mutate\r\n\t * @param parameterApi ParameterApi to use as the basis\r\n\t */\r\n\tgetOrInitializeArgument(condition: Condition, parameterApi: ParameterApi): Argument {\r\n\t\t// Find an existing argument\r\n\t\tlet argument = condition.arguments.find(a => a.name === parameterApi.name);\r\n\t\tif (argument) { return argument; }\r\n\r\n\t\targument = this.getDefaultArgument(parameterApi);\r\n\t\tcondition.arguments.push(argument);\r\n\t\treturn argument;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an argument based upon a given parameter API and its default value.\r\n\t * @param parameterApi Parameter API used to generate the default argument\r\n\t */\r\n\tgetDefaultArgument(parameterApi: ParameterApi): Argument {\r\n\t\treturn plainToClass(Argument, {\r\n\t\t\tname: parameterApi.name,\r\n\t\t\tvalue: parameterApi.schema.default != null ? parameterApi.schema.default : null,\r\n\t\t\treference: '',\r\n\t\t\tselection: '',\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of condition names for the selected app name. Used to populate a select.\r\n\t */\r\n\tgetConditionNamesForApp(): string[] {\r\n\t\treturn this.appApis.find(a => a.name === this.selectedAppName).condition_apis.map(c => c.name);\r\n\t}\r\n\r\n\tonCreateVariable(argument: Argument) {\r\n\t\tthis.createVariable.emit(argument);\r\n\t}\r\n}\r\n","module.exports = \"<div *ngIf=\\\"appNamesWithConditions.length\\\">\\r\\n\\t<div class=\\\"row addBar\\\">\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<label>App</label>\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAppName\\\" (change)=\\\"resetConditionSelection($event.target.value)\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of appNamesWithConditions\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<label>Action</label>\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedConditionApi\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of getConditionNamesForApp()\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addCondition()\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>Add Condition\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div *ngFor=\\\"let condition of conditions; let id = index\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t\\t<label>Condition {{id+1}}: {{condition.app_name}} - {{condition.action_name}}</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label>Negated</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"condition.is_negated\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id > 0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveUp(id)\\\" title=\\\"Move Up\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-up\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id < conditions.length - 1\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveDown(id)\\\" title=\\\"Move Down\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-down\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"removeCondition(id)\\\" title=\\\"Remove Condition\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-close\\\"></i>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<playbook-argument-component *ngFor=\\\"let parameterApi of getConditionApi(condition.app_name, condition.action_name).parameters; let id = index\\\"\\r\\n\\t\\t [loadedWorkflow]=\\\"loadedWorkflow\\\" [argument]=\\\"getOrInitializeArgument(condition, parameterApi)\\\" [parameterApi]=\\\"parameterApi\\\"\\r\\n\\t\\t [id]=\\\"id\\\" (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-argument-component>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<h4>Transforms</h4>\\r\\n\\t\\t\\t<playbook-transforms-component [transforms]=\\\"condition.transforms\\\" [appApis]=\\\"appApis\\\" [selectedAppName]=\\\"selectedAppName\\\"\\r\\n\\t\\t\\t [loadedWorkflow]=\\\"loadedWorkflow\\\" (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-transforms-component>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import {Component, Input} from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EnvironmentVariable } from '../models/playbook/environmentVariable';\r\n\r\n@Component({\r\n  selector: 'playbook-environment-variable-modal-component',\r\n  templateUrl: './playbook.environment.variable.modal.html',\r\n})\r\nexport class PlaybookEnvironmentVariableModalComponent {\r\n  @Input() variable: EnvironmentVariable = new EnvironmentVariable();\r\n  existing: boolean = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ existing ? 'Edit' : 'Add' }} Workflow Variable</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">Name</label>\\r\\n                    <input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"variable.name\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"value\\\">Default Value</label>\\r\\n                    <input name=\\\"value\\\" type=\\\"text\\\" [(ngModel)]=\\\"variable.value\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"description\\\">Description (optional)</label>\\r\\n                    <textarea name=\\\"description\\\" rows=\\\"2\\\" [(ngModel)]=\\\"variable.description\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Close</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.close(variable)\\\">Save</button>\\r\\n</div>\"","module.exports = \"<div id=\\\"main\\\" class=\\\"playbookMain\\\">\\r\\n    <!-- <h1 *ngIf=\\\"false\\\" class=\\\"d-flex mt-2 mb-4\\\">\\r\\n        <span class=\\\"mr-3\\\">Workflows</span>\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <button (click)=\\\"createWorkflow()\\\" class=\\\"btn btn-outline-primary mr-2\\\">Create New</button>\\r\\n            <button (click)=\\\"importWorkflow()\\\" class=\\\"btn btn-outline-primary\\\">Import Workflow</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"workflows.length > 0\\\" class=\\\"col-4 my-1 my-lg-none ml-auto pr-0\\\">\\r\\n                <input class=\\\"form-control\\\" [formControl]=\\\"filterQuery\\\" placeholder=\\\"Filter Workflows...\\\" />\\r\\n            </div>\\r\\n    </h1> -->\\r\\n    <div class=\\\"d-flex align-items-center\\\">\\r\\n        <nav aria-label=\\\"breadcrumb\\\">\\r\\n            <ol id=\\\"playbookBreadcrumbs\\\" class=\\\"breadcrumb\\\">\\r\\n                <li class=\\\"breadcrumb-item\\\">Workflows</li>\\r\\n                <li class=\\\"breadcrumb-item d-flex align-items-center\\\">\\r\\n                    <a routerLink=\\\"\\\" (click)=\\\"createWorkflow()\\\">Create New</a>\\r\\n                    <button (click)=\\\"importWorkflow()\\\" class=\\\"ml-3 btn btn-sm btn-outline-primary\\\">Import Workflow</button>\\r\\n                </li>\\r\\n            </ol>\\r\\n        </nav>\\r\\n        <div *ngIf=\\\"workflows.length > 0\\\" class=\\\"col-4 my-1 my-lg-none ml-auto pr-0\\\">\\r\\n            <input class=\\\"form-control\\\" [formControl]=\\\"filterQuery\\\" placeholder=\\\"Filter Workflows...\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"workflows.length > 0\\\" class=\\\"row\\\">\\r\\n\\r\\n        <div *ngFor=\\\"let w of filteredWorkflows\\\" class=\\\"col-md-6 col-lg-4 col-xl-3 my-4\\\">\\r\\n            <div class=\\\"card workflow-card shadow\\\">\\r\\n                <div ngbDropdown placement=\\\"bottom-right\\\" class=\\\"d-inline-block workflow-menu mt-3\\\">\\r\\n                    <a class=\\\"workflow-menu-link text-muted h2 px-3\\\" ngbDropdownToggle><i\\r\\n                            class=\\\"fa fa-ellipsis-v\\\"></i></a>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" (click)=\\\"editDescription(w)\\\">Edit Description...</button>\\r\\n                        <button class=\\\"dropdown-item\\\" (click)=\\\"duplicateWorkflow(w)\\\">Duplicate</button>\\r\\n                        <button class=\\\"dropdown-item\\\" (click)=\\\"exportWorkflow(w)\\\">Export</button>\\r\\n                        <button class=\\\"dropdown-item\\\" (click)=\\\"deleteWorkflow(w)\\\">Delete</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body d-flex flex-column\\\">\\r\\n\\r\\n                    <h5 class=\\\"card-title\\\">\\r\\n                        {{ w.name }}\\r\\n                        <div *ngIf=\\\"w.tags?.length > 0\\\" class=\\\"small mt-1\\\">\\r\\n                            <span *ngFor=\\\"let tag of w.tags\\\" class=\\\"badge badge-pill badge-primary small mr-1\\\">\\r\\n                                {{ tag }} </span>\\r\\n                        </div>\\r\\n                    </h5>\\r\\n\\r\\n                    <p class=\\\"card-text flex-grow-1\\\">{{ w.description }}</p>\\r\\n                    <div class=\\\"d-flex justify-content-around\\\">\\r\\n                        <button class=\\\"btn btn-outline-primary mr-1\\\" (click)=\\\"routeToWorkflow(w)\\\"><i\\r\\n                                class=\\\"fa fa-sitemap\\\"></i> Workflow Editor</button>\\r\\n                        <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"executeWorkflow(w)\\\" [disabled]=\\\"!w.is_valid\\\"><i\\r\\n                                class=\\\"fa fa-play-circle\\\"></i> Execute Workflow</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"workflowsLoaded && workflows.length == 0\\\" class=\\\"instruction-container d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"card bg-light shadow-lg\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"mb-3\\\">Welcome to WALKOFF</h4>\\r\\n                <p>\\r\\n                    <b>WALKOFF</b> is a flexible, easy to use,\\r\\n                    automation framework allowing users to integrate their capabilities and devices to cut through the\\r\\n                    repetitive,\\r\\n                    tedious tasks slowing them down.\\r\\n                </p>\\r\\n                <p>\\r\\n                    Use the <b>Create New</b> link above to create your first workflow or\\r\\n                    visit the <a href=\\\"https://walkoff.readthedocs.io\\\" target=\\\"_blank\\\"><b>website</b></a> for additional\\r\\n                    documentation.\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"/* @import '/client/node_modules/cytoscape-panzoom/cytoscape.js-panzoom.css';\\r\\n@import '/client/node_modules/ng2-dnd/bundles/style.css'; */\\n#main.playbookMain {\\n  padding: 10px 15px 0 15px;\\n  position: relative; }\\n#main.playbookMain:before {\\n  content: \\\"\\\\f0e8\\\";\\n  font-family: FontAwesome;\\n  font-style: normal;\\n  font-weight: normal;\\n  text-decoration: inherit;\\n  position: fixed;\\n  font-size: 50rem;\\n  color: #38607724;\\n  right: 4rem;\\n  margin-top: -8rem;\\n  z-index: -1; }\\n.playbookMain .parametersEditor .failure {\\n  color: crimson; }\\n.instruction-container {\\n  height: 500px;\\n  width: 100%; }\\n.instruction-container > .card {\\n    max-width: 50%; }\\n#playbookBreadcrumbs {\\n  background-color: unset;\\n  -webkit-margin-after: unset;\\n          margin-block-end: unset;\\n  -webkit-padding-start: unset;\\n          padding-inline-start: unset;\\n  font-weight: bold;\\n  font-size: 1.5rem; }\\n#playbookBreadcrumbs a {\\n    text-decoration: none; }\\n.workflow-card {\\n  height: 100%;\\n  max-height: 300px; }\\n.workflow-card .card-body {\\n    overflow: hidden; }\\n.workflow-card .card-text {\\n    min-height: 0;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n#playbookToolbar {\\n  background-color: #aecbdc;\\n  margin-left: 0;\\n  margin-bottom: 5px;\\n  border: 1px solid #8b9aa3;\\n  border-radius: 5px; }\\n#playbookToolbar .btn-default {\\n  background-color: #aecbdc;\\n  border-color: #aecbdc; }\\n#playbookToolbar .btn-default:hover {\\n  background-color: #eaf2f6;\\n  border-color: #eaf2f6;\\n  margin: 0;\\n  border-radius: 0; }\\n#playbookToolbar .btn-group {\\n  border-right: 1px solid #8b9aa3; }\\n#playbookToolbar .btn-group > .btn:first-child {\\n  margin: 0;\\n  padding: 10px; }\\n#playbookToolbar .btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group {\\n  margin-left: 0; }\\n#playbookToolbar .form-control.workflowNameInput {\\n  display: inline-block;\\n  width: auto; }\\n#currentWorkflowText {\\n  margin-top: 10px;\\n  font-size: 18px; }\\n.consoleRow {\\n  padding: 10px; }\\n/* Console Row = 200px */\\n.playbookMain .graphEditorRow, .playbookMain .graphEditorColumn {\\n  height: calc(100vh - 310px);\\n  overflow: auto; }\\n.playbookMain .panel-heading.playbook-heading {\\n  cursor: pointer; }\\n.workflow-menu {\\n  cursor: pointer;\\n  padding: unset;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px; }\\n.workflow-menu .workflow-menu-link::after {\\n    content: none; }\\n#playbookEditorTabs {\\n  display: inline-block;\\n  vertical-align: top;\\n  height: 100%;\\n  width: 100%;\\n  position: inherit;\\n  background: transparent; }\\n#cy {\\n  /* display: inline-block; */\\n  /* vertical-align: top; */\\n  width: 100%;\\n  height: 100%; }\\n/* Need to do this else panzoom appears above modals */\\n#cy .cy-panzoom {\\n  z-index: 10; }\\n#cy-instructions {\\n  padding: 20px;\\n  font-size: 25px; }\\n#cy-json-data {\\n  background-color: white;\\n  color: black;\\n  font-weight: normal;\\n  height: 630px;\\n  width: 500px;\\n  resize: none; }\\n.playbookMain #accordion .card-heading .card-title:after {\\n  /* symbol for \\\"opening\\\" panels */\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  content: \\\"\\\\f078\\\";\\n  /* adjust as needed, taken from bootstrap.css */\\n  float: right;\\n  /* adjust as needed */\\n  color: grey;\\n  /* adjust as needed */ }\\n.no-transition {\\n  transition: none !important; }\\n.playbookMain #accordion .card-heading.collapsed .card-title:after {\\n  /* symbol for \\\"collapsed\\\" panels */\\n  content: \\\"\\\\f054\\\";\\n  /* adjust as needed, taken from bootstrap.css */ }\\n.playbookMain .card-default > .card-heading {\\n  background-color: #eaf2f6;\\n  font-weight: bolder; }\\n.playbookMain .parametersEditor input[type=checkbox].form-control {\\n  width: 34px;\\n  margin: 0 5px; }\\n.playbookMain .parametersEditor .form-group.argument {\\n  margin-bottom: 5px;\\n  padding: 5px; }\\n.playbookMain .parametersEditor .form-group.argument.odd {\\n  background-color: #EEE; }\\n.playbookMain .parametersEditor .indent {\\n  border-left: 3px solid #DDD;\\n  border-top: 1px solid #DDD;\\n  border-bottom: 1px solid #DDD;\\n  padding: 5px 0 5px 15px;\\n  margin-top: 5px;\\n  margin-bottom: 5px; }\\n.playbookMain .parametersEditor .addBar {\\n  margin-bottom: 10px; }\\n.playbookMain .parametersEditor .addBar button {\\n  margin-top: 25px; }\\n.playbookMain .parametersEditor .propertyHeader {\\n  margin-bottom: 5px; }\\n.playbookMain .parametersEditor .required {\\n  color: crimson;\\n  margin-left: 5px; }\\n.playbookMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n#workflowsModal .workflowPanel a {\\n  cursor: pointer; }\\n#workflowsModal .card-heading h4 {\\n  min-height: 30px; }\\n#workflowsModal .importContainer {\\n  margin-bottom: 5px; }\\n#workflowsModal .importContainer h5 {\\n  display: inline-block; }\\n#workflowsModal .importPlaybookInput {\\n  display: inline-block; }\\n#workflowsModal > .modal-dialog {\\n  max-width: 600px; }\\n#workflowsModal .modal-title,\\n#executionResultsModal .modal-title,\\n#playbookAndWorkflowActionModal .modal-title {\\n  display: inline-block; }\\n#executionResultsModal > .modal-dialog {\\n  max-width: 95%; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { plainToClass, classToPlain } from 'class-transformer';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { Playbook } from '../models/playbook/playbook';\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { Global } from '../models/global';\r\nimport { Variable } from '../models/variable';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { WorkflowStatus } from '../models/execution/workflowStatus';\r\n\r\nimport { GlobalsService } from '../globals/globals.service';\r\nimport { ExecutionService } from '../execution/execution.service';\r\nimport { SettingsService } from '../settings/settings.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { UUID } from 'angular2-uuid';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { Subscriber } from 'rxjs';\r\nimport { ActionType } from '../models/api/actionApi';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class PlaybookService {\r\n\r\n\tworkflowsChange: Observable<any>;\r\n\tobserver: Subscriber<any>;\r\n\r\n\ttempStoredWorkflow: Workflow;\r\n\r\n\tconstructor(private http: HttpClient, private utils: UtilitiesService, private executionService: ExecutionService,\r\n\t\tprivate globalsService: GlobalsService, private settingsService: SettingsService) {\r\n\t\tthis.workflowsChange = new Observable((observer) => {\r\n\t\t\tthis.observer = observer;\r\n\t\t\tthis.getWorkflows().then(workflows => this.observer.next(workflows));\r\n\t\t})\r\n\t}\r\n\r\n\temitChange(data: any) {\r\n\t\tif (this.observer) this.getWorkflows().then(workflows => this.observer.next(workflows));\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all playbooks and their child workflows in minimal form (id, name).\r\n\t */\r\n\tgetPlaybooks(): Promise<Playbook[]> {\r\n\t\treturn this.http.get('/api/playbooks')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Playbook, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Saves a new playbook.\r\n\t * @param playbook New playbook to be saved\r\n\t */\r\n\tnewPlaybook(playbook: Playbook): Promise<Playbook> {\r\n\t\treturn this.http.post('/api/playbooks', classToPlain(playbook))\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Playbook, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Renames an existing playbook.\r\n\t * @param playbookId Current playbook ID to change\r\n\t * @param newName New name for the updated playbook\r\n\t */\r\n\trenamePlaybook(playbookId: string, newName: string): Promise<Playbook> {\r\n\t\treturn this.http.patch('/api/playbooks', { id: playbookId, name: newName })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Playbook, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Duplicates and saves an existing playbook, it's workflows, actions, branches, etc. under a new name.\r\n\t * @param playbookId ID of the playbook to duplicate\r\n\t * @param newName Name of the new copy to be saved\r\n\t */\r\n\tduplicatePlaybook(playbookId: string, newName: string): Promise<Playbook> {\r\n\t\treturn this.http.post(`/api/playbooks?source=${playbookId}`, { name: newName })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Playbook, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a playbook by name.\r\n\t * @param playbookIdToDelete ID of playbook to be deleted.\r\n\t */\r\n\tdeletePlaybook(playbookIdToDelete: string): Promise<void> {\r\n\t\treturn this.http.delete(`/api/playbooks/${playbookIdToDelete}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Exports a playbook as an Observable (component handles the actual 'save').\r\n\t * @param playbookId: ID of playbook to export\r\n\t */\r\n\texportPlaybook(playbookId: string): Observable<Blob> {\r\n\t\treturn this.http.get(`/api/playbooks/${playbookId}?mode=export`, { responseType: 'blob' })\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Exports a playbook as an Observable (component handles the actual 'save').\r\n\t * @param workflowId: ID of playbook to export\r\n\t */\r\n\texportWorkflow(workflowId: string): Promise<Blob> {\r\n\t\treturn this.http.get(`/api/workflows/${workflowId}?mode=export`, { responseType: 'blob' })\r\n\t\t\t.toPromise()\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Imports a playbook from a supplied file.\r\n\t * @param fileToImport File to be imported\r\n\t */\r\n\timportPlaybook(fileToImport: File): Observable<Playbook> {\r\n\t\tconst formData: FormData = new FormData();\r\n\t\tformData.append('file', fileToImport, fileToImport.name);\r\n\r\n\t\tconst headers = { 'Accept': 'application/json' }\r\n\r\n\t\treturn this.http.post('/api/playbooks', formData, { headers })\r\n\t\t\t.map(res => plainToClass(Playbook, res))\r\n\t\t\t.catch(error => Observable.throw(error));\r\n\t}\r\n\r\n\t/**\r\n\t * Imports a playbook from a supplied file.\r\n\t * @param fileToImport File to be imported\r\n\t */\r\n\tasync importWorkflow(fileToImport: File): Promise<Workflow> {\r\n\t\tconst headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\r\n\t\tconst body = JSON.parse(await this.utils.readUploadedFileAsText(fileToImport));\r\n\t\tbody.name = await this.nextWorkflowName(body.name);\r\n\r\n\t\treturn this.http.post('/api/workflows', body, { headers })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tasync nextWorkflowName(name: string) : Promise<string> {\r\n\t\tconst workflows = await this.getWorkflows();\r\n\t\tconst count = workflows.filter(w => w.name.match(new RegExp(`^${ name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') }( \\(\\d+\\))?$`))).length;\r\n\t\treturn (count > 0) ? `${ name } (${ count })`: name;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all playbooks and their child workflows in minimal form (id, name).\r\n\t */\r\n\tgetWorkflows(): Promise<Workflow[]> {\r\n\t\treturn this.http.get('/api/workflows')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Duplicates a workflow under a given playbook, it's actions, branches, etc. under a new name.\r\n\t * @param sourceWorkflowId Current workflow ID to be duplicated\r\n\t * @param destinationPlaybookId ID of playbook the workflow will be duplicated to\r\n\t * @param newName Name for the new copy to be saved\r\n\t */\r\n\tduplicateWorkflow(\r\n\t\tsourceWorkflowId: string, newName: string,\r\n\t): Promise<Workflow> {\r\n\t\treturn this.http.post(`/api/workflows?source=${sourceWorkflowId}`,\r\n\t\t\t{ name: newName })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a given workflow under a given playbook.\r\n\t * @param workflowIdToDelete ID of the workflow to be deleted\r\n\t */\r\n\tdeleteWorkflow(workflowIdToDelete: string): Promise<void> {\r\n\t\treturn this.http.delete(`/api/workflows/${workflowIdToDelete}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new workflow under a given playbook.\r\n\t * @param playbookId ID of the playbook the new workflow should be added under\r\n\t * @param workflow Workflow to be saved\r\n\t */\r\n\tnewWorkflow(workflow: Workflow): Promise<Workflow> {\r\n\t\tworkflow.id = UUID.UUID();\r\n\t\treturn this.http.post('/api/workflows', classToPlain(workflow))\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the data of a given workflow specified under a given playbook.\r\n\t * @param workflow Data to be saved under the workflow (actions, etc.)\r\n\t */\r\n\tsaveWorkflow(workflow: Workflow): Promise<Workflow> {\r\n\t\treturn this.http.put(`/api/workflows/${workflow.id}`, classToPlain(workflow))\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => this.emitChange(data))\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the data of a given workflow under a given playbook.\r\n\t * @param workflowId ID of the workflow to load\r\n\t */\r\n\tloadWorkflow(workflowId: string): Promise<Workflow> {\r\n\t\treturn this.http.get(`/api/workflows/${workflowId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the server to execute a given workflow.\r\n\t * Note that execution results are not returned here, but on a separate stream-actions EventSource.\r\n\t * @param workflowId ID of the workflow to execute\r\n\t */\r\n\taddWorkflowToQueue(workflowId: string, executionId: string = null): Promise<WorkflowStatus> {\r\n\t\treturn this.executionService.addWorkflowToQueue(workflowId, executionId);\r\n\t}\r\n\r\n\t/**\r\n\t * For a given executing workflow, asyncronously perform some action to change its status.\r\n\t * Only returns success\r\n\t * @param executionId Execution ID to act upon\r\n\t * @param action Action to take (e.g. abort, resume, pause)\r\n\t */\r\n\tperformWorkflowTrigger(executionId: string, trigger: string, data = {}): Promise<void> {\r\n\t\treturn this.http.patch(`api/workflowqueue/${ executionId }`, { status: 'trigger',  trigger_id: trigger, trigger_data: data})\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of all globals within the DB.\r\n\t */\r\n\tgetGlobals(): Promise<Variable[]> {\r\n\t\treturn this.globalsService.getAllGlobals();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all app apis from the server.\r\n\t */\r\n\tgetApis(): Promise<AppApi[]> {\r\n\t\treturn this.http.get('/api/apps/apis')\r\n\t\t\t.toPromise()\r\n\t\t\t// .then((data: any[]) => {\r\n\t\t\t// \treturn [{\r\n\t\t\t// \t\tid_: '30f06bd4-3703-f8a9-47e0-8853ea916913',\r\n\t\t\t// \t\tname: 'Builtin',\r\n\t\t\t// \t\tdescription: 'Walkoff built-in functions',\r\n\t\t\t// \t\tapp_version: '1.0.1',\r\n\t\t\t// \t\twalkoff_version: '1.0.0',\r\n\t\t\t// \t\tcontact_info: {email: \"walkoff@nsa.gov\", name: \"Walkoff Team\", url: \"https://github.com/nsacyber/walkoff\"},\r\n\t\t\t// \t\tlicense_info: {name: \"Creative Commons\", url: \"https://github.com/nsacyber/WALKOFF/blob/master/LICENSE.md\"},\r\n\t\t\t// \t\texternal_docs: {},\r\n\t\t\t// \t\tactions: [\r\n\t\t\t// \t\t\t{\r\n\t\t\t// \t\t\t\tid_: '7a1c6838-1b14-4ddc-7d84-935fcbc260ca',\r\n\t\t\t// \t\t\t\tname: 'Condition',\r\n\t\t\t// \t\t\t\tnode_type: ActionType.CONDITION,\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\t{\r\n\t\t\t// \t\t\t\tid_: '21f7c721-448f-da7b-fea9-9b781824e7d3',\r\n\t\t\t// \t\t\t\tname: 'Trigger',\r\n\t\t\t// \t\t\t\tnode_type: ActionType.TRIGGER,\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\t{\r\n\t\t\t// \t\t\t\tid_: '40a9e8ee-9a4f-ffb7-0a01-0cd25a6bd3a2',\r\n\t\t\t// \t\t\t\tname: 'Transform',\r\n\t\t\t// \t\t\t\tnode_type: ActionType.TRANSFORM,\r\n\t\t\t// \t\t\t}\r\n\t\t\t// \t\t]\r\n\t\t\t// \t}].concat(data);\r\n\t\t\t// })\r\n\t\t\t.then((data: any[]) => plainToClass(AppApi, data))\r\n\t\t\t.then((appApis: AppApi[]) => {\r\n\t\t\t\tappApis.forEach(app => app.action_apis.map(action => {\r\n\t\t\t\t\taction.app_name = app.name;\r\n\t\t\t\t\taction.app_version = app.app_version;\r\n\t\t\t\t\treturn action;\r\n\t\t\t\t}))\r\n\t\t\t\treturn appApis;\r\n\t\t\t})\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of all users within the DB.\r\n\t */\r\n\tgetUsers(): Promise<User[]> {\r\n\t\treturn this.settingsService.getAllUsers();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of all roles within the application.\r\n\t */\r\n\tgetRoles(): Promise<Role[]> {\r\n\t\treturn this.settingsService.getRoles();\r\n\t}\r\n\r\n\tget workflowToCreate(): Workflow {\r\n\t\tconst w = this.tempStoredWorkflow;\r\n\t\t//this.tempStoredWorkflow = null;\r\n\t\treturn w;\r\n\t}\r\n\r\n\tset workflowToCreate(workflow: Workflow) {\r\n\t\tthis.tempStoredWorkflow = workflow;\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, ViewEncapsulation, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { plainToClass } from 'class-transformer';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { TransformApi } from '../models/api/transformApi';\r\nimport { ParameterApi } from '../models/api/parameterApi';\r\nimport { Argument } from '../models/playbook/argument';\r\nimport { Transform } from '../models/playbook/transform';\r\n\r\n@Component({\r\n\tselector: 'playbook-transforms-component',\r\n\ttemplateUrl: './playbook.transforms.html',\r\n\tstyleUrls: [],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [],\r\n})\r\nexport class PlaybookTransformsComponent implements OnInit {\r\n\t@Input() selectedAppName: string;\r\n\t@Input() transforms: Transform[];\r\n\t@Input() appApis: AppApi[];\r\n\t@Input() loadedWorkflow: Workflow;\r\n\r\n\t@Output() createVariable = new EventEmitter<Argument>();\r\n\r\n\tselectedTransformApi: string;\r\n\tappNamesWithTransforms: string[];\r\n\r\n\t// tslint:disable-next-line:no-empty\r\n\tconstructor() { }\r\n\r\n\tngOnInit(): void {\r\n\t\tconst appsWithTransforms = this.appApis.filter(app => app.transform_apis && app.transform_apis.length);\r\n\t\t\r\n\t\t// If our selected app doesn't have transforms, just auto select the first one\r\n\t\tif (!appsWithTransforms.find(a => a.name === this.selectedAppName)) {\r\n\t\t\tconst firstApp = appsWithTransforms[0];\r\n\t\t\tif (firstApp) { this.selectedAppName = firstApp.name; }\r\n\t\t}\r\n\r\n\t\tthis.appNamesWithTransforms = appsWithTransforms.map(app => app.name);\r\n\r\n\t\tthis.resetTransformSelection(this.selectedAppName);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets/resets the transform selection to the initial transform in the list on load/after adding a transform.\r\n\t * @param appName App name to reset the transforms for\r\n\t */\r\n\tresetTransformSelection(appName: string): void {\r\n\t\tconst app = this.appApis.find(a => a.name === appName);\r\n\r\n\t\tif (app.transform_apis && app.transform_apis.length) { this.selectedTransformApi = app.transform_apis[0].name; }\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new transform of a given selected app/action to our transforms array.\r\n\t */\r\n\taddTransform(): void {\r\n\t\tif (!this.selectedAppName || !this.selectedTransformApi) { return; }\r\n\r\n\t\tconst newTransform = new Transform();\r\n\t\tnewTransform.app_name = this.selectedAppName;\r\n\t\tnewTransform.action_name = this.selectedTransformApi;\r\n\t\t// newTransform.arguments = args;\r\n\r\n\t\tthis.transforms.push(newTransform);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our transforms array \"up\" (by swapping it with the ID before).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveUp(index: number): void {\r\n\t\tconst idAbove = index - 1;\r\n\t\tconst toBeSwapped = this.transforms[idAbove];\r\n\r\n\t\tthis.transforms[idAbove] = this.transforms[index];\r\n\t\tthis.transforms[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves a selected index in our transforms array \"down\" (by swapping it with the ID after).\r\n\t * @param index Index to move\r\n\t */\r\n\tmoveDown(index: number): void {\r\n\t\tconst idBelow = index + 1;\r\n\t\tconst toBeSwapped = this.transforms[idBelow];\r\n\r\n\t\tthis.transforms[idBelow] = this.transforms[index];\r\n\t\tthis.transforms[index] = toBeSwapped;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a transform from our transforms array by a given index.\r\n\t * @param index Index to remove\r\n\t */\r\n\tremoveTransform(index: number): void {\r\n\t\tthis.transforms.splice(index, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TransformApi by app name and condition name.\r\n\t * @param appName App name to find\r\n\t * @param transformName Transform name to find\r\n\t */\r\n\tgetTransformApi(appName: string, transformName: string): TransformApi {\r\n\t\tconst transformApi = this.appApis.find(a => a.name === appName).transform_apis.find(t => t.name === transformName);\r\n\t\t// Filter out the data_in parameter\r\n\t\ttransformApi.parameters = transformApi.parameters.filter(p => p.name !== transformApi.data_in);\r\n\t\treturn transformApi;\r\n\t}\r\n\r\n\t/**\r\n\t * For a given condition and parameter api, return the argument that already exists (by parameter name),\r\n\t * or create, add, and return an argument with the default values specified in the parameter API.\r\n\t * @param condition Condition to query/mutate\r\n\t * @param parameterApi ParameterApi to use as the basis\r\n\t */\r\n\tgetOrInitializeArgument(transform: Transform, parameterApi: ParameterApi): Argument {\r\n\t\t// Find an existing argument\r\n\t\tlet argument = transform.arguments.find(a => a.name === parameterApi.name);\r\n\t\tif (argument) { return argument; }\r\n\r\n\t\targument = this.getDefaultArgument(parameterApi);\r\n\t\ttransform.arguments.push(argument);\r\n\t\treturn argument;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an argument based upon a given parameter API and its default value.\r\n\t * @param parameterApi Parameter API used to generate the default argument\r\n\t */\r\n\tgetDefaultArgument(parameterApi: ParameterApi): Argument {\r\n\t\treturn plainToClass(Argument, {\r\n\t\t\tname: parameterApi.name,\r\n\t\t\tvalue: parameterApi.schema.default != null ? parameterApi.schema.default : null,\r\n\t\t\treference: '',\r\n\t\t\tselection: '',\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of transform names for the selected app name. Used to populate a select.\r\n\t */\r\n\tgetTransformNamesForApp(): string[] {\r\n\t\treturn this.appApis.find(a => a.name === this.selectedAppName).transform_apis.map(c => c.name);\r\n\t}\r\n\r\n\tonCreateVariable(argument: Argument) {\r\n\t\tthis.createVariable.emit(argument);\r\n\t}\r\n}\r\n","module.exports = \"<div *ngIf=\\\"appNamesWithTransforms.length\\\" class=\\\"indent\\\">\\r\\n\\t<div class=\\\"row addBar\\\">\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<label>App</label>\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAppName\\\" (change)=\\\"resetTransformSelection($event.target.value)\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of appNamesWithTransforms\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<label>Action</label>\\r\\n\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedTransformApi\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let i of getTransformNamesForApp()\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addTransform()\\\"><i class=\\\"fa fa-plus\\\"></i>Add Transform</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div *ngFor=\\\"let transform of transforms; let id = index\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<label>Transform {{id+1}}: {{transform.app_name}} - {{transform.action_name}}</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id > 0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveUp(id)\\\" title=\\\"Move Up\\\"><i class=\\\"fa fa-arrow-up\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"id < transforms.length - 1\\\" class=\\\"btn btn-primary\\\" (click)=\\\"moveDown(id)\\\" title=\\\"Move Down\\\"><i class=\\\"fa fa-arrow-down\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"removeTransform(id)\\\" title=\\\"Remove Transform\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<playbook-argument-component *ngFor=\\\"let parameterApi of getTransformApi(transform.app_name, transform.action_name).parameters; let id = index\\\"\\r\\n\\t\\t[loadedWorkflow]=\\\"loadedWorkflow\\\" [argument]=\\\"getOrInitializeArgument(transform, parameterApi)\\\" [parameterApi]=\\\"parameterApi\\\"\\r\\n\\t\\t[id]=\\\"id\\\" (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-argument-component>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, ViewEncapsulation, ViewChild, ElementRef, ChangeDetectorRef, OnInit,\r\n\tAfterViewChecked, OnDestroy} from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { saveAs } from 'file-saver';\r\nimport { plainToClass, classToClass } from 'class-transformer';\r\nimport { NgbModal, NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as cytoscape from 'cytoscape';\r\nimport * as clipboard from 'cytoscape-clipboard';\r\nimport * as edgehandles from 'cytoscape-edgehandles';\r\nimport * as gridGuide from 'cytoscape-grid-guide';\r\nimport * as panzoom from 'cytoscape-panzoom';\r\nimport * as undoRedo from 'cytoscape-undo-redo';\r\n\r\nimport { PlaybookService } from './playbook.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { GlobalsService } from '../globals/globals.service';\r\nimport { ExecutionService } from '../execution/execution.service';\r\nimport { SettingsService } from '../settings/settings.service';\r\n\r\nimport { AppApi } from '../models/api/appApi';\r\nimport { ActionApi, ActionType } from '../models/api/actionApi';\r\nimport { ParameterApi } from '../models/api/parameterApi';\r\nimport { ConditionApi } from '../models/api/conditionApi';\r\nimport { TransformApi } from '../models/api/transformApi';\r\nimport { DeviceApi } from '../models/api/deviceApi';\r\nimport { ReturnApi } from '../models/api/returnApi';\r\nimport { Playbook } from '../models/playbook/playbook';\r\nimport { Workflow } from '../models/playbook/workflow';\r\nimport { Action } from '../models/playbook/action';\r\nimport { Branch } from '../models/playbook/branch';\r\nimport { GraphPosition } from '../models/playbook/graphPosition';\r\nimport { Global } from '../models/global';\r\nimport { Argument, Variant } from '../models/playbook/argument';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { NodeStatus, NodeStatuses } from '../models/execution/nodeStatus';\r\nimport { ConditionalExpression } from '../models/playbook/conditionalExpression';\r\nimport { NodeStatusEvent } from '../models/execution/nodeStatusEvent';\r\nimport { ConsoleLog } from '../models/execution/consoleLog';\r\nimport { EnvironmentVariable } from '../models/playbook/environmentVariable';\r\nimport { PlaybookEnvironmentVariableModalComponent } from './playbook.environment.variable.modal.component';\r\nimport { WorkflowStatus } from '../models/execution/workflowStatus';\r\nimport { CodemirrorComponent } from '@ctrl/ngx-codemirror';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Variable } from '../models/variable';\r\nimport { MetadataModalComponent } from './metadata.modal.component';\r\nimport { Condition } from '../models/playbook/condition';\r\nimport { Trigger } from '../models/playbook/trigger';\r\nimport { WorkflowNode } from '../models/playbook/WorkflowNode';\r\nimport { Transform } from '../models/playbook/transform';\r\n\r\n@Component({\r\n\tselector: 'workflow-editor-component',\r\n\ttemplateUrl: './workflow.editor.html',\r\n\tstyleUrls: [\r\n\t\t'./workflow.editor.scss',\r\n\t\t'../../../node_modules/cytoscape-panzoom/cytoscape.js-panzoom.css',\r\n\t\t'../../../node_modules/ng2-dnd/bundles/style.css',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [AuthService, GlobalsService, SettingsService],\r\n})\r\nexport class WorkflowEditorComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n\t@ViewChild('cyRef') cyRef: ElementRef;\r\n\t@ViewChild('workflowResultsTable') workflowResultsTable: DatatableComponent;\r\n\t@ViewChild('consoleContainer') consoleContainer: ElementRef;\r\n\t@ViewChild('consoleTable') consoleTable: DatatableComponent;\r\n\t@ViewChild('errorLogTable') errorLogTable: DatatableComponent;\r\n\t@ViewChild('environmentVariableTable') environmentVariableTable: DatatableComponent;\r\n\t@ViewChild('importFile') importFile: ElementRef;\r\n\t@ViewChild('accordion') apps_actions: ElementRef;\r\n\t@ViewChild('consoleArea') consoleArea: CodemirrorComponent;\r\n\r\n\tglobals: Variable[] = [];\r\n\trelevantGlobals: Variable[] = [];\r\n\tusers: User[];\r\n\troles: Role[];\r\n\r\n\t//loadedPlaybook: Playbook;\r\n\tloadedWorkflow: Workflow;\r\n\tplaybooks: Playbook[] = [];\r\n\tworkflows: Workflow[] = [];\r\n\tcy: any;\r\n\tedgeHandler: any;\r\n\tur: any;\r\n\tappApis: AppApi[] = [];\r\n\toffset: GraphPosition = plainToClass(GraphPosition, { x: -330, y: -170 });\r\n\tselectedAction: any; // node being displayed in json editor\r\n\tselectedActionApi: ActionApi;\r\n\tselectedBranchParams: {\r\n\t\tbranch: Branch;\r\n\t\treturnTypes: ReturnApi[];\r\n\t\tappName: string;\r\n\t\tactionName: string;\r\n\t};\r\n\tselectedEnvironmentVariable: EnvironmentVariable;\r\n\tcyJsonData: string;\r\n\tnodeStatuses: NodeStatus[] = [];\r\n\tconsoleLog: ConsoleLog[] = [];\r\n\texecutionResultsComponentWidth: number;\r\n\twaitingOnData: boolean = false;\r\n\tnodeStatusStartedRelativeTimes: { [key: string]: string } = {};\r\n\tnodeStatusCompletedRelativeTimes: { [key: string]: string } = {};\r\n\teventSource: any;\r\n\tconsoleEventSource: any;\r\n\tplaybookToImport: File;\r\n\trecalculateConsoleTableCallback: any;\r\n\tactionFilter: string = '';\r\n\tactionFilterControl = new FormControl();\r\n\tactionTypes = ActionType;\r\n\tsseErrorTimeout: any;\r\n\tshowConsole: boolean = false\r\n\r\n\ttags: string[] = [];\r\n\r\n\tconditionalOptions = {\r\n\t\ttabSize: 4,\r\n\t\tindentUnit: 4,\r\n\t\tmode: 'python',\r\n\t\tplaceholder: `# Python to set selected_node to an output action\r\n# For example:\r\n# \t\t\r\n# if input_1.result > input_2.result:\r\n#     selected_node = output_1\r\n# else:\r\n#     selected_node = output_2`\r\n\t}\r\n\r\n\ttransformOptions = {\r\n\t\ttabSize: 4,\r\n\t\tindentUnit: 4,\r\n\t\tmode: 'python',\r\n\t\tplaceholder: `# Python to transform previous nodes results using python code\r\n# For example:\r\n# \t\t\r\n# result = input.result.get(\"key\")`\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate playbookService: PlaybookService, private authService: AuthService,\r\n\t\tprivate toastrService: ToastrService, private activeRoute: ActivatedRoute,\r\n\t\tprivate cdr: ChangeDetectorRef, private utils: UtilitiesService,\r\n\t\tprivate modalService: NgbModal, private router: Router\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component initialization, we grab arrays of globals, app apis, and playbooks/workflows (id, name pairs).\r\n\t * We also initialize an EventSoruce for Action Statuses for the execution results table.\r\n\t * Also initialize cytoscape event bindings.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tconst cyDummy = cytoscape();\r\n\t\tif (!cyDummy.clipboard) { clipboard(cytoscape, $); }\r\n\t\tif (!cyDummy.edgehandles) { cytoscape.use(edgehandles); }\r\n\t\tif (!cyDummy.gridGuide) { cytoscape.use(gridGuide); }\r\n\t\tif (!cyDummy.panzoom) { cytoscape.use(panzoom); }\r\n\t\tif (!cyDummy.undoRedo) { cytoscape.use(undoRedo); }\r\n\r\n\t\tthis.playbookService.getGlobals().then(globals => this.globals = globals);\r\n\t\tthis.playbookService.getApis().then(appApis => this.appApis = appApis.sort((a, b) => a.name > b.name ? 1 : -1));\r\n\t\tthis.getPlaybooksWithWorkflows();\r\n\t\tthis._addCytoscapeEventBindings();\r\n\r\n\t\tObservable.interval(30000).subscribe(() => {\r\n\t\t\tthis.recalculateRelativeTimes();\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Filter app list by application and action names\r\n\t\t */\r\n\t\tthis.actionFilterControl.valueChanges.debounceTime(100).distinctUntilChanged().subscribe(query => {\r\n\t\t\tthis.actionFilter = query.trim();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t($('.action-panel') as any)\r\n\t\t\t\t\t.addClass('no-transition')\r\n\t\t\t\t\t.collapse((this.actionFilter) ? 'show' : 'hide')\r\n\t\t\t\t\t.removeClass('no-transition')\r\n\t\t\t}, 0);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This angular function is used primarily to recalculate column widths for execution results table.\r\n\t */\r\n\tngAfterViewChecked(): void { }\r\n\r\n\t/**\r\n\t * Closes our SSEs on component destroy.\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tif (this.eventSource && this.eventSource.close) { this.eventSource.close(); }\r\n\t\tif (this.consoleEventSource && this.consoleEventSource.close) { this.consoleEventSource.close(); }\r\n\t}\r\n\r\n\tchanged(data: {value: string[]}) {\r\n\t\tthis.tags = data.value;\r\n\t}\r\n\r\n    ///------------------------------------------------------------------------------------------------------\r\n\t/// Console functions\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/**\r\n\t * Sets up the EventStream for receiving console logs from the server. Binds various events to the event handler.\r\n\t * Will currently return ALL stream actions and not just the ones manually executed.\r\n\t */\r\n\tgetConsoleSSE(workflowExecutionId: string) {\r\n\t\tif (this.consoleEventSource) this.consoleEventSource.close();\r\n\r\n\t\treturn this.authService.getEventSource(`/api/streams/console/log?workflow_execution_id=${ workflowExecutionId }`)\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.consoleEventSource = eventSource;\r\n\t\t\t\tthis.consoleEventSource.onerror = (e: any) => this.statusEventErrorHandler(e);\r\n\t\t\t\tthis.consoleEventSource.addEventListener('log', (e: any) => this.consoleEventHandler(e));\r\n\t\t\t});\r\n\t}\r\n\r\n  consoleEventHandler(message: any): void {\r\n\t\tif (this.sseErrorTimeout) {\r\n\t\t\tclearTimeout(this.sseErrorTimeout);\r\n\t\t\tdelete this.sseErrorTimeout;\r\n\t\t}\r\n\r\n\t\tconsole.log('c', message)\r\n\t\tconst consoleEvent = plainToClass(ConsoleLog, (JSON.parse(message.data) as object));\r\n\t\tconst newConsoleLog = consoleEvent.toNewConsoleLog();\r\n\r\n\t\t// Induce change detection by slicing array\r\n\t\tthis.consoleLog.push(newConsoleLog);\r\n\t\tthis.consoleLog = this.consoleLog.slice();\r\n\t}\r\n\r\n\tget consoleContent() {\r\n\t\tlet content = `******************************* Console Output *******************************\\n`;\r\n\t\tthis.consoleLog.forEach(log => {\r\n\t\t\tcontent += log.message;\r\n\t\t})\r\n\t\treturn content;\r\n\t}\r\n\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/// Playbook CRUD etc functions\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/**\r\n\t * Sets up the EventStream for receiving stream actions from the server. Binds various events to the event handler.\r\n\t * Will currently return ALL stream actions and not just the ones manually executed.\r\n\t */\r\n\tgetNodeStatusSSE(workflowExecutionId: string) {\r\n\t\tif (this.eventSource) this.eventSource.close();\r\n\r\n\t\treturn this.authService.getEventSource(`/api/streams/workflowqueue/actions?workflow_execution_id=${ workflowExecutionId }`)\r\n\t\t\t.then(eventSource => {\r\n\t\t\t\tthis.eventSource = eventSource\r\n\t\t\t\tthis.eventSource.onerror = (e: any) => this.statusEventErrorHandler(e);\r\n\r\n\t\t\t\tObject.values(NodeStatuses)\r\n\t\t\t\t\t  .forEach(status => this.eventSource.addEventListener(status, (e: any) => this.nodeStatusEventHandler(e)));\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * For an incoming action, will try to find the matching action in the graph (if applicable).\r\n\t * Will style nodes based on the action status (executing/success/failure).\r\n\t * Will update the information in the action statuses table as well, adding new rows or updating existing ones.\r\n\t */\r\n\tnodeStatusEventHandler(message: any): void {\r\n\t\tif (this.sseErrorTimeout) {\r\n\t\t\tclearTimeout(this.sseErrorTimeout);\r\n\t\t\tdelete this.sseErrorTimeout;\r\n\t\t}\r\n\r\n\t\tconst nodeStatusEvent = plainToClass(NodeStatusEvent, (JSON.parse(message.data) as object));\r\n\t\tconsole.log('action', nodeStatusEvent);\r\n\r\n\t\t// If we have a graph loaded, find the matching node for this event and style it appropriately if possible.\r\n\t\tif (this.cy) {\r\n\t\t\tconst matchingNode = this.cy.elements(`node[_id=\"${ nodeStatusEvent.node_id }\"]`);\r\n\t\t\tconst nodeType = matchingNode.data('type');\r\n\t\t\tconst incomingEdges = matchingNode.incomers('edge');\r\n\t\t\tconst outgoingEdges = matchingNode.outgoers('edge');\r\n\r\n\t\t\tif (matchingNode) {\r\n\t\t\t\tswitch (nodeStatusEvent.status) {\r\n\t\t\t\t\tcase NodeStatuses.EXECUTING:\r\n\t\t\t\t\t\tmatchingNode.removeClass('success-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('failure-highlight');\r\n\t\t\t\t\t\tmatchingNode.addClass('executing-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('awaiting-data-highlight');\r\n\t\t\t\t\t\tincomingEdges.addClass(['success-highlight', 'transitioning']);\r\n\t\t\t\t\t\tsetTimeout(() => incomingEdges.removeClass('transitioning'), 500)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase NodeStatuses.SUCCESS:\r\n\t\t\t\t\t\tmatchingNode.addClass('success-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('failure-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('executing-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('awaiting-data-highlight');\r\n\t\t\t\t\t\t//incomingEdges.addClass('success-highlight');\r\n\t\t\t\t\t\t//incomingEdges.removeClass('executing-highlight');\r\n\t\t\t\t\t\tif (nodeType != ActionType.CONDITION) {\r\n\t\t\t\t\t\t\toutgoingEdges.addClass(['success-highlight', 'transitioning']);\r\n\t\t\t\t\t\t\tsetTimeout(() => outgoingEdges.removeClass('transitioning'), 500)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase NodeStatuses.FAILURE:\r\n\t\t\t\t\t\tmatchingNode.removeClass('success-highlight');\r\n\t\t\t\t\t\tmatchingNode.addClass('failure-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('executing-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('awaiting-data-highlight');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase NodeStatuses.AWAITING_DATA:\r\n\t\t\t\t\t\tmatchingNode.removeClass('success-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('failure-highlight');\r\n\t\t\t\t\t\tmatchingNode.removeClass('executing-highlight');\r\n\t\t\t\t\t\tmatchingNode.addClass('awaiting-data-highlight');\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Additionally, add or update the actionstatus in our datatable.\r\n\t\tconst matchingNodeStatus = this.nodeStatuses\r\n\t\t\t\t\t\t\t\t\t   .find(as => as.execution_id === nodeStatusEvent.execution_id && as.node_id == nodeStatusEvent.node_id);\r\n\t\tif (matchingNodeStatus) {\r\n\t\t\tmatchingNodeStatus.status = nodeStatusEvent.status;\r\n\r\n\t\t\tswitch (message.type) {\r\n\t\t\t\tcase NodeStatuses.EXECUTING:\r\n\t\t\t\t\t// shouldn't happen\r\n\t\t\t\t\tmatchingNodeStatus.started_at = nodeStatusEvent.started_at;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase NodeStatuses.SUCCESS:\r\n\t\t\t\tcase NodeStatuses.FAILURE:\r\n\t\t\t\t\tmatchingNodeStatus.completed_at = nodeStatusEvent.completed_at;\r\n\t\t\t\t\tmatchingNodeStatus.result = nodeStatusEvent.result;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase NodeStatuses.AWAITING_DATA:\r\n\t\t\t\t\t// don't think anything needs to happen here\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.toastrService.warning(`Unknown Action Status SSE Type: ${message.type}.`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.recalculateRelativeTimes(matchingNodeStatus);\r\n\t\t\tthis.calculateLocalizedTimes(matchingNodeStatus);\r\n\t\t} else {\r\n\t\t\tconst newNodeStatus = nodeStatusEvent.toNewNodeStatus();\r\n\t\t\tthis.calculateLocalizedTimes(newNodeStatus);\r\n\t\t\tthis.nodeStatuses.push(newNodeStatus);\r\n\t\t}\r\n\t\t// Induce change detection by slicing array\r\n\t\tthis.nodeStatuses = this.nodeStatuses.slice();\r\n\t}\r\n\r\n\tstatusEventErrorHandler(e: any) {\r\n\t\tif (this.sseErrorTimeout) return;\r\n\t\tthis.sseErrorTimeout = setTimeout(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.playbookService.getApis();\r\n\t\t\t\tdelete this.sseErrorTimeout;\r\n\t\t\t}\r\n\t\t\tcatch(e) {\r\n\t\t\t\tif (this.eventSource && this.eventSource.close)\r\n\t\t\t\t\tthis.eventSource.close();\r\n\t\t\t\tif (this.consoleEventSource && this.consoleEventSource.close)\r\n\t\t\t\t\tthis.consoleEventSource.close();\r\n\r\n\t\t\t\tconst options = {backdrop: undefined, closeButton: false, buttons: { ok: { label: 'Reload Page' }}}\r\n\t\t\t\tthis.utils\r\n\t\t\t\t\t.alert('The server stopped responding. Reload the page to try again.', options)\r\n\t\t\t\t\t.then(() => location.reload(true))\r\n\t\t\t}\r\n\t\t}, 5 * 1000)\r\n\t}\r\n\r\n\tget selectedActionResults(): any {\r\n\t\tif (this.selectedAction) {\r\n\t\t\tconst nodeStatus = this.nodeStatuses.find(n => n.node_id == this.selectedAction.id);\r\n\t\t\tif (nodeStatus && nodeStatus.status == NodeStatuses.SUCCESS) return nodeStatus.result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the loaded workflow as it exists on the server. Will not currently execute the workflow as it stands.\r\n\t */\r\n\texecuteWorkflow(): void {\r\n\t\tif (!this.loadedWorkflow) { return; }\r\n\t\tthis.clearExecutionHighlighting();\r\n\r\n\t\tconst executionId = UUID.UUID();\r\n\t\tPromise.all([\r\n\t\t\tthis.getNodeStatusSSE(executionId),\r\n\t\t\tthis.getConsoleSSE(executionId)\r\n\t\t]).then(() => {\r\n\t\t\tthis.playbookService.addWorkflowToQueue(this.loadedWorkflow.id, executionId)\r\n\t\t\t\t.then((workflowStatus: WorkflowStatus) => {\r\n\t\t\t\t\tthis.toastrService.success(`Starting <b>${this.loadedWorkflow.name}</b>`)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => this.toastrService.error(`Error starting execution of ${this.loadedWorkflow.name}: ${e.message}`));\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a workflow from a given playbook / workflow name pair and calls function to set up graph.\r\n\t * @param playbook Playbook to load\r\n\t * @param workflow Workflow to load\r\n\t */\r\n\tloadWorkflow(workflow: Workflow): void {\r\n\t\tthis.closeWorkflow();\r\n\r\n\t\tif (workflow.id) {\r\n\t\t\tthis.playbookService.loadWorkflow(workflow.id)\r\n\t\t\t\t.then(loadedWorkflow => {\r\n\t\t\t\t\tthis.loadedWorkflow = loadedWorkflow;\r\n\t\t\t\t\tthis.setupGraph();\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => this.toastrService.error(`Error loading workflow \"${workflow.name}\": ${e.message}`));\r\n\t\t} else {\r\n\t\t\tthis.loadedWorkflow = workflow;\r\n\t\t\tthis.setupGraph();\r\n\t\t}\r\n\t}\r\n\r\n\treturnToWorkflows() {\r\n\t\tthis.utils.confirm('Are you sure you? Any unsaved changes will be lost!').then(() => {\r\n\t\t\tthis.router.navigateByUrl(`/workflows`);\r\n\t\t})\r\n\t\treturn false;\r\n\t}\r\n\r\n\trouteToWorkflow(workflow: Workflow): void {\r\n\t\tthis.router.navigateByUrl(`/workflows/${ workflow.id }`);\r\n\t}\r\n\r\n\tsetupGraph(options: any = {}): void {\r\n\t\t// Convert our selection arrays to a string\r\n\t\tif (!this.loadedWorkflow.actions) { this.loadedWorkflow.actions = []; }\r\n\r\n\t\t// Refresh the console log so that it displays correctly after being hidden\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (this.consoleArea && this.consoleArea.codeMirror) this.consoleArea.codeMirror.refresh();\r\n\t\t});\r\n\r\n\t\tconst defaults = {\r\n\t\t\tcontainer: document.getElementById('cy'),\r\n\t\t\tboxSelectionEnabled: false,\r\n\t\t\tautounselectify: false,\r\n\t\t\twheelSensitivity: 0.1,\r\n\t\t\tlayout: { name: 'preset' },\r\n\t\t\tstyle: [\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'content': 'data(label)',\r\n\t\t\t\t\t\t'text-valign': 'center',\r\n\t\t\t\t\t\t'text-halign': 'center',\r\n\t\t\t\t\t\t'shape': 'roundrectangle',\r\n\t\t\t\t\t\t'background-color': '#bbb',\r\n\t\t\t\t\t\t'selection-box-color': 'red',\r\n\t\t\t\t\t\t'font-family': 'Segoe UI, Tahoma, Geneva, Verdana, sans-serif, sans-serif',\r\n\t\t\t\t\t\t'font-weight': 'lighter',\r\n\t\t\t\t\t\t'font-size': '15px',\r\n\t\t\t\t\t\t'width': 'label',\r\n\t\t\t\t\t\t'height': 'label',\r\n\t\t\t\t\t\t'padding': '10px'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: `node[type=\"${ ActionType.ACTION }\"]`,\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'shape': 'roundrectangle',\r\n\t\t\t\t\t\t'padding': '15px'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: `node[type=\"${ ActionType.CONDITION }\"]`,\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'shape': 'diamond',\r\n\t\t\t\t\t\t'padding': '25px'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: `node[type=\"${ ActionType.TRIGGER }\"]`,\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'shape': 'polygon',\r\n\t\t\t\t\t\t'shape-polygon-points': '-1, -1, 1, -1, 0, 1',\r\n\t\t\t\t\t\t'text-margin-y': '-15px',\r\n\t\t\t\t\t\t'padding': '25px'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: `node[type=\"${ ActionType.TRANSFORM }\"]`,\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'shape': 'ellipse',\r\n\t\t\t\t\t\t'padding': '20px'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node[type=\"eventAction\"]',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'shape': 'star',\r\n\t\t\t\t\t\t'background-color': '#edbd21',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node[?isStartNode]',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'border-width': '3px',\r\n\t\t\t\t\t\t'border-color': '#991818',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: `node[?isParallelized]`,\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'ghost' : 'yes',\r\n\t\t\t\t\t\t'ghost-offset-x' : '7px',\r\n\t\t\t\t\t\t'ghost-offset-y': '-7px',\r\n\t\t\t\t\t\t'ghost-opacity' : '.7'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node[?hasErrors]',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'color': '#991818',\r\n\t\t\t\t\t\t'font-style': 'italic',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node:selected',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'background-color': '#77b0d0',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.success-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'background-color': '#399645',\r\n\t\t\t\t\t\t'transition-property': 'background-color',\r\n\t\t\t\t\t\t'transition-duration': '0.5s',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.failure-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'background-color': '#8e3530',\r\n\t\t\t\t\t\t'transition-property': 'background-color',\r\n\t\t\t\t\t\t'transition-duration': '0.5s',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.executing-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'background-color': '#ffef47',\r\n\t\t\t\t\t\t'transition-property': 'background-color',\r\n\t\t\t\t\t\t'transition-duration': '0.25s',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.awaiting-data-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'background-color': '#f4ad42',\r\n\t\t\t\t\t\t'transition-property': 'background-color',\r\n\t\t\t\t\t\t'transition-duration': '0.5s',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '$node > node',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'padding-top': '10px',\r\n\t\t\t\t\t\t'padding-left': '10px',\r\n\t\t\t\t\t\t'padding-bottom': '10px',\r\n\t\t\t\t\t\t'padding-right': '10px',\r\n\t\t\t\t\t\t'text-valign': 'top',\r\n\t\t\t\t\t\t'text-halign': 'center',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'target-arrow-shape': 'triangle',\r\n\t\t\t\t\t\t'curve-style': 'bezier',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge.transitioning',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'transition-property': 'line-color, width',\r\n\t\t\t\t\t\t'transition-duration': '0.5s',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge.executing-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'width': '5px',\r\n\t\t\t\t\t\t'target-arrow-color': '#ffef47',\r\n\t\t\t\t\t\t'line-color': '#ffef47',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge.success-highlight',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'width': '5px',\r\n\t\t\t\t\t\t'target-arrow-color': '#399645',\r\n\t\t\t\t\t\t'line-color': '#399645',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge[?hasErrors]',\r\n\t\t\t\t\tcss: {\r\n\t\t\t\t\t\t'target-arrow-color': '#991818',\r\n\t\t\t\t\t\t'line-color': '#991818',\r\n\t\t\t\t\t\t'line-style': 'dashed'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.eh-handle',\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t'background-color': '#337ab7',\r\n\t\t\t\t\t\t'width': '1',\r\n\t\t\t\t\t\t'height': '1',\r\n\t\t\t\t\t\t'shape': 'ellipse',\r\n\t\t\t\t\t\t'overlay-opacity': '0',\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.eh-source',\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t'border-width': '3',\r\n\t\t\t\t\t\t'border-color': '#337ab7'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.eh-target',\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t'border-width': '3',\r\n\t\t\t\t\t\t'border-color': '#337ab7'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: '.eh-preview, .eh-ghost-edge',\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t'background-color': '#337ab7',\r\n\t\t\t\t\t\t'line-color': '#337ab7',\r\n\t\t\t\t\t\t'target-arrow-color': '#337ab7',\r\n\t\t\t\t\t\t'source-arrow-color': '#337ab7'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\t// Create the Cytoscape graph\r\n\t\tcytoscape.warnings(false);\r\n\r\n\t\t// Create new elements before recreating the new graph\r\n\t\tconst elements = this.getGraphElements();\r\n\r\n\t\tthis.cy = cytoscape(Object.assign({}, defaults, options));\r\n\r\n\t\t// Enable various Cytoscape extensions\r\n\t\t// Undo/Redo extension\r\n\t\tthis.ur = this.cy.undoRedo({});\r\n\r\n\t\tthis.ur.action('add-walkoff-node', (args) => {\r\n\t\t\targs.addedNode = this.insertNode(args);\r\n\t\t\treturn args;\r\n\t\t}, (args) => {\r\n\t\t\tthis.cy.elements(`[_id=\"${ args.addedNode.data._id }\"]`).remove();\r\n\t\t\treturn args;\r\n\t\t})\r\n\r\n\t\t// Panzoom extension\r\n\t\tthis.cy.panzoom({});\r\n\r\n\t\t// Extension for drawing edges\r\n\t\tthis.edgeHandler = this.cy.edgehandles({\r\n\t\t\thandleNodes: (el) => el.isNode() && !el.hasClass('just-created'),\r\n\t\t\tpreview: false,\r\n\t\t\ttoggleOffOnLeave: true,\r\n\t\t\tcomplete: (sourceNode: any, targetNodes: any[], addedEntities: any[]) => {\r\n\t\t\t\tif (!this.loadedWorkflow.branches) { this.loadedWorkflow.branches = []; }\r\n\r\n\t\t\t\t// The edge handles extension is not integrated into the undo/redo extension.\r\n\t\t\t\t// So in order that adding edges is contained in the undo stack,\r\n\t\t\t\t// remove the edge just added and add back in again using the undo/redo\r\n\t\t\t\t// extension. Also add info to edge which is displayed when user clicks on it.\r\n\t\t\t\tfor (let i = 0; i < targetNodes.length; i++) {\r\n\t\t\t\t\tconst tempId = UUID.UUID();\r\n\t\t\t\t\tconst sourceId: string = sourceNode.data('_id');\r\n\t\t\t\t\tconst destinationId: string = targetNodes[i].data('_id');\r\n\r\n\t\t\t\t\taddedEntities[i].data({\r\n\t\t\t\t\t\t_id: tempId,\r\n\t\t\t\t\t\t// We set temp because this actually triggers onEdgeRemove since we manually remove and re-add the edge later\r\n\t\t\t\t\t\t// There is logic in onEdgeRemove to bypass that logic if temp is true\r\n\t\t\t\t\t\ttemp: true,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//If we attempt to draw an edge that already exists, please remove it and take no further action\r\n\t\t\t\t\tif (this.loadedWorkflow.branches.find(b => b.source_id === sourceId && b.destination_id === destinationId)) {\r\n\t\t\t\t\t\tthis.cy.remove(addedEntities);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst sourceAction = this.loadedWorkflow.nodes.find(a => a.id === sourceId);\r\n\t\t\t\t\tconst sourceActionApi = this._getAction(sourceAction.app_name, sourceAction.app_version, sourceAction.action_name);\r\n\r\n\t\t\t\t\t// Get our default status either from the default return if specified, or the first return status\r\n\t\t\t\t\tlet defaultStatus = '';\r\n\t\t\t\t\tif (sourceActionApi.default_return) {\r\n\t\t\t\t\t\tdefaultStatus = sourceActionApi.default_return;\r\n\t\t\t\t\t} else if (sourceActionApi.returns && sourceActionApi.returns.length) {\r\n\t\t\t\t\t\tdefaultStatus = sourceActionApi.returns[0].status;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newBranch = new Branch();\r\n\r\n\t\t\t\t\tnewBranch.id = tempId;\r\n\t\t\t\t\tnewBranch.source_id = sourceId;\r\n\t\t\t\t\tnewBranch.destination_id = destinationId;\r\n\t\t\t\t\tnewBranch.status = defaultStatus;\r\n\t\t\t\t\tnewBranch.priority = 1;\r\n\r\n\t\t\t\t\t// Add our branch to the actual loadedWorkflow model\r\n\t\t\t\t\tthis.loadedWorkflow.branches.push(newBranch);\r\n\r\n\t\t\t\t\ttargetNodes[i].addClass('just-created');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.cy.remove(addedEntities);\r\n\r\n\t\t\t\t// Get rid of our temp flag\r\n\t\t\t\taddedEntities.forEach(ae => ae.data('temp', false));\r\n\r\n\t\t\t\t// Re-add with the undo-redo extension.\r\n\t\t\t\tthis.ur.do('add', addedEntities); // Added back in using undo/redo extension\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// Extension for copy and paste\r\n\t\tthis.cy.clipboard();\r\n\r\n\t\t//Extension for grid and guidelines\r\n\t\tthis.cy.gridGuide({\r\n\t\t\tsnapToGridDuringDrag: true,\r\n\t\t\tzoomDash: true,\r\n\t\t\tpanGrid: true,\r\n\t\t\tcenterToEdgeAlignment: true,\r\n\t\t\tdistributionGuidelines: true, // Distribution guidelines\r\n\t\t\tgeometricGuideline: true, // Geometric guidelines\r\n\t\t\t// Guidelines\r\n\t\t\tguidelinesStackOrder: 4, // z-index of guidelines\r\n\t\t\tguidelinesTolerance: 2.00, // Tolerance distance for rendered positions of nodes' interaction.\r\n\t\t\tguidelinesStyle: { // Set ctx properties of line. Properties are here:\r\n\t\t\t\tstrokeStyle: '#8b7d6b', // color of geometric guidelines\r\n\t\t\t\tgeometricGuidelineRange: 400, // range of geometric guidelines\r\n\t\t\t\trange: 100, // max range of distribution guidelines\r\n\t\t\t\tminDistRange: 10, // min range for distribution guidelines\r\n\t\t\t\tdistGuidelineOffset: 10, // shift amount of distribution guidelines\r\n\t\t\t\thorizontalDistColor: '#ff0000', // color of horizontal distribution alignment\r\n\t\t\t\tverticalDistColor: '#00ff00', // color of vertical distribution alignment\r\n\t\t\t\tinitPosAlignmentColor: '#0000ff', // color of alignment to initial mouse location\r\n\t\t\t\tlineDash: [0, 0], // line style of geometric guidelines\r\n\t\t\t\thorizontalDistLine: [0, 0], // line style of horizontal distribution guidelines\r\n\t\t\t\tverticalDistLine: [0, 0], // line style of vertical distribution guidelines\r\n\t\t\t\tinitPosAlignmentLine: [0, 0], // line style of alignment to initial mouse position\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.cy.add(elements);\r\n\r\n\t\tif(!options.zoom || !options.pan) setImmediate(() => this.cy.fit(null, 50));\r\n\r\n\t\tthis.setStartNode(this.loadedWorkflow.start);\r\n\r\n\t\t// Note: these bindings need to use arrow notation\r\n\t\t// to actually be able to use 'this' to refer to the PlaybookComponent.\r\n\t\t// Configure handler when user clicks on node or edge\r\n\t\tthis.cy.on('select', 'node', (e: any) => this.onNodeSelect(e));\r\n\t\tthis.cy.on('select', 'edge', (e: any) => this.onEdgeSelect(e));\r\n\t\tthis.cy.on('unselect', (e: any) => this.onUnselect(e));\r\n\r\n\t\t// Configure handlers when nodes/edges are added or removed\r\n\t\tthis.cy.on('add', 'node', (e: any) => this.onNodeAdded(e));\r\n\t\tthis.cy.on('free', 'node', (e: any) => this.onNodeMoved(e));\r\n\t\tthis.cy.on('remove', 'node', (e: any) => this.onNodeRemoved(e));\r\n\t\tthis.cy.on('remove', 'edge', (e: any) => this.onEdgeRemove(e));\r\n\r\n\t\t// Allow right clicking to create an edge\r\n\t\tthis.cy.on('mouseover mouseout', 'node', (e: any) => e.target.removeClass('just-created'));\r\n\t\tthis.cy.on('cxttapstart', 'node', (e: any) => this.edgeHandler.start(e.target));\r\n\t\tthis.cy.on('cxttapend', 'node', (e: any) => this.edgeHandler.stop());\r\n\t\tthis.cy.on('cxtdragover', 'node', (e: any) => this.edgeHandler.preview(e.target));\r\n\t\tthis.cy.on('cxtdragout', 'node', (e: any) => {\r\n\t\t\tif (this.edgeHandler.options.snap && e.target.same(this.edgeHandler.targetNode)) {\r\n\t\t\t\t// then keep the preview\r\n\t\t\t} else {\r\n\t\t\t\tthis.edgeHandler.unpreview(e.target);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// this.cyJsonData = JSON.stringify(this.loadedWorkflow, null, 2);\r\n\t}\r\n\r\n\t// Load the data into the graph\r\n\tgetGraphElements() {\r\n\t\t// If a node does not have a label field, set it to\r\n\t\t// the action. The label is what is displayed in the graph.\r\n\t\tconst edges = this.loadedWorkflow.branches.map(branch => {\r\n\t\t\tconst edge: any = { group: 'edges' };\r\n\t\t\tedge.data = {\r\n\t\t\t\tid: branch.id,\r\n\t\t\t\t_id: branch.id,\r\n\t\t\t\tsource: branch.source_id,\r\n\t\t\t\ttarget: branch.destination_id,\r\n\t\t\t\thasErrors: branch.has_errors\r\n\t\t\t};\r\n\t\t\treturn edge;\r\n\t\t});\r\n\r\n\t\tconst nodes = this.loadedWorkflow.nodes.map(action => {\r\n\t\t\tconst node: any = { group: 'nodes', position: this.utils.cloneDeep(action.position) };\r\n\t\t\tnode.data = {\r\n\t\t\t\tid: action.id,\r\n\t\t\t\t_id: action.id,\r\n\t\t\t\tlabel: action.name,\r\n\t\t\t\tisStartNode: action.id === this.loadedWorkflow.start,\r\n\t\t\t\tisParallelized: action instanceof Action && action.parallelized,\r\n\t\t\t\thasErrors: action.has_errors,\r\n\t\t\t\ttype: action.action_type\r\n\t\t\t};\r\n\t\t\treturn node;\r\n\t\t});\r\n\r\n\t\tconst elements = [].concat(nodes, edges);\r\n\t\tconst oldElements = (this.cy) ? this.cy.elements().jsons() : [];\r\n\t\toldElements.filter(old => old.classes).forEach(old => {\r\n\t\t\telements\r\n\t\t\t\t.filter(el => el.data.id == old.data.id)\r\n\t\t\t\t.forEach(el => el.classes = old.classes.replace('transitioning', ''))\r\n\t\t})\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the active workflow and clears all relevant variables.\r\n\t */\r\n\tcloseWorkflow(): void {\r\n\t\t// this.loadedPlaybook = null;\r\n\t\tthis.loadedWorkflow = null;\r\n\t\tthis.selectedBranchParams = null;\r\n\t\tthis.selectedAction = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers the save action based on the editor option selected.\r\n\t */\r\n\tsave(): void {\r\n\t\tthis.saveWorkflow(this.cy.elements().jsons());\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the workflow loaded in the editor.\r\n\t * Updates the graph positions from the cytoscape model and sanitizes data beforehand.\r\n\t * @param cyData Nodes and edges from the cytoscape graph. Only really used to grab the new positions of nodes.\r\n\t */\r\n\tsaveWorkflow(cyData: any[]): void {\r\n\t\t// Unselect anything selected first (will trigger onUnselect)\r\n\t\tthis.cy.$(':selected').unselect();\r\n\r\n\t\t// Clone the loadedWorkflow first, so we don't change the parameters\r\n\t\t// in the editor when converting it to the format the backend expects.\r\n\t\tconst workflowToSave: Workflow = classToClass(this.loadedWorkflow, { ignoreDecorators: true });\r\n\r\n\t\tif (!workflowToSave.start) {\r\n\t\t\tthis.toastrService.warning('Workflow cannot be saved without a starting action.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Go through our workflow and update some parameters\r\n\t\tworkflowToSave.nodes.forEach(action => {\r\n\t\t\t// Set action name if empty\r\n\t\t\tif (!action.name) action.name = workflowToSave.getNextActionName(action.action_name);\r\n\r\n\t\t\t// Set the new cytoscape positions on our loadedworkflow\r\n\t\t\taction.position = cyData.find(cyAction => cyAction.data._id === action.id).position;\r\n\r\n\t\t\t// Properly sanitize arguments through the tree\r\n\t\t\tif (action.arguments) this._sanitizeArgumentsForSave(action, workflowToSave);\r\n\t\t});\r\n\r\n\r\n\t\tworkflowToSave.branches.forEach(branch => {\r\n\t\t\tthis._sanitizeExpressionAndChildren(branch.condition);\r\n\t\t});\r\n\r\n\t\tif (this.loadedWorkflow.id) {\r\n\t\t\tthis.playbookService.saveWorkflow(workflowToSave).then(savedWorkflow => {\r\n\t\t\t\tthis.loadedWorkflow = savedWorkflow;\r\n\t\t\t\tthis.setupGraph();\r\n\t\t\t\tthis.toastrService.success(`Saved <b>${ savedWorkflow.name }</b>`);\r\n\t\t\t}).catch(e => this.toastrService.error(`Error saving workflow ${workflowToSave.name}: ${e.message}`));\r\n\t\t} else {\r\n\t\t\tthis.playbookService.newWorkflow(workflowToSave).then(savedWorkflow => {\r\n\t\t\t\t//this.loadedWorkflow = savedWorkflow;\r\n\t\t\t\t//this.setupGraph()\r\n\t\t\t\tthis.toastrService.success(`Saved <b>${ savedWorkflow.name }</b>`);\r\n\t\t\t\tthis.router.navigateByUrl(`/workflows/${ savedWorkflow.id }`);\r\n\t\t\t}).catch(e => this.toastrService.error(`Error saving workflow ${workflowToSave.name}: ${e.message}`));\r\n\t\t}\r\n\r\n\t\tthis.clearExecutionResults();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of all the loaded playbooks along with their workflows.\r\n\t */\r\n\tgetPlaybooksWithWorkflows(): void {\r\n\t\tthis.playbookService.getWorkflows()\r\n\t\t\t.then(workflows => {\r\n\t\t\t\tthis.workflows = workflows;\r\n\t\t\t\tthis.activeRoute.params.subscribe(params => {\r\n\t\t\t\t\tif (params.workflowId) {\r\n\t\t\t\t\t\tthis.playbookService.loadWorkflow(params.workflowId)\r\n\t\t\t\t\t\t\t.then(workflow => this.loadWorkflow(workflow))\r\n\t\t\t\t\t\t\t.catch(e => this.router.navigateByUrl(`/workflows`))\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet workflowToCreate: Workflow = this.playbookService.workflowToCreate;\r\n\t\t\t\t\t\tif (!workflowToCreate) {\r\n\t\t\t\t\t\t\treturn this.router.navigateByUrl(`/workflows`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.loadWorkflow(workflowToCreate);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t}\r\n\r\n\t_sanitizeExpressionAndChildren(expression: ConditionalExpression): void {\r\n\t\tif (!expression) { return; }\r\n\r\n\t\tif (expression.conditions && expression.conditions.length) {\r\n\t\t\texpression.conditions.forEach(condition => {\r\n\t\t\t\t//this._sanitizeArgumentsForSave(condition.arguments);\r\n\r\n\t\t\t\t// condition.transforms.forEach(transform => {\r\n\t\t\t\t// \tthis._sanitizeArgumentsForSave(transform.arguments);\r\n\t\t\t\t// });\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (expression.child_expressions && expression.child_expressions.length) {\r\n\t\t\texpression.child_expressions.forEach(childExpr => {\r\n\t\t\t\tchildExpr.conditions.forEach(condition => {\r\n\t\t\t\t\t//this._sanitizeArgumentsForSave(condition.arguments);\r\n\r\n\t\t\t\t\t// condition.transforms.forEach(transform => {\r\n\t\t\t\t\t// \tthis._sanitizeArgumentsForSave(transform.arguments);\r\n\t\t\t\t\t// });\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._sanitizeExpressionAndChildren(childExpr);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitizes an argument so we don't have bad data on save, such as a value when reference is specified.\r\n\t * @param argument The argument to sanitize\r\n\t */\r\n\t_sanitizeArgumentsForSave(action: WorkflowNode, workflow: Workflow): void {\r\n\t\tconst args = action.arguments;\r\n\r\n\t\t// Filter out any arguments that are blank, essentially\r\n\t\tconst idsToRemove: number[] = [];\r\n\t\tfor (const argument of args) {\r\n\t\t\t// First trim any string inputs for sanitation and so we can check against ''\r\n\t\t\tif (typeof (argument.value) === 'string') { argument.value = argument.value.trim(); }\r\n\r\n\t\t\t// If value and reference are blank, add this argument's ID in the array to the list\r\n\t\t\t// Add them in reverse so we don't have problems with the IDs sliding around on the splice\r\n\t\t\tif (!argument.value && argument.value !== false) {\r\n\t\t\t\tidsToRemove.unshift(args.indexOf(argument));\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure reference is valid for this action\r\n\t\t\tif (argument.variant == Variant.ACTION_RESULT) {\r\n\t\t\t\tconst validReferences = workflow.getPreviousActions(action).map(a => a.id);\r\n\t\t\t\tif (!validReferences.includes(argument.value)) {\r\n\t\t\t\t\tidsToRemove.unshift(args.indexOf(argument));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Actually splice out all the args\r\n\t\tfor (const id of idsToRemove) {\r\n\t\t\targs.splice(id, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a new conditional expression for a given action.\r\n\t * @param action Action to specify the trigger for\r\n\t */\r\n\t// specifyTrigger(action: Action): void {\r\n\t// \tif (action.trigger) { return; }\r\n\t// \taction.trigger = new ConditionalExpression();\r\n\t// }\r\n\r\n\t/**\r\n\t * Deletes the conditional expression for a given action.\r\n\t * @param action Action to remove the trigger for\r\n\t */\r\n\t// removeTrigger(action: Action): void {\r\n\t// \tdelete action.trigger;\r\n\t// }\r\n\r\n\t/**\r\n\t * Specifies a new conditional expression for a given action.\r\n\t * @param branch Branch to specify the trigger for\r\n\t */\r\n\tspecifyCondition(branch: Branch): void {\r\n\t\tif (branch.condition) { return; }\r\n\t\tbranch.condition = new ConditionalExpression();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a new conditional expression for a given branch.\r\n\t * @param branch Branch to specify the trigger for\r\n\t */\r\n\tremoveCondition(branch: Branch): void {\r\n\t\tdelete branch.condition;\r\n\t}\r\n\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/// Cytoscape functions\r\n\t///------------------------------------------------------------------------------------------------------\r\n\r\n\t/**\r\n\t * This function displays a form next to the graph for editing a node when clicked upon\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonNodeSelect(e: any): void {\r\n\t\tthis.selectedBranchParams = null;\r\n\r\n\t\tconst data = e.target.data();\r\n\r\n\t\t// Unselect anything else we might have selected (via ctrl+click basically)\r\n\t\tthis.cy.elements(`[_id!=\"${data._id}\"]`).unselect();\r\n\r\n\t\tconst action = this.loadedWorkflow.nodes.find(a => a.id === data._id);\r\n\t\tif (!action) { return; }\r\n\t\tconst actionApi = this._getAction(action.app_name, action.app_version, action.action_name);\r\n\r\n\t\tconst queryPromises: Array<Promise<any>> = [];\r\n\r\n\t\tif (!this.users &&\r\n\t\t\t(actionApi.parameters.findIndex(p => p.schema.type === 'user') > -1 ||\r\n\t\t\tactionApi.parameters.findIndex(p => p.schema.items && p.schema.items.type === 'user') > -1)) {\r\n\t\t\tthis.waitingOnData = true;\r\n\t\t\tqueryPromises.push(this.playbookService.getUsers().then(users => this.users = users));\r\n\t\t}\r\n\t\tif (!this.roles &&\r\n\t\t\t(actionApi.parameters.findIndex(p => p.schema.type === 'role') > -1 ||\r\n\t\t\tactionApi.parameters.findIndex(p => p.schema.items && p.schema.items.type === 'role') > -1)) {\r\n\t\t\tthis.waitingOnData = true;\r\n\t\t\tqueryPromises.push(this.playbookService.getRoles().then(roles => this.roles = roles));\r\n\t\t}\r\n\r\n\t\tif (queryPromises.length) {\r\n\t\t\tPromise.all(queryPromises)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.waitingOnData = false;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tthis.waitingOnData = false;\r\n\t\t\t\t\tthis.toastrService.error(`Error grabbing users or roles: ${error.message}`);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.selectedAction = action;\r\n\t\tthis.selectedActionApi = actionApi;\r\n\r\n\t\t// TODO: maybe scope out relevant globals by action, but for now we're just only scoping out by app\r\n\t\tthis.relevantGlobals = this.globals; //.filter(d => d.app_name === this.selectedAction.app_name);\r\n\t}\r\n\r\n\t/**\r\n\t * This function displays a form next to the graph for editing an edge when clicked upon.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonEdgeSelect(e: any): void {\r\n\t\tthis.selectedAction = null;\r\n\t\tthis.selectedBranchParams = null;\r\n\r\n\t\tconst id: string = e.target.data('_id');\r\n\r\n\t\t// Unselect anything else we might have selected (via ctrl+click basically)\r\n\t\tthis.cy.elements(`[_id!=\"${id}\"]`).unselect();\r\n\r\n\t\tconst branch = this.loadedWorkflow.branches.find(b => b.id === id);\r\n\t\tconst sourceAction = this.loadedWorkflow.nodes.find(a => a.id === branch.source_id);\r\n\r\n\t\tthis.selectedBranchParams = {\r\n\t\t\tbranch,\r\n\t\t\treturnTypes: this._getAction(sourceAction.app_name, sourceAction.app_version, sourceAction.action_name).returns,\r\n\t\t\tappName: sourceAction.app_name,\r\n\t\t\tactionName: sourceAction.action_name,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * This function unselects any selected nodes/edges and updates the label if necessary.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonUnselect(event: any): void {\r\n\t\t// Update our labels if possible\r\n\t\tif (this.selectedAction) {\r\n\t\t\tthis.cy.elements(`node[_id=\"${this.selectedAction.id}\"]`).data('label', this.selectedAction.name);\r\n\t\t}\r\n\r\n\t\tif (!this.cy.$(':selected').length) {\r\n\t\t\tthis.selectedAction = null;\r\n\t\t\tthis.selectedBranchParams = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This function checks when an edge is removed and removes branches as appropriate.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonEdgeRemove(event: any): void {\r\n\t\tconst edgeData = event.target.data();\r\n\t\t// Do nothing if this is a temporary edge\r\n\t\t// (edgehandles do not have paramters, and we mark temp edges on edgehandle completion)\r\n\t\tif (!edgeData || edgeData.temp) { return; }\r\n\r\n\t\tconst sourceId: string = edgeData.source;\r\n\t\tconst destinationId: string = edgeData.target;\r\n\r\n\t\t// Filter out the one that matches\r\n\t\tthis.loadedWorkflow.branches = this.loadedWorkflow.branches\r\n\t\t\t.filter(b => !(b.source_id === sourceId && b.destination_id === destinationId));\r\n\t}\r\n\r\n\t/**\r\n\t * This function checks when a node is added and sets start node if no other nodes exist.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonNodeAdded(event: any): void {\r\n\t\tconst node = event.target;\r\n\r\n\t\t// If the number of nodes in the graph is one, set the start node to it.\r\n\t\tif (node.isNode() && this.cy.nodes().size() === 1) { this.setStartNode(node.data('_id')); }\r\n\t}\r\n\r\n\t/**\r\n\t * This function checks when a node is added and sets start node if no other nodes exist.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonNodeMoved(event: any): void {\r\n\t\tconst node = event.target.json();\r\n\t\tthis.loadedWorkflow.nodes.find(n => n.id == node.data.id).position = node.position;\r\n\t}\r\n\r\n\t/**\r\n\t * This function fires when a node is removed. If the node was the start node, it sets it to a new root node.\r\n\t * It also removes the corresponding action from the workflow.\r\n\t * @param e JS Event fired\r\n\t */\r\n\tonNodeRemoved(event: any): void {\r\n\t\tconst node = event.target;\r\n\t\tconst data = node.data();\r\n\r\n\t\t// If the start node was deleted, set it to one of the roots of the graph\r\n\t\tif (data && node.isNode() && this.loadedWorkflow.start === data._id) { this.setStartNode(null); }\r\n\t\tif (this.selectedAction && this.selectedAction.id === data._id) { this.selectedAction = null; }\r\n\r\n\t\t// Delete the action from the workflow and delete any branches that reference this action\r\n\t\tthis.loadedWorkflow.removeNode(data._id);\r\n\t}\r\n\r\n\t/**\r\n\t * This function fires when an action is dropped onto the graph and fires the insertNode function.\r\n\t * @param e JS Event fired\r\n\t */\r\n\thandleDropEvent(e: any): void {\r\n\t\tif (this.cy === null) { return; }\r\n\r\n\t\tconst appName: string = e.dragData.appName;\r\n\t\tconst actionApi: ActionApi = e.dragData.actionApi;\r\n\r\n\t\t// The following coordinates is where the user dropped relative to the\r\n\t\t// top-left of the graph\r\n\t\tconst dropPosition: GraphPosition = plainToClass(GraphPosition, {\r\n\t\t\tx: e.mouseEvent.layerX,\r\n\t\t\ty: e.mouseEvent.layerY,\r\n\t\t});\r\n\r\n\t\tthis.ur.do('add-walkoff-node', {\r\n\t\t\tappName: appName,\r\n\t\t\tappVersion: actionApi.app_version,\r\n\t\t\tactionName: actionApi.name,\r\n\t\t\tlocation: dropPosition,\r\n\t\t\tshouldUseRenderedPosition: true\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * This function is fired when an action on the left-hand list is double clicked.\r\n\t * It drops a new node of that action in the center of the visible graph.\r\n\t * @param appName App name the action resides under\r\n\t * @param actionName Name of the action that was double clicked\r\n\t */\r\n\thandleDoubleClickEvent(actionApi: ActionApi): void {\r\n\t\tif (this.cy === null) { return; }\r\n\r\n\t\tconst extent = this.cy.extent();\r\n\r\n\t\tconst centerGraphPosition = plainToClass(GraphPosition, { x: this.avg(extent.x1, extent.x2), y: this.avg(extent.y1, extent.y2) });\r\n\r\n\t\tthis.ur.do('add-walkoff-node', {\r\n\t\t\tappName: actionApi.app_name,\r\n\t\t\tappVersion: actionApi.app_version,\r\n\t\t\tactionName: actionApi.name,\r\n\t\t\tlocation: centerGraphPosition,\r\n\t\t\tshouldUseRenderedPosition: false\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Simple average function to get the avg. of 2 numbers.\r\n\t * @param a 1st number\r\n\t * @param b 2nd number\r\n\t */\r\n\tavg(a: number, b: number): number {\r\n\t\treturn (a + b) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts node into the graph and adds a corresponding action to the loadedworkflow.\r\n\t * @param appName App name the action resides under\r\n\t * @param actionName Name of the action to add\r\n\t * @param location Graph Position, where to create the node\r\n\t * @param shouldUseRenderedPosition Whether or not to use rendered or \"real\" graph position\r\n\t */\r\n\tinsertNode({appName, appVersion, actionName, location, shouldUseRenderedPosition, firstTime, addedNode}) {\r\n\t\t// Grab a new ID for both the ID of the node and the ID of the action in the workflow\r\n\t\tconst newActionUuid = (firstTime) ? UUID.UUID() : addedNode.data._id;\r\n\r\n\t\tconst args: Argument[] = [];\r\n\t\tconst actionApi = this._getAction(appName, appVersion, actionName);\r\n\r\n\t\t// TODO: might be able to remove this entirely\r\n\t\t// due to the argument component auto-initializing default values\r\n\t\tif (actionApi && actionApi.parameters) {\r\n\t\t\tactionApi.parameters.forEach((parameter) => {\r\n\t\t\t\targs.push(this.getDefaultArgument(parameter));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst actionType = this._getAction(appName, appVersion, actionName).node_type;\r\n\t\tconst uniqueActionName = this.loadedWorkflow.getNextActionName(actionName);\r\n\r\n\t\tlet newNode: WorkflowNode;\r\n\t\tswitch(actionType) {\r\n\t\t\tcase ActionType.CONDITION:\r\n\t\t\t\tnewNode = new Condition();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ActionType.TRIGGER:\r\n\t\t\t\tnewNode = new Trigger();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ActionType.TRANSFORM:\r\n\t\t\t\tnewNode = new Transform();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnewNode = new Action();\r\n\t\t}\r\n\r\n\t\tnewNode.id = newActionUuid;\r\n\t\tnewNode.name = uniqueActionName;\r\n\t\tnewNode.app_name = appName;\r\n\t\tnewNode.app_version = appVersion;\r\n\t\tnewNode.action_name = actionName;\r\n\t\tnewNode.arguments = args;\r\n\t\tnewNode.position = location;\r\n\t\tthis.loadedWorkflow.addNode(newNode);\r\n\r\n\t\t// Add the node with the new ID to the graph in the location dropped into by the mouse.\r\n\t\tconst nodeToBeAdded = {\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {\r\n\t\t\t\tid: newActionUuid,\r\n\t\t\t\t_id: newActionUuid,\r\n\t\t\t\tlabel: uniqueActionName,\r\n\t\t\t\ttype: actionType\r\n\t\t\t},\r\n\t\t\trenderedPosition: null as GraphPosition,\r\n\t\t\tposition: null as GraphPosition,\r\n\t\t};\r\n\r\n\t\tif (shouldUseRenderedPosition) {\r\n\t\t\tnodeToBeAdded.renderedPosition = location;\r\n\t\t} else { nodeToBeAdded.position = location; }\r\n\r\n\t\t//this.ur.do('add', nodeToBeAdded);\r\n\t\tthis.cy.add(nodeToBeAdded);\r\n\r\n\t\treturn nodeToBeAdded;\r\n\t}\r\n\r\n\t// TODO: update this to properly \"cut\" actions from the loadedWorkflow.\r\n\t/**\r\n\t * Cytoscape cut method.\r\n\t */\r\n\t// cut(): void {\r\n\t// \tconst selecteds = this.cy.$(':selected');\r\n\t// \tif (selecteds.length > 0) {\r\n\t// \t\tthis.cy.clipboard().copy(selecteds);\r\n\t// \t\tthis.ur.do('remove', selecteds);\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * Cytoscape copy method.\r\n\t */\r\n\tcopy(): void {\r\n\t\tthis.cy.clipboard().copy(this.cy.$(':selected'));\r\n\t}\r\n\r\n\t/**\r\n\t * Cytoscape paste method.\r\n\t */\r\n\tpaste(): void {\r\n\t\tconst newNodes = this.ur.do('paste');\r\n\r\n\t\tnewNodes.forEach((n: any) => {\r\n\t\t\t// Get a copy of the action we just copied\r\n\t\t\tconst pastedAction = this.loadedWorkflow.nodes.find(a => a.id === n.data('_id')).clone();\r\n\t\t\tconst newActionUuid = UUID.UUID();\r\n\r\n\t\t\tpastedAction.id = newActionUuid;\r\n\t\t\tpastedAction.name = this.loadedWorkflow.getNextActionName(pastedAction.action_name)\r\n\t\t\tpastedAction.arguments.forEach(argument => delete argument.id);\r\n\t\t\tthis.loadedWorkflow.addNode(pastedAction);\r\n\r\n\t\t\tn.data({\r\n\t\t\t\tid: newActionUuid,\r\n\t\t\t\t_id: newActionUuid,\r\n\t\t\t\tlabel: pastedAction.name,\r\n\t\t\t\tisStartNode: false,\r\n\t\t\t});\r\n\t\t\tn.emit('select');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Clears execution results table and execution highlighting\r\n\t */\r\n\tclearExecutionResults() {\r\n\t\tthis.clearExecutionHighlighting();\r\n\t\tthis.consoleLog = [];\r\n\t\tthis.nodeStatuses = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the red/green highlighting in the cytoscape graph.\r\n\t */\r\n\tclearExecutionHighlighting(): void {\r\n\t\tthis.cy.elements().removeClass('success-highlight failure-highlight executing-highlight transitioning');\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the start action / node to be the one matching the ID specified.\r\n\t * Not specifying a ID just grabs the first root.\r\n\t * @param start DB ID of the new start node (optional)\r\n\t */\r\n\tsetStartNode(start: string): void {\r\n\t\t// If no start was given set it to one of the root nodes\r\n\t\tif (start) {\r\n\t\t\tthis.loadedWorkflow.start = start;\r\n\t\t} else {\r\n\t\t\tconst roots = this.cy.nodes().roots();\r\n\t\t\tif (roots.size() > 0) {\r\n\t\t\t\tthis.loadedWorkflow.start = roots[0].data('_id');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clear start node highlighting of the previous start node(s)\r\n\t\tthis.cy.elements('node[?isStartNode]').data('isStartNode', false);\r\n\t\t// Apply start node highlighting to the new start node.\r\n\t\tthis.cy.elements(`node[_id=\"${ this.loadedWorkflow.start }\"]`).data('isStartNode', true);\r\n\t}\r\n\r\n\tupdateParallelizedNode(action: Action): void {\r\n\t\tthis.cy.elements(`node[_id=\"${ action.id }\"]`).data('isParallelized', action.parallelized);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all selected nodes and edges.\r\n\t */\r\n\tremoveSelectedNodes(): void {\r\n\t\tconst selecteds = this.cy.$(':selected');\r\n\t\t// Unselect the elements first to remove the parameters editor if need be\r\n\t\t// Because deleting elements doesn't unselect them for some reason\r\n\t\tthis.cy.elements(':selected').unselect();\r\n\t\tif (selecteds.length > 0) { this.ur.do('remove', selecteds); }\r\n\t}\r\n\r\n\t/**\r\n\t * Adds keyboard event bindings for cut/copy/paste/etc.\r\n\t */\r\n\t_addCytoscapeEventBindings(): void {\r\n\t\t// Handle keyboard presses on graph\r\n\t\tdocument.addEventListener('keydown', (e: any) => {\r\n\t\t\t// If we aren't \"focused\" on a body or button tag, don't do anything\r\n\t\t\t// to prevent events from being fired while in the parameters editor\r\n\t\t\tconst tagName = document.activeElement.tagName;\r\n\t\t\tif (!(tagName === 'BODY' || tagName === 'BUTTON')) { return; }\r\n\t\t\tif (this.cy === null) { return; }\r\n\r\n\t\t\tif (e.which === 46) { // Delete\r\n\t\t\t\tthis.removeSelectedNodes();\r\n\t\t\t} else if (e.ctrlKey) {\r\n\t\t\t\t//TODO: re-enable undo/redo once we restructure how branches / edges are stored\r\n\t\t\t\t// if (e.which === 90) // 'Ctrl+Z', Undo\r\n\t\t\t\t//     ur.undo();\r\n\t\t\t\t// else if (e.which === 89) // 'Ctrl+Y', Redo\r\n\t\t\t\t//     ur.redo();\r\n\t\t\t\tif (e.which === 67) {\r\n\t\t\t\t\t// Ctrl + C, Copy\r\n\t\t\t\t\tthis.copy();\r\n\t\t\t\t} else if (e.which === 86) {\r\n\t\t\t\t\t// Ctrl + V, Paste\r\n\t\t\t\t\tthis.paste();\r\n\t\t\t\t}\r\n\t\t\t\t// else if (e.which === 88) {\r\n\t\t\t\t// \t// Ctrl + X, Cut\r\n\t\t\t\t// \tthis.cut();\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (e.which == 65) { // 'Ctrl+A', Select All\r\n\t\t\t\t//     cy.elements().select();\r\n\t\t\t\t//     e.preventDefault();\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t/// Utility functions\r\n\t///------------------------------------------------------------------------------------------------------\r\n\t// /**\r\n\t//  * Gets a list of playbook names from our list of playbooks.\r\n\t//  */\r\n\t// getPlaybooks(): string[] {\r\n\t// \treturn this.playbooks.map(pb => pb.name);\r\n\t// }\r\n\r\n\t/**\r\n\t * Gets an ActionApi object by app and action name\r\n\t * @param appName App name the action resides under\r\n\t * @param actionName Name of the ActionApi to query\r\n\t */\r\n\t_getAction(appName: string, appVersion: string, actionName: string): ActionApi {\r\n\t\t//return this.appApis.find(a => a.name === appName).action_apis.find(a => a.name === actionName);\r\n\t\treturn this.appApis.find(a => a.name === appName && a.app_version == appVersion)\r\n\t\t\t\t.action_apis.find(a => a.name === actionName);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a given argument matching an inputted parameter API.\r\n\t * Adds a new argument to the selected action with default values if the argument doesn't exist.\r\n\t * @param parameterApi Parameter API object relating to the argument to return\r\n\t */\r\n\tgetOrInitializeSelectedActionArgument(parameterApi: ParameterApi): Argument {\r\n\t\t// Find an existing argument\r\n\t\tif (!this.selectedAction.arguments) this.selectedAction.arguments = [];\r\n\t\tlet argument = this.selectedAction.arguments.find(a => a.name === parameterApi.name);\r\n\t\tif (argument) { return argument; }\r\n\r\n\t\targument = this.getDefaultArgument(parameterApi);\r\n\t\tthis.selectedAction.arguments.push(argument);\r\n\t\treturn argument;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an argument based upon a given parameter API and its default value.\r\n\t * @param parameterApi Parameter API used to generate the default argument\r\n\t */\r\n\tgetDefaultArgument(parameterApi: ParameterApi): Argument {\r\n\t\tlet initialValue = null;\r\n\t\tif (parameterApi.schema.type === 'array') {\r\n\t\t\tinitialValue = [];\r\n\t\t} else if (parameterApi.schema.type === 'object') {\r\n\t\t\tinitialValue = {};\r\n\t\t} else if (parameterApi.schema.type === 'boolean') {\r\n\t\t\tinitialValue = false;\r\n\t\t}\r\n\r\n\t\treturn plainToClass(Argument, {\r\n\t\t\tname: parameterApi.name,\r\n\t\t\tvariant: Variant.STATIC_VALUE,\r\n\t\t\tvalue: (parameterApi.schema.default) ? parameterApi.schema.default : initialValue,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of ConditionApis from a given app name.\r\n\t * @param appName App name to query\r\n\t */\r\n\tgetConditionApis(appName: string): ConditionApi[] {\r\n\t\treturn this.appApis.find(a => a.name === appName).condition_apis;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of TransformApis from a given app name.\r\n\t * @param appName App name to query\r\n\t */\r\n\tgetTransformApis(appName: string): TransformApi[] {\r\n\t\treturn this.appApis.find(a => a.name === appName).transform_apis;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of TransformApis from a given app name.\r\n\t * @param appName App name to query\r\n\t */\r\n\tgetGlobalApis(appName: string): DeviceApi[] {\r\n\t\treturn this.appApis.find(a => a.name === appName).device_apis;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an parameterApi matching the app, action, and input names specified.\r\n\t * @param appName App name the ActionApi resides under\r\n\t * @param actionName Name of the ActionApi to query\r\n\t * @param inputName Name of the action input to query\r\n\t */\r\n\tgetInputApiArgs(appName: string, appVersion: string, actionName: string, inputName: string): ParameterApi {\r\n\t\treturn this._getAction(appName, appVersion, actionName).parameters.find(a => a.name === inputName);\r\n\t}\r\n\r\n\t/**\r\n\t * Filters only the apps that have actions specified\r\n\t */\r\n\tgetAppsWithActions(): AppApi[] {\r\n\t\treturn this.appApis.filter(a => a.action_apis && a.getFilteredActionApis(this.actionFilter).length);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an input object/value to a friendly string for display in the workflow status table.\r\n\t * @param input Input object / value to convert\r\n\t */\r\n\tgetFriendlyJSON(input: any): string {\r\n\t\tif (!input) { return 'N/A'; }\r\n\t\tlet out = JSON.stringify(input, null, 1);\r\n\t\tout = out.replace(/[\\{\\[\\}\\]\"]/g, '').trim();\r\n\t\tif (!out) { return 'N/A'; }\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an input argument array to a friendly string for display in the workflow status table.\r\n\t * @param args Array of arguments to convert\r\n\t */\r\n\tgetFriendlyArguments(args: Argument[]): string {\r\n\t\tif (!args || !args.length) { return 'N/A'; }\r\n\r\n\t\tconst obj: { [key: string]: string } = {};\r\n\t\targs.forEach(element => {\r\n\t\t\tif (element.value) { obj[element.name] = element.value; }\r\n\t\t});\r\n\r\n\t\tlet out = JSON.stringify(obj, null, 1);\r\n\t\tout = out.replace(/[\\{\\}\"]/g, '');\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the white space in a given string.\r\n\t * @param input Input string to remove the whitespace of\r\n\t */\r\n\tremoveWhitespace(input: string): string {\r\n\t\treturn input.replace(/\\s/g, '');\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the relative times shown for start/end date timestamps (e.g. '5 hours ago').\r\n\t */\r\n\trecalculateRelativeTimes(specificStatus?: NodeStatus): void {\r\n\t\tlet targetStatuses: NodeStatus[];\r\n\t\tif (specificStatus) {\r\n\t\t\ttargetStatuses = [specificStatus];\r\n\t\t} else {\r\n\t\t\ttargetStatuses = this.nodeStatuses;\r\n\t\t}\r\n\t\tif (!targetStatuses || !targetStatuses.length ) { return; }\r\n\r\n\t\ttargetStatuses.forEach(nodeStatus => {\r\n\t\t\tif (nodeStatus.started_at) {\r\n\t\t\t\tthis.nodeStatusStartedRelativeTimes[nodeStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatus.started_at);\r\n\t\t\t}\r\n\t\t\tif (nodeStatus.completed_at) {\r\n\t\t\t\tthis.nodeStatusCompletedRelativeTimes[nodeStatus.execution_id] =\r\n\t\t\t\t\tthis.utils.getRelativeLocalTime(nodeStatus.completed_at);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds/updates localized time strings to a status object.\r\n\t * @param status Action Status to mutate\r\n\t */\r\n\tcalculateLocalizedTimes(status: NodeStatus): void {\r\n\t\tif (status.started_at) {\r\n\t\t\tstatus.localized_started_at = this.utils.getLocalTime(status.started_at);\r\n\t\t}\r\n\t\tif (status.completed_at) {\r\n\t\t\tstatus.localized_completed_at = this.utils.getLocalTime(status.completed_at);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns errors in the loaded workflow\r\n\t */\r\n\tgetErrors() : any[] {\r\n\t\tif (!this.loadedWorkflow) return [];\r\n\t\treturn this.loadedWorkflow.all_errors.map(error => ({ error }));\r\n\t}\r\n\r\n\ttoggleConsole() {\r\n\t\tthis.showConsole = ! this.showConsole;\r\n\t\tconst options = { zoom: this.cy.zoom(), pan: this.cy.pan() }\r\n\t\tsetTimeout(() => this.setupGraph(options), 255);\r\n\t}\r\n\r\n\tswitchConsoleTabs($e: NgbTabChangeEvent) {\r\n\t\tthis.showConsole = true;\r\n\t\tconst options = { zoom: this.cy.zoom(), pan: this.cy.pan() }\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setupGraph(options);\r\n\t\t\tthis.recalculateConsoleTable($e);\r\n\t\t}, 255);\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used primarily to recalculate column widths for execution results table.\r\n\t */\r\n\trecalculateConsoleTable($e: NgbTabChangeEvent) {\r\n\t\tlet table: DatatableComponent;\r\n\t\tsetImmediate(() => {\r\n\t\t\tswitch($e.nextId) {\r\n\t\t\t\tcase 'console-tab':\r\n\t\t\t\t\ttable = this.consoleTable;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'execution-tab':\r\n\t\t\t\t\ttable = this.workflowResultsTable;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'error-tab':\r\n\t\t\t\t\ttable = this.errorLogTable;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'variable-tab':\r\n\t\t\t\t\ttable = this.environmentVariableTable;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (table && table.recalculate) {\r\n\t\t\t\tconsole.log('changing: ' + $e.nextId)\r\n\t\t\t\tthis.cdr.detectChanges();\r\n\t\t\t\tif (Array.isArray(table.rows)) table.rows = [...table.rows];\r\n\t\t\t\ttable.recalculate();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Returns errors in the loaded workflow\r\n\t */\r\n\tgetVariables() : any[] {\r\n\t\tif (!this.loadedWorkflow) return [];\r\n\t\treturn this.loadedWorkflow.environment_variables;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns errors in the loaded workflow\r\n\t */\r\n\tdeleteVariable(selectedVariable: EnvironmentVariable) {\r\n\t\tthis.loadedWorkflow.deleteVariable(selectedVariable);\r\n\t\tif (this.loadedWorkflow.environment_variables.length == 0)\r\n\t\t\t($('.nav-tabs a[href=\"#console\"], a[href=\"#errorLog\"]') as any).tab('show');\r\n\t}\r\n\r\n\teditVariableModal(selectedVariable: EnvironmentVariable) {\r\n\t\tconst modalRef = this.modalService.open(PlaybookEnvironmentVariableModalComponent);\r\n\t\tmodalRef.componentInstance.existing = true;\r\n\t\tmodalRef.componentInstance.variable = selectedVariable;\r\n\t\tmodalRef.result.then(variable => {\r\n\t\t\tthis.loadedWorkflow.environment_variables = this.loadedWorkflow.environment_variables.slice();\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\tonCreateVariable(argument: Argument) {\r\n\t\tconst modalRef = this.modalService.open(PlaybookEnvironmentVariableModalComponent);\r\n\t\tmodalRef.result.then(variable => {\r\n\t\t\tconsole.log(this.loadedWorkflow.environment_variables, variable)\r\n\t\t\tif (!this.loadedWorkflow.environment_variables) this.loadedWorkflow.environment_variables = [];\r\n\t\t\tthis.loadedWorkflow.environment_variables.push(variable);\r\n\t\t\tthis.loadedWorkflow.environment_variables = this.loadedWorkflow.environment_variables.slice();\r\n\t\t\targument.value = variable.id;\r\n\t\t}).catch(() => argument.value = '')\r\n\t}\r\n\r\n\tworkflowVariablesModal() {\r\n\t\tconst modalRef = this.modalService.open(PlaybookEnvironmentVariableModalComponent);\r\n\t\tmodalRef.result.then(variable => {\r\n\t\t\tconsole.log(this.loadedWorkflow.environment_variables, variable)\r\n\t\t\tif (!this.loadedWorkflow.environment_variables) this.loadedWorkflow.environment_variables = [];\r\n\t\t\tthis.loadedWorkflow.environment_variables.push(variable);\r\n\t\t\tthis.loadedWorkflow.environment_variables = this.loadedWorkflow.environment_variables.slice();\r\n\t\t}).catch(() => null)\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal to add a new workflow to a given playbook or under a new playbook.\r\n\t */\r\n\teditDescription() {\r\n\t\tconst modalRef = this.modalService.open(MetadataModalComponent);\r\n\t\tmodalRef.componentInstance.existing = true;\r\n\t\tmodalRef.componentInstance.currentTags = this.currentTags;\r\n\t\tmodalRef.componentInstance.existingWorkflows = this.workflows;\r\n\t\tmodalRef.componentInstance.workflow = this.loadedWorkflow.clone();\r\n\t\tmodalRef.result.then(workflow => this.loadedWorkflow = workflow).catch(() => null)\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget currentTags(): string[] {\r\n\t\tlet tags = this.loadedWorkflow.tags || [];\r\n\t\tthis.workflows.forEach(w => tags = tags.concat(w.tags));\r\n\t\treturn tags.filter((v, i, a) => a.indexOf(v) == i);\r\n\t}\r\n}\r\n","module.exports = \"<div [hidden]=\\\"!loadedWorkflow\\\" id=\\\"main\\\" class=\\\"workflowEditorMain\\\">\\r\\n\\r\\n    <div *ngIf=\\\"false\\\" class=\\\"d-flex align-items-center\\\">\\r\\n        <nav aria-label=\\\"breadcrumb\\\">\\r\\n            <ol id=\\\"playbookBreadcrumbs\\\" class=\\\"breadcrumb\\\">\\r\\n                <li class=\\\"breadcrumb-item\\\"><a href=\\\"\\\" (click)=\\\"returnToWorkflows()\\\">Workflows</a></li>\\r\\n                <li class=\\\"breadcrumb-item\\\">{{ loadedWorkflow?.name }}\\r\\n                    <label *ngIf=\\\"loadedWorkflow && !loadedWorkflow?.is_valid\\\" class=\\\"my-auto\\\"\\r\\n                        id=\\\"currentWorkflowText\\\">(Incomplete)</label>\\r\\n                </li>\\r\\n            </ol>\\r\\n        </nav>\\r\\n        <div class=\\\"my-1 my-lg-none ml-auto pr-0\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"save()\\\">Save Workflow</button>\\r\\n            <!-- <input class=\\\"form-control\\\" [formControl]=\\\"filterQuery\\\" placeholder=\\\"Filter Workflows...\\\" /> -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Graph editor toolbar -->\\r\\n    <div id=\\\"playbookToolbar\\\" class=\\\"btn-toolbar d-flex align-items-center\\\" role=toolbar>\\r\\n        <!-- <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"new-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"tooltip\\\" title=\\\"New Workflow\\\"\\r\\n                (click)=\\\"newWorkflowModal()\\\">\\r\\n                <i class=\\\"fa fa-file-o\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"load-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"modal\\\" data-target=\\\"#workflowsModal\\\"\\r\\n                title=\\\"Load Workflow\\\">\\r\\n                <i class=\\\"fa fa-folder-open-o\\\"></i>\\r\\n            </button>\\r\\n        </div> -->\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"save-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\"\\r\\n                ngbTooltip=\\\"Save Workflow\\\" [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"save()\\\">\\r\\n                <i class=\\\"fa fa-save\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"undo-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Undo\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow || (ur && ur.isUndoStackEmpty())\\\" (click)=\\\"ur.undo()\\\">\\r\\n                <i class=\\\"fa fa-undo\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"redo-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Redo\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow || (ur && ur.isRedoStackEmpty())\\\" (click)=\\\"ur.redo()\\\">\\r\\n                <i class=\\\"fa fa-repeat\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"remove-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Delete\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"removeSelectedNodes()\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"cut-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Cut\\\" [disabled]=\\\"!loadedWorkflow\\\"\\r\\n                (click)=\\\"cut()\\\">\\r\\n                <span class=\\\"fa fa-cut\\\" style=\\\"transform: rotate(-90deg);\\\"></span>\\r\\n            </button>\\r\\n        </div> -->\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"copy-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Copy\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"copy()\\\">\\r\\n                <i class=\\\"fa fa-copy\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"paste-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\" ngbTooltip=\\\"Paste\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"paste()\\\">\\r\\n                <i class=\\\"fa fa-paste\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"execute-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\"\\r\\n                ngbTooltip=\\\"Execute Workflow\\\" [disabled]=\\\"!loadedWorkflow || !loadedWorkflow.is_valid\\\"\\r\\n                (click)=\\\"executeWorkflow()\\\">\\r\\n                <i class=\\\"fa fa-play-circle\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"clear-execution-highlighting-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\"\\r\\n                placement=\\\"bottom-left\\\" ngbTooltip=\\\"Clear Execution Results\\\"\\r\\n                [disabled]=\\\"!loadedWorkflow || !loadedWorkflow.is_valid\\\" (click)=\\\"clearExecutionResults()\\\">\\r\\n                <i class=\\\"fa fa-eraser\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"copy-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\"\\r\\n                ngbTooltip=\\\"Edit Description\\\" [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"editDescription()\\\">\\r\\n                <i class=\\\"fa fa-info-circle\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n            <button id=\\\"variable-button\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" placement=\\\"bottom-left\\\"\\r\\n                ngbTooltip=\\\"Create Variable\\\" [disabled]=\\\"!loadedWorkflow\\\" (click)=\\\"workflowVariablesModal()\\\">\\r\\n                <i class=\\\"fa fa-code\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <nav class=\\\"ml-auto\\\" aria-label=\\\"breadcrumb\\\">\\r\\n            <ol id=\\\"playbookBreadcrumbs\\\" class=\\\"breadcrumb py-0 px-3 d-flex align-items-center\\\">\\r\\n                <li class=\\\"breadcrumb-item\\\"><a href=\\\"\\\" (click)=\\\"returnToWorkflows()\\\">Workflows</a></li>\\r\\n                <li class=\\\"breadcrumb-item d-flex align-items-center\\\">\\r\\n                    <span>{{ loadedWorkflow?.name }}</span>\\r\\n                    <label *ngIf=\\\"loadedWorkflow && !loadedWorkflow?.is_valid\\\" class=\\\"\\\" id=\\\"currentWorkflowText\\\">\\r\\n                        (Incomplete)</label>\\r\\n                    <a id=\\\"copy-button\\\" class=\\\"ml-1\\\" href=\\\"\\\" placement=\\\"bottom-right\\\" ngbTooltip=\\\"Edit Description\\\"\\r\\n                        (click)=\\\"editDescription()\\\">\\r\\n                        <i class=\\\"fa fa-info-circle\\\"></i>\\r\\n                    </a>\\r\\n\\r\\n                </li>\\r\\n            </ol>\\r\\n        </nav>\\r\\n    </div>\\r\\n    <!-- Graph editor -->\\r\\n    <div class=\\\"row graphEditorRow\\\" [class.show-console]=\\\"showConsole\\\">\\r\\n        <!-- Column for app/action display for drag and drop -->\\r\\n        <div class=\\\"col-md-2 graphEditorColumn\\\">\\r\\n            <div class=\\\"panel-group\\\" id=\\\"accordion\\\" #accordion [hidden]=\\\"!loadedWorkflow\\\">\\r\\n                <div class=\\\"card my-1\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Filter Actions...\\\" [formControl]=\\\"actionFilterControl\\\" />\\r\\n                </div>\\r\\n                <div *ngFor=\\\"let app of getAppsWithActions()\\\" class=\\\"card card-default my-1\\\">\\r\\n                    <div class=\\\"card-heading playbook-heading collapsed p-2\\\" data-toggle=\\\"collapse\\\"\\r\\n                        [attr.data-target]=\\\"'#actionsCollapse-' + app.id\\\"\\r\\n                        [title]=\\\"app.info ? app.info.description : ''\\\">\\r\\n                        <h5 class=\\\"card-title my-auto\\\">{{app.name}}</h5>\\r\\n                        <small class=\\\"form-text text-muted\\\">{{ app.description }}</small>\\r\\n                    </div>\\r\\n                    <div id=\\\"actionsCollapse-{{app.id}}\\\" class=\\\"card-collapse collapse action-panel\\\">\\r\\n                        <div class=\\\"card-body my-auto p-3\\\">\\r\\n                            <div *ngFor=\\\"let actionApi of app.getFilteredActionApis(actionFilter)\\\"\\r\\n                                class=\\\"card card-default actionPanel my-1\\\" dnd-draggable [dragEnabled]=\\\"true\\\"\\r\\n                                [dragData]=\\\"{ appName: app.name, actionApi: actionApi }\\\"\\r\\n                                (dblclick)=\\\"handleDoubleClickEvent(actionApi)\\\" [title]=\\\"actionApi.description\\\">\\r\\n                                <div class=\\\"card-body my-auto p-2\\\">\\r\\n                                    <span>{{actionApi.name}}</span>\\r\\n                                    <small class=\\\"form-text text-muted\\\">{{ actionApi.description }}</small>\\r\\n                                    <!-- <i class=\\\"fa fa-bars pull-right\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Actual cytoscape graph editor -->\\r\\n        <div class=\\\"col-md-7 graphEditorColumn graphArea\\\">\\r\\n            <div id=\\\"cy\\\" #cyRef dnd-droppable (onDropSuccess)=\\\"handleDropEvent($event)\\\" [hidden]=\\\"!loadedWorkflow\\\"\\r\\n                tabindex=\\\"0\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Parameter editors -->\\r\\n        <div class=\\\"col-md-3 graphEditorColumn\\\">\\r\\n            <!-- Editor for Actions -->\\r\\n            <div *ngIf=\\\"!waitingOnData && selectedAction\\\" class=\\\"parametersEditor\\\">\\r\\n                <div class=\\\"d-flex justify-content-between my-2\\\">\\r\\n                    <h4 class=\\\"mb-0\\\">Action Settings</h4>\\r\\n                    <button [disabled]=\\\"selectedAction.id === loadedWorkflow.start\\\" class=\\\"btn btn-sm btn-primary\\\"\\r\\n                        (click)=\\\"setStartNode(selectedAction.id)\\\">Set Start Action</button>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"col-12 col-xl-6\\\">\\r\\n                        <div class=\\\"input-group input-group-sm mb-3\\\" placement=\\\"bottom\\\"\\r\\n                            [ngbTooltip]=\\\"selectedAction.app_name\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text text-white bg-primary\\\">App</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" disabled class=\\\"form-control\\\" [value]=\\\"selectedAction.app_name\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-xl-6\\\">\\r\\n                        <div class=\\\"input-group input-group-sm mb-3\\\" placement=\\\"bottom\\\"\\r\\n                            [ngbTooltip]=\\\"selectedAction.action_name\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text text-white bg-primary\\\">Action</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" disabled class=\\\"form-control\\\" [value]=\\\"selectedAction.action_name\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <div class=\\\"card border-0 flex-grow-1\\\">\\r\\n                        <div class=\\\"card-body p-1\\\">\\r\\n                            <p class=\\\"card-text\\\">{{ selectedActionApi.description }}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group mt-3\\\">\\r\\n                    <label class=\\\"h5\\\" for=\\\"id\\\">ID</label>\\r\\n                    <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext px-2\\\" [value]=\\\"selectedAction.id\\\"\\r\\n                        name=\\\"id\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group mt-3\\\">\\r\\n                    <label class=\\\"h5\\\" for=\\\"name\\\">Name<i class=\\\"fa fa-asterisk required\\\"\\r\\n                            title=\\\"This field is required.\\\"></i></label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAction.name\\\" name=\\\"name\\\" required>\\r\\n                </div>\\r\\n                <!-- <div *ngIf=\\\"!selectedActionApi.global\\\" class=\\\"form-group globalArgument\\\">\\r\\n                    <label for=\\\"global_id\\\">Global\\r\\n                        <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n                    </label>\\r\\n                    <playbook-argument-component [loadedWorkflow]=\\\"loadedWorkflow\\\" [argument]=\\\"selectedAction.global_id\\\"\\r\\n                        [id]=\\\"id\\\" [users]=\\\"users\\\" [roles]=\\\"roles\\\" [globals]=\\\"relevantGlobals\\\"></playbook-argument-component>\\r\\n                </div> -->\\r\\n                <!-- Inputs -->\\r\\n\\r\\n                <div *ngIf=\\\"selectedActionApi.parameters.length\\\">\\r\\n                    <h5>Arguments</h5>\\r\\n                    <playbook-argument-component\\r\\n                        *ngFor=\\\"let parameterApi of selectedActionApi.parameters; let id = index\\\"\\r\\n                        [selectedAction]=\\\"selectedAction\\\" [loadedWorkflow]=\\\"loadedWorkflow\\\"\\r\\n                        [argument]=\\\"getOrInitializeSelectedActionArgument(parameterApi)\\\" [globals]=\\\"globals\\\"\\r\\n                        [parameterApi]=\\\"parameterApi\\\" [id]=\\\"id\\\" [users]=\\\"users\\\" [roles]=\\\"roles\\\"\\r\\n                        (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-argument-component>\\r\\n                </div>\\r\\n\\r\\n                <ng-template #conditionalTooltip>\\r\\n                    <pre>\\r\\nif input_1.result > input_2.result:\\r\\n    selected_node = output_1\\r\\nelse:\\r\\n    selected_node = output_2</pre>\\r\\n                </ng-template>\\r\\n                <div *ngIf=\\\"selectedActionApi.node_type == actionTypes.CONDITION\\\" class=\\\"form-group mt-3\\\">\\r\\n                    <label class=\\\"h5\\\" for=\\\"name\\\">Conditional\\r\\n                        <i class=\\\"fa fa-info-circle\\\" [autoClose]=\\\"'outside'\\\" [ngbPopover]=\\\"conditionalTooltip\\\"\\r\\n                            popoverTitle=\\\"Example Conditional\\\" container=\\\"body\\\"></i>\\r\\n                        <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n                    </label>\\r\\n                    <ngx-codemirror [(ngModel)]=\\\"selectedAction.conditional\\\" [options]=\\\"conditionalOptions\\\">\\r\\n                    </ngx-codemirror>\\r\\n                </div>\\r\\n\\r\\n                <ng-template #transformTooltip>\\r\\n                    <pre>result = input.result.get(\\\"key\\\")</pre>\\r\\n                </ng-template>\\r\\n                <div *ngIf=\\\"selectedActionApi.node_type == actionTypes.TRANSFORM\\\" class=\\\"form-group mt-3\\\">\\r\\n                    <label class=\\\"h5\\\" for=\\\"name\\\">Transform\\r\\n                        <i class=\\\"fa fa-info-circle\\\" [autoClose]=\\\"'outside'\\\" [ngbPopover]=\\\"transformTooltip\\\"\\r\\n                            popoverTitle=\\\"Example Transform\\\" container=\\\"body\\\"></i>\\r\\n                        <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n                    </label>\\r\\n                    <ngx-codemirror [(ngModel)]=\\\"selectedAction.transform\\\" [options]=\\\"transformOptions\\\">\\r\\n                    </ngx-codemirror>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"selectedActionApi.canRunInParallel\\\" class=\\\"form-group mt-3\\\">\\r\\n                    <h5>Run In Parallel</h5>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"parallel_parameter\\\" class=\\\"col-sm-4 col-form-label\\\">Parallelization:</label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <select class=\\\"form-control\\\" name=\\\"parallel_parameter\\\"\\r\\n                                [(ngModel)]=\\\"selectedAction.parallel_parameter\\\"\\r\\n                                (change)=\\\"updateParallelizedNode(selectedAction)\\\">\\r\\n                                <option [value]=\\\"null\\\">No Parallelization</option>\\r\\n                                <option *ngFor=\\\"let parameterApi of selectedActionApi.parallelParameters\\\"\\r\\n                                    [value]=\\\"parameterApi.name\\\" [label]=\\\"'Parallelize on  ' + parameterApi.name\\\">\\r\\n                                    Parallize on <b>{{ parameterApi.name }}</b></option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"selectedActionApi?.returns?.schema?.type || selectedActionApi?.returns?.example || selectedActionResults\\\">\\r\\n                    <div class=\\\"form-group mt-3\\\">\\r\\n                        <label class=\\\"h5\\\">\\r\\n                            Returns: <span\\r\\n                                *ngIf=\\\"selectedActionApi?.returns?.schema?.type\\\">({{ selectedActionApi?.returns?.schema?.type }})</span>\\r\\n                        </label>\\r\\n                        <ngb-tabset justify=\\\"fill\\\" [activeId]=\\\"selectedActionResults ? 'returns-results-tab' : 'returns-example-tab'\\\">\\r\\n                            <ngb-tab id=\\\"returns-example-tab\\\" title=\\\"Example\\\" [disabled]=\\\"!selectedActionApi?.returns?.example\\\">\\r\\n                                <ng-template ngbTabContent>\\r\\n                                    <div class=\\\"d-flex m-2\\\" *ngIf=\\\"selectedActionApi?.returns?.example\\\">\\r\\n                                        <div class=\\\"card bg-light flex-grow-1\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <pre class=\\\"card-text\\\">{{ selectedActionApi.returns.example }}</pre>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </ngb-tab>\\r\\n                            <ngb-tab id=\\\"returns-results-tab\\\" title=\\\"Execution Result\\\" [disabled]=\\\"!selectedActionResults\\\">\\r\\n                                <ng-template ngbTabContent>\\r\\n                                    <div class=\\\"d-flex m-2\\\" *ngIf=\\\"selectedActionResults\\\">\\r\\n                                        <div class=\\\"card bg-light flex-grow-1\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <!-- <pre class=\\\"card-text\\\">{{ selectedActionResults }}</pre> -->\\r\\n                                                {{ getFriendlyJSON(selectedActionResults) }}\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </ngb-tab>\\r\\n                        </ngb-tabset>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- Triggers -->\\r\\n                <div *ngIf=\\\"false\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <h4>Trigger Condition</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <button *ngIf=\\\"!selectedAction.trigger\\\" class=\\\"btn btn-primary pull-right\\\"\\r\\n                                    (click)=\\\"specifyTrigger(selectedAction)\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>Specify Trigger Condition\\r\\n                                </button>\\r\\n                                <button *ngIf=\\\"selectedAction.trigger\\\" class=\\\"btn btn-danger pull-right\\\"\\r\\n                                    (click)=\\\"removeTrigger(selectedAction)\\\">\\r\\n                                    <i class=\\\"fa fa-close\\\"></i>Remove Trigger Condition\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <playbook-conditional-expression-component *ngIf=\\\"selectedAction.trigger\\\"\\r\\n                        [conditionalExpression]=\\\"selectedAction.trigger\\\" [appApis]=\\\"appApis\\\"\\r\\n                        [selectedAppName]=\\\"selectedAction.app_name\\\" [loadedWorkflow]=\\\"loadedWorkflow\\\"\\r\\n                        (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-conditional-expression-component>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Editor for Branches (edges) -->\\r\\n            <div *ngIf=\\\"selectedBranchParams && selectedBranchParams.branch && false\\\" class=\\\"parametersEditor\\\">\\r\\n                <h3>Branch Parameters</h3>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"status\\\">Return Type\\r\\n                        <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n                    </label>\\r\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedBranchParams.branch.status\\\" name=\\\"status\\\">\\r\\n                        <option *ngFor=\\\"let i of selectedBranchParams.returnTypes\\\" [value]=\\\"i.status\\\" [label]=\\\"i.status\\\"\\r\\n                            [class.failure]=\\\"i.failure\\\">{{i.status}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"priority\\\">Priority\\r\\n                        <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n                    </label>\\r\\n                    <input type=\\\"number\\\" max=\\\"999\\\" min=\\\"1\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"selectedBranchParams.branch.priority\\\" name=\\\"priority\\\" required>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <h4>Condition</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <button *ngIf=\\\"!selectedBranchParams.branch.condition\\\"\\r\\n                                    class=\\\"btn btn-primary pull-right\\\"\\r\\n                                    (click)=\\\"specifyCondition(selectedBranchParams.branch)\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>Specify Condition\\r\\n                                </button>\\r\\n                                <button *ngIf=\\\"selectedBranchParams.branch.condition\\\" class=\\\"btn btn-danger pull-right\\\"\\r\\n                                    (click)=\\\"removeCondition(selectedBranchParams.branch)\\\">\\r\\n                                    <i class=\\\"fa fa-close\\\"></i>Remove Condition\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <playbook-conditional-expression-component *ngIf=\\\"selectedBranchParams.branch.condition\\\"\\r\\n                        [conditionalExpression]=\\\"selectedBranchParams.branch.condition\\\" [appApis]=\\\"appApis\\\"\\r\\n                        [selectedAppName]=\\\"selectedBranchParams.appName\\\" [loadedWorkflow]=\\\"loadedWorkflow\\\"\\r\\n                        (createVariable)=\\\"onCreateVariable($event)\\\"></playbook-conditional-expression-component>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"bottom-panel fixed-bottom mb-1 pt-1 border-top\\\" [class.show-console]=\\\"showConsole\\\">\\r\\n        <ngb-tabset destoryOnHide=\\\"false\\\" (tabChange)=\\\"switchConsoleTabs($event)\\\">\\r\\n            <ngb-tab id=\\\"console-tab\\\">\\r\\n                <ng-template ngbTabTitle>\\r\\n                    <div class=\\\"console-tab\\\" (click)=\\\"toggleConsole()\\\">Console\\r\\n                        <span *ngIf=\\\"consoleLog.length > 0\\\"\\r\\n                            class=\\\"badge badge-pill badge-primary\\\">{{ consoleLog.length }}</span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n                    <ngx-codemirror #consoleArea [(ngModel)]=\\\"consoleContent\\\" [options]=\\\"{\\r\\n                        lineNumbers: true,\\r\\n                        mode: 'shell',\\r\\n                        theme: 'darcula',\\r\\n                        readOnly: true\\r\\n                    }\\\"></ngx-codemirror>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n\\r\\n            <ngb-tab *ngIf=\\\"loadedWorkflow?.id && !loadedWorkflow?.has_errors\\\" id=\\\"execution-tab\\\">\\r\\n                <ng-template ngbTabTitle>\\r\\n                    <div class=\\\"console-tab\\\" (click)=\\\"toggleConsole()\\\">Execution Results\\r\\n                        <span *ngIf=\\\"nodeStatuses.length > 0\\\"\\r\\n                            class=\\\"badge badge-pill badge-primary\\\">{{ nodeStatuses.length }}</span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n                    <div id=\\\"executionResultsModal\\\">\\r\\n                        <div #workflowResultsContainer>\\r\\n                            <ngx-datatable #workflowResultsTable class='material expandable' [columnMode]=\\\"'flex'\\\"\\r\\n                                [rows]=\\\"nodeStatuses\\\" [sortType]=\\\"'multi'\\\" [footerHeight]=\\\"25\\\" [rowHeight]=\\\"undefined\\\"\\r\\n                                [sorts]=\\\"[{prop: 'started_at', dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                                <!-- Column Templates -->\\r\\n                                <ngx-datatable-column name=\\\"ID\\\" prop=\\\"node_id\\\" [flexGrow]=\\\"2\\\">\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"App Name\\\" prop=\\\"app_name\\\" [flexGrow]=\\\"1\\\">\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Action Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"1\\\">\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Started At\\\" prop=\\\"started_at\\\" [flexGrow]=\\\"1\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        <span [title]=\\\"row.localized_started_at\\\">\\r\\n                                            {{nodeStatusStartedRelativeTimes[row.execution_id]}}\\r\\n                                        </span>\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Completed At\\\" prop=\\\"completed_at\\\" [flexGrow]=\\\"1\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        <span [title]=\\\"row.localized_completed_at\\\">\\r\\n                                            {{nodeStatusCompletedRelativeTimes[row.execution_id]}}\\r\\n                                        </span>\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Status\\\" prop=\\\"status\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Arguments\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        {{getFriendlyArguments(row.arguments)}}\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Result\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"3\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        {{getFriendlyJSON(row.result)}}\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                            </ngx-datatable>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n\\r\\n            <ngb-tab *ngIf=\\\"loadedWorkflow?.environment_variables?.length > 0\\\" id=\\\"variable-tab\\\">\\r\\n                <ng-template ngbTabTitle>\\r\\n                    <div class=\\\"console-tab\\\" (click)=\\\"toggleConsole()\\\">Workflow Variables</div>\\r\\n                </ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n                    <ngx-datatable #environmentVariableTable class='material expandable' [columnMode]=\\\"'flex'\\\"\\r\\n                        [rows]=\\\"getVariables()\\\" [sortType]=\\\"'multi'\\\" [footerHeight]=\\\"25\\\" [rowHeight]=\\\"undefined\\\"\\r\\n                        [sorts]=\\\"[]\\\" [limit]=\\\"10\\\">\\r\\n                        <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"ID\\\" prop=\\\"id\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Default Value\\\" prop=\\\"value\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Description\\\" prop=\\\"description\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"3\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\"\\r\\n                            [flexGrow]=\\\"1\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                <button (click)=\\\"editVariableModal(row)\\\" class=\\\"btn btn-primary mx-1\\\"\\r\\n                                    title=\\\"Edit Variable\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                                <button (click)=\\\"deleteVariable(row)\\\" class=\\\"btn btn-danger mx-1\\\"\\r\\n                                    title=\\\"Delete Variable\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                    </ngx-datatable>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n\\r\\n            <ngb-tab *ngIf=\\\"loadedWorkflow?.has_errors\\\" id=\\\"error-tab\\\">\\r\\n                <ng-template ngbTabTitle>\\r\\n                    <div class=\\\"console-tab\\\" (click)=\\\"toggleConsole()\\\">Workflow Errors <span\\r\\n                            class=\\\"badge badge-pill badge-secondary\\\">{{ loadedWorkflow?.all_errors.length }}</span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n                    <ngx-datatable #errorLogTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"getErrors()\\\"\\r\\n                        [sortType]=\\\"'multi'\\\" [footerHeight]=\\\"25\\\" [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[]\\\" [limit]=\\\"10\\\">\\r\\n                        <ngx-datatable-column name=\\\"Error\\\" prop=\\\"error\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"1\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                    </ngx-datatable>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n\\r\\n        </ngb-tabset>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"/* @import '/client/node_modules/cytoscape-panzoom/cytoscape.js-panzoom.css';\\r\\n@import '/client/node_modules/ng2-dnd/bundles/style.css'; */\\n#main.workflowEditorMain {\\n  padding: 10px 15px 0 15px; }\\n.workflowEditorMain .parametersEditor .failure {\\n  color: crimson; }\\n#playbookBreadcrumbs {\\n  background-color: unset;\\n  -webkit-margin-after: unset;\\n          margin-block-end: unset;\\n  -webkit-padding-start: unset;\\n          padding-inline-start: unset;\\n  font-weight: bold;\\n  font-size: 1.5rem; }\\n#playbookBreadcrumbs a {\\n    text-decoration: none; }\\n#playbookToolbar {\\n  background-color: #aecbdc;\\n  margin-left: 0;\\n  margin-bottom: 5px;\\n  border: 1px solid #8b9aa3;\\n  border-radius: 5px; }\\n#playbookToolbar .btn-default {\\n  background-color: #aecbdc;\\n  border-color: #aecbdc; }\\n#playbookToolbar .btn-default:hover {\\n  background-color: #eaf2f6;\\n  border-color: #eaf2f6;\\n  margin: 0;\\n  border-radius: 0; }\\n#playbookToolbar .btn-group {\\n  border-right: 1px solid #8b9aa3; }\\n#playbookToolbar .btn-group > .btn:first-child {\\n  margin: 0;\\n  padding: 10px; }\\n#playbookToolbar .btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group {\\n  margin-left: 0; }\\n#playbookToolbar .form-control.workflowNameInput {\\n  display: inline-block;\\n  width: auto; }\\n#currentWorkflowText {\\n  margin-top: 10px;\\n  font-size: 18px; }\\n.consoleRow {\\n  padding: 10px; }\\n/* Console Row = 200px */\\n.workflowEditorMain .graphEditorRow {\\n  height: calc(100vh - 170px);\\n  transition: height 0.25s ease-in-out;\\n  overflow: auto; }\\n.workflowEditorMain .graphEditorRow.show-console {\\n    height: calc(100vh - 470px); }\\n.workflowEditorMain .graphEditorColumn {\\n  height: 100%;\\n  overflow: auto; }\\n.workflowEditorMain .graphEditorColumn.graphArea {\\n    overflow: hidden; }\\n.workflowEditorMain .playbook-heading {\\n  cursor: pointer; }\\n#playbookEditorTabs {\\n  display: inline-block;\\n  vertical-align: top;\\n  height: 100%;\\n  width: 100%;\\n  position: inherit;\\n  background: transparent; }\\n#cy {\\n  /* display: inline-block; */\\n  /* vertical-align: top; */\\n  width: 100%;\\n  height: 100%; }\\n/* Need to do this else panzoom appears above modals */\\n#cy .cy-panzoom {\\n  z-index: 10; }\\n#cy-instructions {\\n  padding: 20px;\\n  font-size: 25px; }\\n#cy-json-data {\\n  background-color: white;\\n  color: black;\\n  font-weight: normal;\\n  height: 630px;\\n  width: 500px;\\n  resize: none; }\\n.workflowEditorMain #accordion .card-heading .card-title:after {\\n  /* symbol for \\\"opening\\\" panels */\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  content: \\\"\\\\f078\\\";\\n  /* adjust as needed, taken from bootstrap.css */\\n  float: right;\\n  /* adjust as needed */\\n  color: grey;\\n  /* adjust as needed */ }\\n.no-transition {\\n  transition: none !important; }\\n.workflowEditorMain #accordion .card-heading.collapsed .card-title:after {\\n  /* symbol for \\\"collapsed\\\" panels */\\n  content: \\\"\\\\f054\\\";\\n  /* adjust as needed, taken from bootstrap.css */ }\\n.workflowEditorMain .card-default > .card-heading {\\n  background-color: #eaf2f6;\\n  font-weight: bolder; }\\n.workflowEditorMain .parametersEditor input[type=checkbox].form-control {\\n  width: 34px;\\n  margin: 0 5px; }\\n.workflowEditorMain .parametersEditor .form-group.argument {\\n  margin-bottom: 5px;\\n  padding: 5px; }\\n.workflowEditorMain .parametersEditor .form-group.argument.odd {\\n  background-color: #EEE; }\\n.workflowEditorMain .parametersEditor .indent {\\n  border-left: 3px solid #DDD;\\n  border-top: 1px solid #DDD;\\n  border-bottom: 1px solid #DDD;\\n  padding: 5px 0 5px 15px;\\n  margin-top: 5px;\\n  margin-bottom: 5px; }\\n.workflowEditorMain .parametersEditor .addBar {\\n  margin-bottom: 10px; }\\n.workflowEditorMain .parametersEditor .addBar button {\\n  margin-top: 25px; }\\n.workflowEditorMain .parametersEditor .propertyHeader {\\n  margin-bottom: 5px; }\\n.workflowEditorMain .parametersEditor .required {\\n  color: crimson;\\n  margin-left: 5px; }\\n.workflowEditorMain .parametersEditor .CodeMirror {\\n  color: #495057;\\n  border: 1px solid #dee2e6;\\n  border-radius: 0.25rem;\\n  height: 10rem; }\\n.workflowEditorMain .parametersEditor .CodeMirror-empty {\\n  color: rgba(73, 80, 87, 0.65); }\\n.workflowEditorMain .parametersEditor .CodeMirror-focused {\\n  background-color: #fff;\\n  border-color: #8bb8df;\\n  outline: 0;\\n  box-shadow: 0 0 0 0.2rem rgba(51, 122, 183, 0.25); }\\n.workflowEditorMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n#workflowsModal .workflowPanel a {\\n  cursor: pointer; }\\n#workflowsModal .card-heading h4 {\\n  min-height: 30px; }\\n#workflowsModal .importContainer {\\n  margin-bottom: 5px; }\\n#workflowsModal .importContainer h5 {\\n  display: inline-block; }\\n#workflowsModal .importPlaybookInput {\\n  display: inline-block; }\\n#workflowsModal > .modal-dialog {\\n  max-width: 600px; }\\n#workflowsModal .modal-title,\\n#executionResultsModal .modal-title,\\n#playbookAndWorkflowActionModal .modal-title {\\n  display: inline-block; }\\n#executionResultsModal > .modal-dialog {\\n  max-width: 95%; }\\n.bottom-panel .tab-content {\\n  max-height: 0px;\\n  height: 0px;\\n  overflow-y: auto;\\n  transition: all 0.25s ease-in-out; }\\n.bottom-panel.show-console .tab-content {\\n  max-height: 300px;\\n  height: 300px; }\\n.bottom-panel .nav-link {\\n  padding: unset; }\\n.bottom-panel .nav-link .console-tab {\\n    padding: 0.5rem 1rem; }\\nbody ngb-popover-window.popover {\\n  max-width: 400px; }\\n\"","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { JwtInterceptor } from '@auth0/angular-jwt';\r\n\r\nexport function jwtTokenGetter() : string {\r\n\treturn sessionStorage.getItem('access_token');\r\n}\r\n\r\n@Injectable()\r\nexport class RefreshTokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor (private authService: AuthService, private jwtInterceptor: JwtInterceptor) {}\r\n\r\n    intercept (req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.jwtInterceptor.isWhitelistedDomain(req) && !this.jwtInterceptor.isBlacklistedRoute(req) && this.authService.isAccessTokenExpired()) {\r\n            return from(this.authService.getAccessTokenRefreshed())\r\n                    .pipe(mergeMap(() => this.jwtInterceptor.intercept(req, next)));\r\n        } \r\n        else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PlaybookComponent } from './playbook/playbook.component';\r\nimport { SchedulerComponent } from './scheduler/scheduler.component';\r\nimport { GlobalsComponent } from './globals/globals.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MetricsComponent } from './metrics/metrics.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { DashboardsComponent } from './dashboards/dashboards.component';\r\nimport { ExecutionComponent } from './execution/execution.component';\r\nimport { ManageDashboardsComponent } from './dashboards/manage.dashboards.component';\r\nimport { WorkflowEditorComponent } from './playbook/workflow.editor.component';\r\nimport { BucketsComponent } from './buckets/buckets.component';\r\n//etc\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/workflows', pathMatch: 'full' },\r\n\t{ path: 'workflows', component: PlaybookComponent },\r\n\t{ path: 'workflows/new', component: WorkflowEditorComponent },\r\n\t{ path: 'workflows/:workflowId', component: WorkflowEditorComponent },\r\n\t{ path: 'scheduler', component: SchedulerComponent },\r\n\t{ path: 'globals', component: GlobalsComponent },\r\n\t{ path: 'settings', component: SettingsComponent },\r\n\t{ path: 'execution', component: ExecutionComponent },\r\n\t{ path: 'dashboard/new', component: ManageDashboardsComponent },\r\n\t{ path: 'dashboard/:dashboardId/edit', component: ManageDashboardsComponent },\r\n\t{ path: 'dashboard/:dashboardId', component: DashboardsComponent },\r\n\t{ path: 'buckets', component: BucketsComponent },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class RoutingModule {}\r\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { SchedulerModalComponent } from './scheduler.modal.component';\r\n\r\nimport { SchedulerService } from './scheduler.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { ScheduledTask } from '../models/scheduler/scheduledTask';\r\n\r\n@Component({\r\n\tselector: 'scheduler-component',\r\n\ttemplateUrl: './scheduler.html',\r\n\tstyleUrls: [\r\n\t\t'./scheduler.scss',\r\n\t\t'../../../node_modules/ng-pick-datetime/styles/picker.min.css',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [SchedulerService],\r\n})\r\nexport class SchedulerComponent implements OnInit {\r\n\tschedulerStatus: string;\r\n\tscheduledTasks: ScheduledTask[] = [];\r\n\tdisplayScheduledTasks: ScheduledTask[] = [];\r\n\tavailableWorkflows: Select2OptionData[] = [];\r\n\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\tconstructor(\r\n\t\tprivate schedulerService: SchedulerService, private modalService: NgbModal,\r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * On component initialization, get the scheduler status for display/actioning.\r\n\t * Get workflow names to add to a scheduled task.\r\n\t * Get scheduled tasks to display in the data table.\r\n\t * Initialize the search filter input to filter scheduled tasks.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.getSchedulerStatus();\r\n\t\tthis.getWorkflows();\r\n\t\tthis.getScheduledTasks();\r\n\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterScheduledTasks());\r\n\t}\r\n\r\n\t/**\r\n\t * Based on the search filter input, filter out the scheduled tasks based on matching some parameters (name, desc.).\r\n\t */\r\n\tfilterScheduledTasks(): void {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayScheduledTasks = this.scheduledTasks.filter((s) => {\r\n\t\t\treturn (s.name.toLocaleLowerCase().includes(searchFilter) ||\r\n\t\t\t\ts.description.toString().includes(searchFilter));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the scheduler status from the server (e.g. 'paused').\r\n\t */\r\n\tgetSchedulerStatus(): void {\r\n\t\tthis.schedulerService\r\n\t\t\t.getSchedulerStatus()\r\n\t\t\t.then(schedulerStatus => this.schedulerStatus = schedulerStatus)\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving scheduler status: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the status of the scheduler and updates the local scheduler status to reflect that.\r\n\t * @param status Status to change to\r\n\t */\r\n\tchangeSchedulerStatus(status: string): void {\r\n\t\tif (status === 'start' && this.schedulerStatus === 'paused') { status = 'resume'; }\r\n\r\n\t\tthis.schedulerService\r\n\t\t\t.changeSchedulerStatus(status)\r\n\t\t\t.then(newStatus => {\r\n\t\t\t\tif (newStatus) { this.schedulerStatus = newStatus; }\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error changing scheduler status: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a list of scheduled tasks from the server for display in our data table.\r\n\t */\r\n\tgetScheduledTasks(): void {\r\n\t\tthis.schedulerService\r\n\t\t\t.getAllScheduledTasks()\r\n\t\t\t.then(scheduledTasks => this.displayScheduledTasks = this.scheduledTasks = scheduledTasks)\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving scheduled tasks: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a modal for adding a new scheduled task. Passes in our workflow names for usage in the modal.\r\n\t */\r\n\taddScheduledTask(): void {\r\n\t\tconst modalRef = this.modalService.open(SchedulerModalComponent, { size: 'lg' });\r\n\t\tmodalRef.componentInstance.title = 'Schedule a New Task';\r\n\t\tmodalRef.componentInstance.submitText = 'Add Scheduled Task';\r\n\t\tmodalRef.componentInstance.availableWorkflows = this.availableWorkflows;\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a modal for editing an existing scheduled task. Passes in our workflow names for usage in the modal.\r\n\t */\r\n\teditScheduledTask(task: ScheduledTask): void {\r\n\t\tconst modalRef = this.modalService.open(SchedulerModalComponent, { size: 'lg' });\r\n\t\tmodalRef.componentInstance.title = `Edit Task ${task.name}`;\r\n\t\tmodalRef.componentInstance.submitText = 'Save Changes';\r\n\t\tmodalRef.componentInstance.availableWorkflows = this.availableWorkflows;\r\n\t\tmodalRef.componentInstance.workingScheduledTask = this.utils.cloneDeep(task);\r\n\t\tdelete modalRef.componentInstance.workingScheduledTask.$$index;\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * After user confirmation, will delete a given scheduled task from the database.\r\n\t * Removes it from our list of scheduled tasks to display.\r\n\t * @param taskToDelete Scheduled Task to delete\r\n\t */\r\n\tasync deleteScheduledTask(taskToDelete: ScheduledTask) {\r\n\t\tawait this.utils.confirm(`Are you sure you want to delete <b>${taskToDelete.name}</b>?`);\r\n\r\n\t\tthis.schedulerService\r\n\t\t\t.deleteScheduledTask(taskToDelete.id)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.scheduledTasks = this.scheduledTasks.filter(scheduledTask => scheduledTask.id !== taskToDelete.id);\r\n\r\n\t\t\t\tthis.filterScheduledTasks();\r\n\r\n\t\t\t\tthis.toastrService.success(`Scheduled Task \"${taskToDelete.name}\" successfully deleted.`);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error deleting task: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Tells the server to change the status of a scheduled task (e.g. 'pause').\r\n\t * Updates the local scheduled task on success to reflect this change.\r\n\t * @param task Scheduled Task to change the status of\r\n\t * @param actionName Action to take on the task\r\n\t */\r\n\tchangeScheduledTaskStatus(task: ScheduledTask, actionName: string): void {\r\n\t\tlet newStatus: string;\r\n\r\n\t\tswitch (actionName) {\r\n\t\t\tcase 'start':\r\n\t\t\t\tnewStatus = 'running';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pause':\r\n\t\t\t\tnewStatus = 'paused';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stop':\r\n\t\t\t\tnewStatus = 'stopped';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.toastrService.error(`Attempted to set an unknown status ${actionName}`);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!newStatus) { return; }\r\n\r\n\t\tthis.schedulerService\r\n\t\t\t.changeScheduledTaskStatus(task.id, actionName)\r\n\t\t\t.then(() => {\r\n\t\t\t\ttask.status = newStatus;\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(`Error changing scheduler status: ${e.message}`));\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs an array of playbooks/workflows from the server (id, name pairs).\r\n\t * From this array, creates an array of Select2Option data with the id and playbook/workflow name.\r\n\t */\r\n\tgetWorkflows(): void {\r\n\t\tthis.schedulerService\r\n\t\t\t.getWorkflows()\r\n\t\t\t.then(workflows => {\r\n\t\t\t\tworkflows.forEach(workflow => {\r\n\t\t\t\t\tthis.availableWorkflows.push({\r\n\t\t\t\t\t\tid: workflow.id,\r\n\t\t\t\t\t\ttext: `${workflow.name}`,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the task_trigger of a scheduled task into a readable string for display in the datatable.\r\n\t * @param scheduledTask Scheduled task to convert the task_trigger of\r\n\t */\r\n\tgetRule(scheduledTask: ScheduledTask): string {\r\n\t\t//stringify only the truthy args (aka those specified) [seems that the server only returns args that are specified]\r\n\t\t// let out = _.pick(scheduledTask.task_trigger.args, function(value: any) {\r\n\t\t// \treturn value;\r\n\t\t// });\r\n\r\n\t\tlet rule = JSON.stringify(scheduledTask.task_trigger.args, null, 1);\r\n\r\n\t\trule = rule.substr(1, rule.length - 2).replace(/\"/g, '');\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the workflow ids array of a scheduled task into a readable string for display in the datatable.\r\n\t * @param scheduledTask Scheduled task to convert the workflows of\r\n\t */\r\n\tgetFriendlyWorkflows(scheduledTask: ScheduledTask): string {\r\n\t\tif (!this.availableWorkflows || !scheduledTask.workflows || !scheduledTask.workflows.length) { return ''; }\r\n\r\n\t\treturn this.availableWorkflows.filter(workflow => {\r\n\t\t\treturn scheduledTask.workflows.indexOf(workflow.id) >= 0;\r\n\t\t}).map(workflow => workflow.text).join(', ');\r\n\t}\r\n\r\n\t/**\r\n\t * On closing an add/edit modal (on clicking save), we will add or update existing scheduled tasks for display.\r\n\t * @param modalRef Modal reference that is being closed\r\n\t */\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => {\r\n\t\t\t\t//Handle modal dismiss\r\n\t\t\t\tif (!result || !result.scheduledTask) { return; }\r\n\r\n\t\t\t\t//On edit, find and update the edited item\r\n\t\t\t\tif (result.isEdit) {\r\n\t\t\t\t\tconst toUpdate = this.scheduledTasks.find(st => st.id === result.scheduledTask.id);\r\n\t\t\t\t\tObject.assign(toUpdate, result.scheduledTask);\r\n\r\n\t\t\t\t\tthis.filterScheduledTasks();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Scheduled task \"${result.scheduledTask.name}\" successfully edited.`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scheduledTasks.push(result.scheduledTask);\r\n\r\n\t\t\t\t\tthis.filterScheduledTasks();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Scheduled task \"${result.scheduledTask.name}\" successfully added.`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"schedulerMain container-fluid\\\">\\r\\n\\t<h1>Scheduler</h1>\\r\\n\\r\\n\\t<div class=\\\"row align-items-center mb-3\\\">\\r\\n\\t\\t<div class=\\\"col-auto\\\">\\r\\n\\t\\t\\t<button (click)=\\\"addScheduledTask()\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> Add To Schedule</button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<h4 class=\\\"my-auto mr-2\\\">Scheduler <span id=\\\"status\\\" class=\\\"text-capitalize\\\">{{schedulerStatus}}</span></h4>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"schedulerStatus && schedulerStatus !== 'running'\\\" (click)=\\\"changeSchedulerStatus('start')\\\" class=\\\"btn btn-primary mx-1\\\"\\r\\n\\t\\t\\t\\t\\tid=\\\"startSchedulerBtn\\\" ngbTooltip=\\\"Start Scheduler\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-play\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"schedulerStatus && schedulerStatus === 'running'\\\" (click)=\\\"changeSchedulerStatus('pause')\\\" class=\\\"btn btn-warning mx-1\\\"\\r\\n\\t\\t\\t\\t\\tid=\\\"pauseSchedulerBtn\\\" ngbTooltip=\\\"Pause Scheduler\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-pause\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"schedulerStatus && schedulerStatus === 'running'\\\" (click)=\\\"changeSchedulerStatus('stop')\\\" class=\\\"btn btn-danger\\\"\\r\\n\\t\\t\\t\\t\\tid=\\\"stopSchedulerBtn\\\" ngbTooltip=\\\"Stop Scheduler\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-stop\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Filter Results...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ngx-datatable #scheduleTable class='material expandable scheduledTasksTable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayScheduledTasks\\\"\\r\\n\\t [sorts]=\\\"[{prop: 'name', dir: 'asc'}]\\\" [sortType]=\\\"'multi'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [limit]=\\\"25\\\">\\r\\n\\t\\t<!-- Column Templates -->\\r\\n\\t\\t<ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"2\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<span title=\\\"{{row.description}}\\\">{{row.name}}</span>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Workflow(s)\\\" [flexGrow]=\\\"3\\\" [sortable]=\\\"false\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t{{getFriendlyWorkflows(row)}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Status\\\" prop=\\\"status\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Type\\\" prop=\\\"task_trigger.type\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Rule\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"4\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t{{getRule(row)}}\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t\\t<ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"row.status === 'stopped' || row.status === 'paused'\\\" (click)=\\\"changeScheduledTaskStatus(row, 'start')\\\" title=\\\"Start Scheduled Task\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"mr-1 btn btn-primary\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-play\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<!--<button *ngIf=\\\"row.status === 'running''\\\" (click)=\\\"changeScheduledTaskStatus(row, 'pause')\\\" title=\\\"Pause Scheduled Task\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"btn btn-warning\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-pause\\\"></i>\\r\\n\\t\\t\\t\\t</button>-->\\r\\n\\t\\t\\t\\t<button *ngIf=\\\"row.status === 'running' || row.status === 'paused'\\\" (click)=\\\"changeScheduledTaskStatus(row, 'stop')\\\" title=\\\"Stop Scheduled Task\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"mr-1 btn btn-danger\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-stop\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"editScheduledTask(row)\\\" class=\\\"mr-1 btn btn-primary\\\" title=\\\"Edit Scheduled Task\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-edit\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"deleteScheduledTask(row)\\\" class=\\\"mr-1 btn btn-danger\\\" title=\\\"Delete Scheduled Task\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-times\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ngx-datatable-column>\\r\\n\\t</ngx-datatable>\\r\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\nimport * as moment from 'moment';\r\n\r\nimport { SchedulerService } from './scheduler.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { ScheduledTask } from '../models/scheduler/scheduledTask';\r\nimport { ScheduledTaskCron } from '../models/scheduler/scheduledTaskCron';\r\nimport { ScheduledTaskInterval } from '../models/scheduler/scheduledTaskInterval';\r\nimport { ScheduledTaskDate } from '../models/scheduler/scheduledTaskDate';\r\nimport { GenericObject } from '../models/genericObject';\r\n\r\n@Component({\r\n\tselector: 'scheduler-modal',\r\n\ttemplateUrl: './scheduler.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./scheduler.scss',\r\n\t],\r\n\tproviders: [SchedulerService, UtilitiesService],\r\n})\r\nexport class SchedulerModalComponent implements OnInit {\r\n\t@Input() workingScheduledTask: ScheduledTask = new ScheduledTask();\r\n\t@Input() title: string;\r\n\t@Input() submitText: string;\r\n\t@Input() availableWorkflows: Select2OptionData[] = [];\r\n\r\n\tscheduledItemTriggerTypes: string[] = ['date', 'interval', 'cron'];\r\n\tworkflowSelectConfig: Select2Options;\r\n\tcron: ScheduledTaskCron = new ScheduledTaskCron();\r\n\tinterval: ScheduledTaskInterval = new ScheduledTaskInterval();\r\n\tdate: ScheduledTaskDate = new ScheduledTaskDate();\r\n\t\r\n\tconstructor(\r\n\t\tprivate schedulerService: SchedulerService, public activeModal: NgbActiveModal,\r\n\t\tprivate toastrService: ToastrService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * Initializes the workflow select config for selecting workflows to schedule.\r\n\t */\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.workflowSelectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tmultiple: true,\r\n\t\t\tallowClear: true,\r\n\t\t\tplaceholder: 'Select workflow(s) to run...',\r\n\t\t\tcloseOnSelect: false,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new / updates an existing scheduled task. Will also convert fields under task trigger to int if applicable.\r\n\t */\r\n\tsubmit(): void {\r\n\t\tconst validationMessage = this.validate();\r\n\t\tif (validationMessage) {\r\n\t\t\tthis.toastrService.error(validationMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.workingScheduledTask.task_trigger.type === 'cron') {\r\n\t\t\tthis.convertStringsToInt(this.workingScheduledTask.task_trigger.args);\r\n\t\t}\r\n\r\n\t\t//If device has an ID, device already exists, call update\r\n\t\tif (this.workingScheduledTask.id) {\r\n\t\t\tthis.schedulerService\r\n\t\t\t\t.editScheduledTask(this.workingScheduledTask)\r\n\t\t\t\t.then(scheduledTask => this.activeModal.close({\r\n\t\t\t\t\tscheduledTask,\r\n\t\t\t\t\tisEdit: true,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t} else {\r\n\t\t\tthis.schedulerService\r\n\t\t\t\t.addScheduledTask(this.workingScheduledTask)\r\n\t\t\t\t.then(scheduledTask => this.activeModal.close({\r\n\t\t\t\t\tscheduledTask,\r\n\t\t\t\t\tisEdit: false,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates a scheduled task. Checks basic info (name, workflows specified).\r\n\t * Ensures args is specifies as well as a start date. Ensures that end date is not before start date.\r\n\t * If it's an interval or cron, checks if any other param exists in args.\r\n\t */\r\n\tvalidate(): string {\r\n\t\tif (!this.workingScheduledTask.name) { return 'A name is required.'; }\r\n\t\tif (!this.workingScheduledTask.workflows || !this.workingScheduledTask.workflows.length) {\r\n\t\t\treturn 'Please specify at least one workflow to be run.';\r\n\t\t}\r\n\r\n\t\tconst args: any = this.workingScheduledTask.task_trigger.args;\r\n\r\n\t\tif (!args) { return 'Please select a type and fill out the trigger parameters.'; }\r\n\r\n\t\tif (!(args.start_date || args.run_date)) { return 'A start date is required.'; }\r\n\r\n\t\tif (this.workingScheduledTask.task_trigger.type === 'interval' || \r\n\t\t\tthis.workingScheduledTask.task_trigger.type === 'cron') {\r\n\t\t\tconst startDate = +args.start_date;\r\n\t\t\tconst endDate = +args.end_date;\r\n\r\n\t\t\tif (startDate > endDate) { return 'The end date cannot be before the start date.'; }\r\n\t\t}\r\n\r\n\t\tif (this.workingScheduledTask.task_trigger.type === 'interval') {\r\n\t\t\tif (!this._doesArgsHaveAnything(args)) {\r\n\t\t\t\treturn 'You must specify some interval of time for the actions to occur.';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.workingScheduledTask.task_trigger.type === 'cron') {\r\n\t\t\tif (!this._doesArgsHaveAnything(args)) {\r\n\t\t\t\treturn 'You must specify some cron parameters for the actions to occur.';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this args object has any value other than start/end date.\r\n\t * @param args Args object to check against\r\n\t */\r\n\t_doesArgsHaveAnything(args: GenericObject) {\r\n\t\tlet ret = false;\r\n\t\tObject.keys(args).forEach(key => {\r\n\t\t\t// Will reject falsy values (including 0 as that is not an applicable value here)\r\n\t\t\t// Will also ignore start/end dates here\r\n\t\t\tif (ret || key === 'start_date' || key === 'end_date' || !args[key]) { return; }\r\n\r\n\t\t\t// For strings, trim and check if they're wildcards (0/*)\r\n\t\t\tif (typeof(args[key]) === 'string') {\r\n\t\t\t\targs[key] = (args[key] as string).trim();\r\n\t\t\t\tif (args[key] && !(args[key] === '0' || args[key] === '*')) { ret = true; }\r\n\t\t\t// For other types (int), return true (aka it's != 0)\r\n\t\t\t} else {\r\n\t\t\t\tret = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Switches between the types of scheduled task on the working scheduled task\r\n\t * (all stored locally so we don't lose information if we switch type).\r\n\t * @param type Event value from the type select.\r\n\t */\r\n\tchangeType(type: string): void {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'cron':\r\n\t\t\t\tthis.workingScheduledTask.task_trigger.args = this.cron;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'interval':\r\n\t\t\t\tthis.workingScheduledTask.task_trigger.args = this.interval;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'date':\r\n\t\t\t\tthis.workingScheduledTask.task_trigger.args = this.date;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.workingScheduledTask.task_trigger.args = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the working scheduled task's workflows from the event value.\r\n\t * @param event JS Event from workflows select2\r\n\t */\r\n\tworkflowsSelectChanged(event: any): void {\r\n\t\tthis.workingScheduledTask.workflows = event.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns today's date to be used in initializing the minimum date in our date selector.\r\n\t */\r\n\tgetToday(): string {\r\n\t\treturn moment().format('YYYY-MM-DD');\r\n\t}\r\n\r\n\t/**\r\n\t * For each value in the args object that can convert to number, convert it to number.\r\n\t * @param args Args object to check\r\n\t */\r\n\tconvertStringsToInt(args: any): void {\r\n\t\tif (typeof(args) !== 'object') { return; }\r\n\t\tfor (const [key, value] of Object.entries(args)) {\r\n\t\t\tif (key === 'start_date' || key === 'end_date') { return; }\r\n\t\t\tif (isNaN(value as number)) { return; }\r\n\t\t\targs[key] = +value;\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<label for=\\\"name\\\">Workflow(s)</label>\\r\\n\\t\\t\\t<!--No two-way binding available - ng-select2 package has it but requires transpiling-->\\r\\n\\t\\t\\t<select2 [data]=\\\"availableWorkflows\\\" [value]=\\\"workingScheduledTask.workflows\\\" [options]=\\\"workflowSelectConfig\\\"\\r\\n\\t\\t\\t\\tname=\\\"workflows\\\" tabindex=\\\"2\\\" (valueChanged)=\\\"workflowsSelectChanged($event)\\\"></select2>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.name\\\" name=\\\"name\\\" required tabindex=\\\"1\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Trigger Type</label>\\r\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.type\\\" name=\\\"type\\\" tabindex=\\\"4\\\" (change)=\\\"changeType($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"\\\"></option>\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of scheduledItemTriggerTypes\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.description\\\" name=\\\"port\\\" required tabindex=\\\"2\\\" rows=\\\"5\\\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"workingScheduledTask.task_trigger.type === 'date'\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Run Datetime</label>\\r\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [value]=\\\"workingScheduledTask.task_trigger.args.run_date | date: 'short'\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.run_date\\\"\\r\\n\\t\\t\\t\\t\\t\\tname=\\\"run_date\\\" [minMoment]=\\\"getToday()\\\" dateTimePicker required />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"workingScheduledTask.task_trigger.type === 'interval'\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Start Datetime</label>\\r\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [value]=\\\"workingScheduledTask.task_trigger.args.start_date | date: 'short'\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.start_date\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"start_date\\\" [minMoment]=\\\"getToday()\\\" dateTimePicker required />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">End Datetime</label>\\r\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [value]=\\\"workingScheduledTask.task_trigger.args.end_date | date: 'short'\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.end_date\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"end_date\\\" [minMoment]=\\\"getToday()\\\" dateTimePicker />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<h3>Occur every...</h3>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Weeks</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.weeks\\\" name=\\\"weeks\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Days</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.days\\\" name=\\\"days\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Hours</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.hours\\\" name=\\\"hours\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Minutes</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.minutes\\\" name=\\\"minutes\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Seconds</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.seconds\\\" name=\\\"seconds\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\trequired>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"workingScheduledTask.task_trigger.type === 'cron'\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Start Datetime</label>\\r\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [value]=\\\"workingScheduledTask.task_trigger.args.start_date | date: 'short'\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.start_date\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"start_date\\\" [minMoment]=\\\"getToday()\\\" dateTimePicker required />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">End Datetime</label>\\r\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" [value]=\\\"workingScheduledTask.task_trigger.args.end_date | date: 'short'\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.end_date\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"end_date\\\" [minMoment]=\\\"getToday()\\\" dateTimePicker />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Year</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.year\\\" name=\\\"year\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Day</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.day\\\" name=\\\"day\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Month</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.month\\\" name=\\\"month\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Hour</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.hour\\\" name=\\\"hour\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Week</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.week\\\" name=\\\"week\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Minute</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.minute\\\" name=\\\"minute\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-3\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Day of Week</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.day_of_week\\\" name=\\\"day_of_week\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Second</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingScheduledTask.task_trigger.args.second\\\" name=\\\"second\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div>\"","module.exports = \"/* @import '/client/node_modules/ng-pick-datetime/styles/picker.min.css'; */\\n.schedulerMain {\\n  padding: 10px 15px; }\\n.schedulerMain #schedulerStatus {\\n  display: inline-block; }\\n.schedulerMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { ScheduledTask } from '../models/scheduler/scheduledTask';\r\nimport { Playbook } from '../models/playbook/playbook';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { Workflow } from '../models/playbook/workflow';\r\n\r\nconst schedulerStatusNumberMapping: { [key: number]: string } = {\r\n\t0: 'stopped',\r\n\t1: 'running',\r\n\t2: 'paused',\r\n};\r\n\r\n@Injectable()\r\nexport class SchedulerService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\tgetSchedulerStatus(): Promise<string> {\r\n\t\treturn this.http.get('/api/scheduler')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((statusObj: any) => schedulerStatusNumberMapping[statusObj.status])\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tchangeSchedulerStatus(status: string): Promise<string> {\r\n\t\treturn this.http.put('/api/scheduler', { status })\r\n\t\t\t.toPromise()\r\n\t\t\t.then((statusObj: any) => schedulerStatusNumberMapping[statusObj.status])\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tgetAllScheduledTasks(): Promise<ScheduledTask[]> {\r\n\t\treturn this.utils.paginateAll<ScheduledTask>(this.getScheduledTasks.bind(this));\r\n\t}\r\n\r\n\tgetScheduledTasks(page: number = 1): Promise<ScheduledTask[]> {\r\n\t\treturn this.http.get(`/api/scheduledtasks?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(ScheduledTask, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\taddScheduledTask(scheduledTask: ScheduledTask): Promise<ScheduledTask> {\r\n\t\treturn this.http.post('/api/scheduledtasks', scheduledTask)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(ScheduledTask, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\teditScheduledTask(scheduledTask: ScheduledTask): Promise<ScheduledTask> {\r\n\t\treturn this.http.put('/api/scheduledtasks', scheduledTask)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(ScheduledTask, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tdeleteScheduledTask(scheduledTaskId: number): Promise<void> {\r\n\t\treturn this.http.delete(`/api/scheduledtasks/${scheduledTaskId}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tchangeScheduledTaskStatus(scheduledTaskId: number, actionName: string): Promise<void> {\r\n\t\treturn this.http.patch('/api/scheduledtasks', { id: scheduledTaskId, action: actionName })\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tgetWorkflows(): Promise<Workflow[]> {\r\n\t\treturn this.http.get('/api/workflows')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data) => plainToClass(Workflow, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { SettingsService } from './settings.service';\r\n\r\nimport { SettingsUserModalComponent } from './settings.user.modal.component';\r\n\r\nimport { Configuration } from '../models/configuration';\r\nimport { User } from '../models/user';\r\nimport { WorkingUser } from '../models/workingUser';\r\nimport { Role } from '../models/role';\r\nimport { SettingsTimeoutModalComponent } from './settings.timeout.modal.component';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Component({\r\n\tselector: 'settings-component',\r\n\ttemplateUrl: './settings.html',\r\n\tstyleUrls: [\r\n\t\t'./settings.scss',\r\n\t],\r\n\tproviders: [SettingsService],\r\n})\r\nexport class SettingsComponent {\r\n\tconfiguration: Configuration = new Configuration();\r\n\r\n\t//User Data Table params\r\n\tusers: User[] = [];\r\n\tdisplayUsers: User[] = [];\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\troles: Role[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate settingsService: SettingsService, private modalService: NgbModal,\r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService,\r\n\t) {\r\n\r\n\t\tthis.getConfiguration();\r\n\t\tthis.getUsers();\r\n\t\tthis.getRoles();\r\n\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterUsers());\r\n\t}\r\n\r\n\tfilterUsers() {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayUsers = this.users.filter((user) => {\r\n\t\t\treturn user.username.toLocaleLowerCase().includes(searchFilter);\r\n\t\t});\r\n\t}\r\n\r\n\t// System Settings\r\n\tgetConfiguration(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.getConfiguration()\r\n\t\t\t.then(configuration => {\r\n\t\t\t\tObject.assign(this.configuration, configuration);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\tupdateConfiguration(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.updateConfiguration(this.configuration)\r\n\t\t\t.then((configuration) => {\r\n\t\t\t\tObject.assign(this.configuration, configuration);\r\n\t\t\t\tthis.toastrService.success('Configuration successfully updated.');\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\t//TODO: add a better confirm dialog\r\n\tresetConfiguration(): void {\r\n\t\tif (!confirm(\"Are you sure you want to reset the configuration? \\\r\n\t\t\tNote that you'll have to save the configuration after reset to update it on the server.\")) { return; }\r\n\r\n\t\tObject.assign(this.configuration, Configuration.getDefaultConfiguration());\r\n\t}\r\n\r\n\tgetRoles(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.getRoles()\r\n\t\t\t.then(roles => this.roles = roles)\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving roles: ${e.message}`));\r\n\t}\r\n\r\n\tgetUsers(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.getAllUsers()\r\n\t\t\t.then(users => this.displayUsers = this.users = users)\r\n\t\t\t.catch(e => this.toastrService.error(`Error retrieving users: ${e.message}`));\r\n\t}\r\n\r\n\taddUser(): void {\r\n\t\tconst modalRef = this.modalService.open(SettingsUserModalComponent);\r\n\t\tmodalRef.componentInstance.title = 'Add New User';\r\n\t\tmodalRef.componentInstance.submitText = 'Add User';\r\n\t\tmodalRef.componentInstance.roles = this.roles;\r\n\r\n\t\tconst workingUser = new WorkingUser();\r\n\t\tworkingUser.active = true;\r\n\t\tmodalRef.componentInstance.workingUser = workingUser;\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\teditTimeout(): void {\r\n\t\tconst modalRef = this.modalService.open(SettingsTimeoutModalComponent);\r\n\t\tmodalRef.componentInstance.configuration = this.configuration;\r\n\t\tmodalRef.result.then(() => this.updateConfiguration()).catch(() => null)\r\n\t}\r\n\r\n\teditUser(user: User): void {\r\n\t\tconst modalRef = this.modalService.open(SettingsUserModalComponent);\r\n\t\tmodalRef.componentInstance.title = `Edit User: ${user.username}`;\r\n\t\tmodalRef.componentInstance.submitText = 'Save Changes';\r\n\t\tmodalRef.componentInstance.roles = this.roles;\r\n\t\tmodalRef.componentInstance.workingUser = WorkingUser.fromUser(user);\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\tasync deleteUser(userToDelete: User) {\r\n\t\tawait this.utils.confirm(`Are you sure you want to delete <b>${userToDelete.username}</b>?`)\r\n\r\n\t\tthis.settingsService\r\n\t\t\t.deleteUser(userToDelete.id)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.users = this.users.filter(user => user.id !== userToDelete.id);\r\n\r\n\t\t\t\tthis.filterUsers();\r\n\r\n\t\t\t\tthis.toastrService.success(`User \"${userToDelete.username}\" successfully deleted.`);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\tgetFriendlyRoles(roles: Role[]): string {\r\n\t\treturn roles.map(r => r.name).join(', ');\r\n\t}\r\n\r\n\tgetFriendlyBool(val: boolean): string {\r\n\t\treturn val ? 'Yes' : 'No';\r\n\t}\r\n\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => {\r\n\t\t\t\t//Handle modal dismiss\r\n\t\t\t\tif (!result || !result.user) { return; }\r\n\r\n\t\t\t\t//On edit, find and update the edited item\r\n\t\t\t\tif (result.isEdit) {\r\n\t\t\t\t\tconst toUpdate = this.users.find(u => u.id === result.user.id);\r\n\t\t\t\t\tObject.assign(toUpdate, result.user);\r\n\r\n\t\t\t\t\tthis.filterUsers();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`User \"${result.user.username}\" successfully edited.`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.users.push(result.user);\r\n\r\n\t\t\t\t\tthis.filterUsers();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`User \"${result.user.username}\" successfully added.`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<div id=\\\"main\\\" class=\\\"settingsMain\\\">\\r\\n    <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n        <li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\"href=\\\"#containerSettings\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">Container Settings</a></li>\\r\\n        <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"href=\\\"#userSettings\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">User Settings</a></li>\\r\\n        <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"href=\\\"#roleSettings\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">Role Settings</a></li>\\r\\n    </ul>\\r\\n    <div class=\\\"tab-content\\\">\\r\\n        <div id=\\\"containerSettings\\\" class=\\\"tab-pane fade show active\\\">\\r\\n            <h1 class=\\\"settingsHeader\\\">Container Settings</h1>\\r\\n            <div class=\\\"d-flex justify-content-center align-items-center mt-5\\\">\\r\\n                    <div class=\\\"card bg-light border-0 shadow-sm w-50\\\">\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <h4 class=\\\"mb-3\\\">Portainer.io</h4>\\r\\n                                <p>\\r\\n                                    Docker stack management and logs are provided by <a href=\\\"https://www.portainer.io/\\\" target=\\\"_blank\\\">portainer.io</a>.\\r\\n                                    Use the button below to view container information for this WALKOFF instance.\\r\\n                                </p>\\r\\n                                <p class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n                                    <a class=\\\"btn btn-primary\\\" href=\\\"/portainer/\\\" target=\\\"_blank\\\">Manage Stack</a>\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"userSettings\\\" class=\\\"tab-pane fade\\\">\\r\\n            <h1 class=\\\"settingsHeader\\\">User Settings</h1>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <button (click)=\\\"addUser()\\\" class=\\\"btn btn-outline-primary mx-1\\\"><i class=\\\"fa fa-plus\\\"></i> Add User</button>\\r\\n                    <button (click)=\\\"editTimeout()\\\" class=\\\"btn btn-outline-primary mx-1\\\">Timeout Settings</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <div class=\\\"form-group d-flex justify-content-end\\\">\\r\\n                        <div class=\\\"col-8 px-0\\\">\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"Filter Users...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <ngx-datatable #userTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayUsers\\\"\\r\\n             [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"undefined\\\" [sortType]=\\\"'multi'\\\" [sorts]=\\\"[{prop: 'username', dir: 'asc'}]\\\" [limit]=\\\"10\\\">\\r\\n                <!-- Column Templates -->\\r\\n                <ngx-datatable-column name=\\\"Username\\\" prop=\\\"username\\\" [flexGrow]=\\\"3\\\"></ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Roles\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"3\\\">\\r\\n                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        {{getFriendlyRoles(row.roles)}}\\r\\n                    </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Active\\\" prop=\\\"active\\\" [flexGrow]=\\\"1\\\">\\r\\n                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        {{getFriendlyBool(row.active)}}\\r\\n                    </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <button (click)=\\\"editUser(row)\\\" class=\\\"btn btn-primary mx-1\\\" ngbTooltip=\\\"Edit User\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                        </button>\\r\\n                        <button (click)=\\\"deleteUser(row)\\\" class=\\\"btn btn-danger mx-1\\\" ngbTooltip=\\\"Delete User\\\">\\r\\n                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                        </button>\\r\\n                    </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n            </ngx-datatable>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"roleSettings\\\" class=\\\"tab-pane fade\\\">\\r\\n            <settings-roles-component></settings-roles-component>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { SettingsService } from './settings.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { SettingsRoleModalComponent } from './settings.roles.modal.component';\r\n\r\nimport { Role } from '../models/role';\r\nimport { AvailableResourceAction } from '../models/availableResourceAction';\r\nimport { GenericObject } from '../models/genericObject';\r\n\r\n@Component({\r\n\tselector: 'settings-roles-component',\r\n\ttemplateUrl: './settings.roles.html',\r\n\tstyleUrls: [\r\n\t\t'./settings.scss',\r\n\t],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tproviders: [SettingsService],\r\n})\r\nexport class SettingsRolesComponent {\r\n\tavailableResourceActions: AvailableResourceAction[] = [];\r\n\t//Role Data Table params\r\n\troles: Role[] = [];\r\n\tdisplayRoles: Role[] = [];\r\n\tfilterQuery: FormControl = new FormControl();\r\n\r\n\tconstructor(\r\n\t\tprivate settingsService: SettingsService, private modalService: NgbModal,\r\n\t\tprivate toastrService: ToastrService, private utils: UtilitiesService,\r\n\t) {\r\n\r\n\t\tthis.getAvailableResourceActions();\r\n\t\tthis.getRoles();\r\n\r\n\t\tthis.filterQuery\r\n\t\t\t.valueChanges\r\n\t\t\t.debounceTime(500)\r\n\t\t\t.subscribe(event => this.filterRoles());\r\n\t}\r\n\r\n\tfilterRoles() {\r\n\t\tconst searchFilter = this.filterQuery.value ? this.filterQuery.value.toLocaleLowerCase() : '';\r\n\r\n\t\tthis.displayRoles = this.roles.filter((user) => {\r\n\t\t\treturn user.name.toLocaleLowerCase().includes(searchFilter);\r\n\t\t});\r\n\t}\r\n\r\n\tgetAvailableResourceActions(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.getAvailableResourceActions()\r\n\t\t\t.then(availableResourceActions => this.availableResourceActions = availableResourceActions)\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\tgetRoles(): void {\r\n\t\tthis.settingsService\r\n\t\t\t.getRoles()\r\n\t\t\t.then(roles => this.displayRoles = this.roles = roles)\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\taddRole(): void {\r\n\t\tconst modalRef = this.modalService.open(SettingsRoleModalComponent);\r\n\t\tmodalRef.componentInstance.title = 'Add New Role';\r\n\t\tmodalRef.componentInstance.submitText = 'Add Role';\r\n\t\tmodalRef.componentInstance.availableResourceActions = this.availableResourceActions;\r\n\t\tmodalRef.componentInstance.workingRole = new Role();\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\teditRole(role: Role): void {\r\n\t\tconst modalRef = this.modalService.open(SettingsRoleModalComponent);\r\n\t\tmodalRef.componentInstance.title = `Edit Role: ${role.name}`;\r\n\t\tmodalRef.componentInstance.submitText = 'Save Changes';\r\n\t\tmodalRef.componentInstance.availableResourceActions = this.availableResourceActions;\r\n\t\tmodalRef.componentInstance.workingRole = this.utils.cloneDeep(role);\r\n\r\n\t\tthis._handleModalClose(modalRef);\r\n\t}\r\n\r\n\tasync deleteRole(roleToDelete: Role) {\r\n\t\tawait this.utils.confirm(`Are you sure you want to delete <b>${roleToDelete.name}</b>?`)\r\n\r\n\t\tthis.settingsService\r\n\t\t\t.deleteRole(roleToDelete.id)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.roles = this.roles.filter(role => role.id !== roleToDelete.id);\r\n\r\n\t\t\t\tthis.filterRoles();\r\n\r\n\t\t\t\tthis.toastrService.success(`Role \"${roleToDelete.name}\" successfully deleted.`);\r\n\t\t\t})\r\n\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t}\r\n\r\n\tgetFriendlyPermissions(role: Role): string {\r\n\t\tconst obj = role.resources.reduce((accumulator: GenericObject, resource) => {\r\n\t\t\tlet key = resource.name;\r\n\t\t\tif (resource.app_name) { key += ` - ${resource.app_name}`; }\r\n\r\n\t\t\taccumulator[key] = resource.permissions;\r\n\t\t\treturn accumulator;\r\n\t\t}, {});\r\n\r\n\t\tlet out = JSON.stringify(obj, null, 1);\r\n\t\tout = out.replace(/[\\{\\}\"]/g, '').trim();\r\n\t\treturn out;\r\n\t}\r\n\r\n\tprivate _handleModalClose(modalRef: NgbModalRef): void {\r\n\t\tmodalRef.result\r\n\t\t\t.then((result) => {\r\n\t\t\t\t//Handle modal dismiss\r\n\t\t\t\tif (!result || !result.role) { return; }\r\n\r\n\t\t\t\t//On edit, find and update the edited item\r\n\t\t\t\tif (result.isEdit) {\r\n\t\t\t\t\tconst toUpdate = this.roles.find(r => r.id === result.role.id);\r\n\t\t\t\t\tObject.assign(toUpdate, result.role);\r\n\r\n\t\t\t\t\tthis.filterRoles();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Role \"${result.role.name}\" successfully edited.`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.roles.push(result.role);\r\n\r\n\t\t\t\t\tthis.filterRoles();\r\n\r\n\t\t\t\t\tthis.toastrService.success(`Role \"${result.role.name}\" successfully added.`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => { if (error) { this.toastrService.error(error.message); } });\r\n\t}\r\n}\r\n","module.exports = \"<h1 class=\\\"settingsHeader\\\">\\r\\n\\tRole Settings</h1>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<button (click)=\\\"addRole()\\\" class=\\\"btn btn-outline-primary\\\">\\r\\n\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i> Add Role</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<div class=\\\"form-group d-flex justify-content-end\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-8 px-0\\\">\\r\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Filter Roles...\\\" [formControl]=\\\"filterQuery\\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ngx-datatable #roleTable class='material expandable' [columnMode]=\\\"'flex'\\\" [rows]=\\\"displayRoles\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n [rowHeight]=\\\"undefined\\\" [sorts]=\\\"[{prop: 'name', dir: 'asc'}]\\\" [limit]=\\\"10\\\">\\r\\n\\t<!-- Column Templates -->\\r\\n\\t<ngx-datatable-column name=\\\"Role Name\\\" prop=\\\"name\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\r\\n\\t<ngx-datatable-column name=\\\"Permissions\\\" [sortable]=\\\"false\\\" [flexGrow]=\\\"5\\\">\\r\\n\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t<div *ngFor=\\\"let resource of row.resources\\\">\\r\\n\\t\\t\\t\\t{{resource.name}}: {{resource.permissions.join(', ')}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-template>\\r\\n\\t</ngx-datatable-column>\\r\\n\\t<ngx-datatable-column name=\\\"Actions\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [flexGrow]=\\\"2\\\">\\r\\n\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t<button (click)=\\\"editRole(row)\\\" class=\\\"btn btn-primary mx-1\\\" ngbTooltip=\\\"Edit Role\\\" [disabled]=\\\"row.name === 'admin'\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-edit\\\"></i>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button (click)=\\\"deleteRole(row)\\\" class=\\\"btn btn-danger mx-1\\\" ngbTooltip=\\\"Delete Role\\\" [disabled]=\\\"row.name === 'admin'\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-times\\\"></i>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</ng-template>\\r\\n\\t</ngx-datatable-column>\\r\\n</ngx-datatable>\"","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Select2OptionData } from 'ng2-select2';\r\n\r\nimport { SettingsService } from './settings.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { Role } from '../models/role';\r\nimport { AvailableResourceAction } from '../models/availableResourceAction';\r\nimport { Resource } from '../models/resource';\r\n\r\n@Component({\r\n\tselector: 'settings-role-modal',\r\n\ttemplateUrl: './settings.roles.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./settings.scss',\r\n\t],\r\n\tproviders: [SettingsService, UtilitiesService],\r\n})\r\nexport class SettingsRoleModalComponent {\r\n\t@Input() workingRole: Role;\r\n\t@Input() title: string;\r\n\t@Input() submitText: string;\r\n\t@Input() availableResourceActions: AvailableResourceAction[];\r\n\r\n\tresourceNames: string[] = [];\r\n\tselectPermissionMapping: { [key: string]: Select2OptionData[] } = {};\r\n\tpermissionSelectConfig: Select2Options;\r\n\tnewResourceTempIdTracker: number = -1;\r\n\tselectedAvailableResourceActionName: string;\r\n\r\n\tconstructor(\r\n\t\tprivate settingsService: SettingsService, public activeModal: NgbActiveModal,\r\n\t\tprivate toastrService: ToastrService,\r\n\t\tprivate utils: UtilitiesService,\r\n\t) {\r\n\r\n\t\tthis.permissionSelectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select permission(s) for this resource',\r\n\t\t\tmultiple: true,\r\n\t\t\tallowClear: true,\r\n\t\t\tcloseOnSelect: false,\r\n\t\t};\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.availableResourceActions.forEach(ara => {\r\n\t\t\tlet typeName = ara.name;\r\n\r\n\t\t\tif (ara.app_name) { typeName += ` - ${ara.app_name}`; }\r\n\r\n\t\t\tthis.resourceNames.push(typeName);\r\n\t\t});\r\n\r\n\t\t// On init, set up our select2 stuff first\r\n\t\tthis.workingRole.resources.forEach(resource => {\r\n\t\t\tconst matchingAvailableResourceAction = this.availableResourceActions\r\n\t\t\t\t.find(a => a.name === resource.name && a.app_name === resource.app_name);\r\n\r\n\t\t\tthis.selectPermissionMapping[resource.resource_id] = matchingAvailableResourceAction.actions.map(action => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: action,\r\n\t\t\t\t\ttext: action,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddResource(): void {\r\n\t\tconst selectedAvailableResourceAction = this.availableResourceActions.find(a => {\r\n\t\t\tconst selectedInfo = this.selectedAvailableResourceActionName.split(' - ');\r\n\t\t\tif (selectedInfo.length === 1) { return a.name === selectedInfo[0]; }\r\n\t\t\treturn a.name === selectedInfo[0] && a.app_name === selectedInfo[1];\r\n\t\t});\r\n\r\n\t\tconst newResource: Resource = {\r\n\t\t\tresource_id: this.newResourceTempIdTracker--,\r\n\t\t\trole_id: this.workingRole.id,\r\n\t\t\tname: selectedAvailableResourceAction.name,\r\n\t\t\tpermissions: [],\r\n\t\t};\r\n\r\n\t\tif (selectedAvailableResourceAction.app_name) { newResource.app_name = selectedAvailableResourceAction.app_name; }\r\n\r\n\t\tthis.selectPermissionMapping[newResource.resource_id] = selectedAvailableResourceAction.actions.map(action => {\r\n\t\t\treturn {\r\n\t\t\t\tid: action,\r\n\t\t\t\ttext: action,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.workingRole.resources.push(newResource);\r\n\t}\r\n\r\n\tremoveResource(resource: Resource): void {\r\n\t\tthis.workingRole.resources.splice(this.workingRole.resources.indexOf(resource), 1);\r\n\t\t// delete this.selectPermissionMapping[resource.resource_id];\r\n\t}\r\n\r\n\tpermissionSelectChange(event: any, resource: Resource) {\r\n\t\tresource.permissions = event.value;\r\n\t}\r\n\r\n\tsubmit(): void {\r\n\t\tconst validationMessage = this.validate();\r\n\t\tif (validationMessage) {\r\n\t\t\tthis.toastrService.error(validationMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst toSubmit: Role = this.utils.cloneDeep(this.workingRole);\r\n\t\t\r\n\t\t// Remove temp Ids for new resources\r\n\t\ttoSubmit.resources.forEach(resource => {\r\n\t\t\tif (resource.resource_id < 0) { delete resource.resource_id; }\r\n\t\t});\r\n\r\n\t\t//If role has an ID, it already exists, call update\r\n\t\tif (toSubmit.id) {\r\n\t\t\tthis.settingsService\r\n\t\t\t\t.editRole(toSubmit)\r\n\t\t\t\t.then(role => this.activeModal.close({\r\n\t\t\t\t\trole,\r\n\t\t\t\t\tisEdit: true,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t} else {\r\n\t\t\tthis.settingsService\r\n\t\t\t\t.addRole(toSubmit)\r\n\t\t\t\t.then(role => this.activeModal.close({\r\n\t\t\t\t\trole,\r\n\t\t\t\t\tisEdit: false,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(): string {\r\n\t\treturn '';\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n</div>\\r\\n<div id=\\\"roleModalBody\\\" class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<form #roleForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tName\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingRole.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!name.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tName is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingRole.description\\\" name=\\\"ip\\\" tabindex=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<label>Resource</label>\\r\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAvailableResourceActionName\\\" name=\\\"selectedAvailableResourceActionName\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let i of resourceNames\\\" [value]=\\\"i\\\" [label]=\\\"i\\\">{{i}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addResource()\\\" [disabled]=\\\"!selectedAvailableResourceActionName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>Add Resource\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"resourceGroup form-group {{id % 2 ? 'odd' : 'even'}}\\\" *ngFor=\\\"let resource of workingRole.resources; let id = index\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Resource {{id+1}}: {{resource.name}}{{resource.app_name ? ' (' + resource.app_name + ')' : ''}}</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"removeResource(resource)\\\" title=\\\"Remove Resource\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<select2 [data]=\\\"selectPermissionMapping[resource.resource_id]\\\" [value]=\\\"resource.permissions\\\" [options]=\\\"permissionSelectConfig\\\"\\r\\n\\t\\t\\t\\t (valueChanged)=\\\"permissionSelectChange($event, resource)\\\"></select2>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!roleForm.form.valid\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div>\"","module.exports = \".settingsMain {\\n  padding: 10px 15px; }\\n\\n.settingsMain ngx-datatable datatable-body datatable-body-row datatable-body-cell .datatable-body-cell-label {\\n  white-space: initial; }\\n\\n#roleModalBody .resourceGroup {\\n  padding: 5px; }\\n\\n#roleModalBody .resourceGroup.odd {\\n  background-color: #EEE; }\\n\\n#roleModalBody .resourceGroup .row {\\n  padding-bottom: 5px; }\\n\\n#roleModalBody .required,\\n#userModalBody .required {\\n  color: crimson;\\n  margin-left: 5px; }\\n\\n.settingsMain input[type=checkbox].form-control,\\n.settingsMain input[type=radio].form-control,\\n#userModalBody input[type=checkbox].form-control,\\n#userModalBody input[type=radio].form-control {\\n  width: 34px;\\n  margin: 0 5px; }\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\nimport { Configuration } from '../models/configuration';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { AvailableResourceAction } from '../models/availableResourceAction';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n\tconstructor (private http: HttpClient, private utils: UtilitiesService) {}\r\n\r\n\tgetConfiguration(): Promise<Configuration> {\r\n\t\treturn this.http.get('/api/settings')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Configuration, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tupdateConfiguration(configuration: Configuration): Promise<Configuration> {\r\n\t\treturn this.http.put('/api/settings', configuration)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Configuration, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tgetAllUsers(): Promise<User[]> {\r\n\t\treturn this.utils.paginateAll<User>(this.getUsers.bind(this));\r\n\t}\r\n\r\n\tgetUsers(page: number = 1): Promise<User[]> {\r\n\t\treturn this.http.get(`/api/users?page=${ page }`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(User, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\taddUser(user: User): Promise<User> {\r\n\t\treturn this.http.post('/api/users', user)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(User, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\teditUser(user: User): Promise<User> {\r\n\t\treturn this.http.put(`/api/users/${user.id}`, user)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(User, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tdeleteUser(id: number): Promise<void> {\r\n\t\treturn this.http.delete(`/api/users/${id}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tgetRoles(): Promise<Role[]> {\r\n\t\treturn this.http.get('/api/roles')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(Role, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\taddRole(role: Role): Promise<Role> {\r\n\t\treturn this.http.post('/api/roles', role)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Role, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\teditRole(role: Role): Promise<Role> {\r\n\t\treturn this.http.put(`/api/roles/${role.id}`, role)\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object) => plainToClass(Role, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tdeleteRole(id: number): Promise<void> {\r\n\t\treturn this.http.delete(`/api/roles/${id}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => null)\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n\r\n\tgetAvailableResourceActions(): Promise<AvailableResourceAction[]> {\r\n\t\t// const testData: AvailableResourceAction[] = [\r\n\t\t// \t{\r\n\t\t// \t\tname: 'workflow',\r\n\t\t// \t\tactions: [ 'create', 'read', 'update', 'delete', 'execute' ],\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tname: 'device',\r\n\t\t// \t\tactions: [ 'create', 'read', 'update', 'delete', 'import', 'export' ],\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tname: 'user',\r\n\t\t// \t\tactions: [ 'create', 'read', 'update', 'delete' ],\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tname: 'case',\r\n\t\t// \t\tactions: [ 'create', 'read', 'update', 'delete' ],\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tname: 'test',\r\n\t\t// \t\tactions: ['some', 'actions', 'go', 'here'],\r\n\t\t// \t\tapp_name: 'Utilities',\r\n\t\t// \t},\r\n\t\t// ];\r\n\r\n\t\t// return Promise.resolve(testData);\r\n\t\treturn this.http.get('/api/availableresourceactions')\r\n\t\t\t.toPromise()\r\n\t\t\t.then((data: object[]) => plainToClass(AvailableResourceAction, data))\r\n\t\t\t.catch(this.utils.handleResponseError);\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { SettingsService } from './settings.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { WorkingUser } from '../models/workingUser';\r\nimport { Configuration } from '../models/configuration';\r\n\r\n@Component({\r\n\tselector: 'timeout-modal',\r\n\ttemplateUrl: './settings.timeout.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./settings.scss',\r\n\t],\r\n\tproviders: [SettingsService, UtilitiesService],\r\n})\r\nexport class SettingsTimeoutModalComponent {\r\n\t@Input() configuration: Configuration;\r\n\r\n\tconstructor(public activeModal: NgbActiveModal) {}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Timeout Settings</h4>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"access_token_duration\\\">JWT Access Token Duration (in minutes)</label>\\r\\n                    <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"configuration.access_token_duration\\\" name=\\\"access_token_duration\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"refresh_token_duration\\\">JWT Refresh Token Duration (in days)</label>\\r\\n                    <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"configuration.refresh_token_duration\\\" name=\\\"refresh_token_duration\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Close</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.close(configuration)\\\">Save</button>\\r\\n</div>\"","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { SettingsService } from './settings.service';\r\nimport { UtilitiesService } from '../utilities.service';\r\n\r\nimport { WorkingUser } from '../models/workingUser';\r\nimport { Role } from '../models/role';\r\nimport { Select2OptionData } from 'ng2-select2/ng2-select2.interface';\r\n\r\n@Component({\r\n\tselector: 'user-modal',\r\n\ttemplateUrl: './settings.user.modal.html',\r\n\tstyleUrls: [\r\n\t\t'./settings.scss',\r\n\t],\r\n\tproviders: [SettingsService, UtilitiesService],\r\n})\r\nexport class SettingsUserModalComponent {\r\n\t@Input() workingUser: WorkingUser;\r\n\t@Input() title: string;\r\n\t@Input() submitText: string;\r\n\t@Input() roles: Role[];\r\n\r\n\troleSelectData: Select2OptionData[];\r\n\troleSelectConfig: Select2Options;\r\n\troleSelectInitialValue: number[];\r\n\r\n\tconstructor(\r\n\t\tprivate settingsService: SettingsService, public activeModal: NgbActiveModal,\r\n\t\tprivate toastrService: ToastrService, ) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.roleSelectData = this.roles.map((role) => {\r\n\t\t\treturn { id: role.id.toString(), text: role.name };\r\n\t\t});\r\n\r\n\t\tthis.roleSelectConfig = {\r\n\t\t\twidth: '100%',\r\n\t\t\tplaceholder: 'Select role(s)',\r\n\t\t\tmultiple: true,\r\n\t\t\tallowClear: true,\r\n\t\t\tcloseOnSelect: false,\r\n\t\t};\r\n\r\n\t\tif (!this.workingUser.role_ids) { this.workingUser.role_ids = []; }\r\n\t\tthis.roleSelectInitialValue = JSON.parse(JSON.stringify(this.workingUser.role_ids));\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired on the select2 change for roles. Updates the value based on the event value.\r\n\t * @param $event JS Event Fired\r\n\t */\r\n\troleSelectChange($event: any): void {\r\n\t\t// Convert strings to numbers here\r\n\t\tthis.workingUser.role_ids = $event.value.map((id: string) => +id);\r\n\t}\r\n\r\n\tsubmit(): void {\r\n\t\tconst validationMessage = this.validate();\r\n\t\tif (validationMessage) {\r\n\t\t\tthis.toastrService.error(validationMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst toSubmit = WorkingUser.toUser(this.workingUser);\r\n\r\n\t\t//If user has an ID, user already exists, call update\r\n\t\tif (toSubmit.id) {\r\n\t\t\tthis.settingsService\r\n\t\t\t\t.editUser(toSubmit)\r\n\t\t\t\t.then(user => this.activeModal.close({\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tisEdit: true,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t} else {\r\n\t\t\tthis.settingsService\r\n\t\t\t\t.addUser(toSubmit)\r\n\t\t\t\t.then(user => this.activeModal.close({\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tisEdit: false,\r\n\t\t\t\t}))\r\n\t\t\t\t.catch(e => this.toastrService.error(e.message));\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(): string {\r\n\t\tif (!this.workingUser) { return 'User is not specified.'; }\r\n\t\tif (!this.workingUser.id && !this.workingUser.newPassword) { return 'You must specify a password.'; }\r\n\t\tif (this.workingUser.confirmNewPassword !== this.workingUser.newPassword) { return 'Passwords do not match.'; }\r\n\r\n\t\treturn '';\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n</div>\\r\\n<div id=\\\"userModalBody\\\" class=\\\"modal-body\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"username\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tUsername <i class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"username.touched && username.invalid\\\" [(ngModel)]=\\\"workingUser.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tUsername is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"role_ids\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tRoles <i class=\\\"fa fa-asterisk required\\\" title=\\\"At least one role is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<select2 [data]=\\\"roleSelectData\\\" [value]=\\\"roleSelectInitialValue\\\" [options]=\\\"roleSelectConfig\\\"\\r\\n\\t\\t\\t\\t\\t\\t(valueChanged)=\\\"roleSelectChange($event)\\\"></select2>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"switch\\\" [(ngModel)]=\\\"workingUser.active\\\" name=\\\"is_active\\\" id=\\\"is_active\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"m-0\\\" for=\\\"is_active\\\">{{ workingUser.active ? 'Active' : 'Inactive'}}</label>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"workingUser.id\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"currentPassword\\\">Current Password</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingUser.currentPassword\\\" #currentPassword=\\\"ngModel\\\" name=\\\"currentPassword\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"currentPassword.errors && (currentPassword.dirty || currentPassword.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!currentPassword.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tThe user's current password is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"newPassword\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tNew Password\\r\\n\\t\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"!this.workingUser.id\\\" class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingUser.newPassword\\\" #newPassword=\\\"ngModel\\\" name=\\\"newPassword\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(!workingUser.id || workingUser.currentPassword) && (newPassword.dirty || newPassword.touched) && !newPassword.value\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPassword is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"confirmNewPassword\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tConfirm New Password\\r\\n\\t\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"!this.workingUser.id\\\" class=\\\"fa fa-asterisk required\\\" title=\\\"This field is required.\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"workingUser.confirmNewPassword\\\" #confirmNewPassword=\\\"ngModel\\\" name=\\\"confirmNewPassword\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"confirmNewPassword.dirty && confirmNewPassword.touched && confirmNewPassword.value && newPassword.value !== confirmNewPassword.value\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPasswords do not match.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"confirmNewPassword.dirty && confirmNewPassword.touched && !confirmNewPassword.value\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tYou must re-enter the new password to confirm.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">Undo Changes and Close</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userForm.form.valid || !workingUser.role_ids.length\\\" (click)=\\\"submit()\\\">{{submitText}}</button>\\r\\n</div>\"","import { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UtilitiesService {\r\n\t/**\r\n\t * Returns a truncated input sting based on the length inputted.\r\n\t * Will simply return input if input length is less than or equal the length of the specified length.\r\n\t * @param input String to truncate, if applicable\r\n\t * @param length Length of truncated string (not including the ellipsis appended)\r\n\t * @param def Default value to use if the string is null of whitespace\r\n\t */\r\n\tgetTruncatedString(input: string, length: number, def?: string): string {\r\n\t\tinput = this.getDefaultString(input, def);\r\n\t\tif (input.length <= length) { return input; }\r\n\t\treturn input.substr(0, length) + '...';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a trimmed and defaulted (if empty) string.\r\n\t * @param input String to return trimmed or defaulted\r\n\t * @param def Default value to use if the string is null of whitespace\r\n\t */\r\n\tgetDefaultString(input: string, def?: string) {\r\n\t\tif (!input) { input = ''; }\r\n\t\tconst trimmed = input.trim();\r\n\t\tif (!trimmed) {\r\n\t\t\tif (def) { return def; }\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn trimmed;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current datetime as an ISO string\r\n\t */\r\n\tgetCurrentIsoString(): string {\r\n\t\treturn moment.utc().toISOString();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a locale string for a given UTC datetime object or string.\r\n\t * @param time Inputted date object or string representation of a UTC time\r\n\t */\r\n\tgetLocalTime(time: Date | string): string {\r\n\t\treturn moment.utc(time).local().toLocaleString();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets a relative time string for a given UTC datetime object or string (e.g. 5 hours ago).\r\n\t * @param time Inputted date object or string representation of a UTC time\r\n\t */\r\n\tgetRelativeLocalTime(time: Date | string): string {\r\n\t\treturn moment.utc(time).local().fromNow();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones JSON into a new value.\r\n\t * @param val Value to clone\r\n\t */\r\n\tcloneDeep<T>(val: T): T {\r\n\t\treturn JSON.parse(JSON.stringify(val));\r\n\t}\r\n\r\n\tpaginateAll<T>(serviceCall: (p: number) => Promise<T[]>, page: number = 1, allResults : T[] = []): Promise<T[]> {\r\n\t\treturn serviceCall(page).then(results => {\r\n\t\t\tif (results.length > 0) return this.paginateAll(serviceCall, page + 1, allResults.concat(results));\r\n\t\t\telse return allResults;\r\n\t\t})\r\n\t}\r\n\r\n\textractResponseData (res: Response) {\r\n\t\tconst body = res.json();\r\n\t\treturn body || {};\r\n\t}\r\n\r\n\thandleResponseError (error: Response | any): Promise<any> {\r\n\t\tlet errMsg: string;\r\n\t\tlet err: string;\r\n\t\tif (error instanceof Response) {\r\n\t\t\tconst body = error.json() || '';\r\n\t\t\terr = body.error || body.detail || JSON.stringify(body);\r\n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n\t\t} else {\r\n\t\t\terr = errMsg = error.message ? error.message : error.toString();\r\n\t\t}\r\n\t\t// console.error(errMsg);\r\n\t\tthrow new Error(err);\r\n\t}\r\n\r\n\talert(message: string, options: {} = {}) : Promise<boolean> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst defaults = {\r\n\t\t\t\tmessage,\r\n\t\t\t\tbackdrop: true,\r\n\t\t\t\tclassName: \"mt-5 pt-5\",\r\n\t\t\t\tcallback: () => { resolve() } \r\n\t\t\t}\r\n\t\t\tbootbox.alert(Object.assign({}, defaults, options));\r\n\t\t})\r\n\t}\r\n\r\n\tconfirm(message: string, options: {} = {}) : Promise<boolean> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst defaults = {\r\n\t\t\t\tmessage,\r\n\t\t\t\tbackdrop: true,\r\n\t\t\t\tclassName: \"mt-5 pt-5\",\r\n\t\t\t\tcallback: (result) => { if(result) resolve(result) } \r\n\t\t\t}\r\n\t\t\tbootbox.confirm(Object.assign({}, defaults, options));\r\n\t\t})\r\n\t}\r\n\r\n\tprompt(title: string, options: {} = {}) : Promise<any> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst defaults = {\r\n\t\t\t\ttitle,\r\n\t\t\t\tbackdrop: true,\r\n\t\t\t\tclassName: \"mt-5 pt-5\",\r\n\t\t\t\tcallback: (result) => { if(result) resolve(result) } \r\n\t\t\t}\r\n\t\t\tbootbox.prompt(Object.assign({}, defaults, options));\r\n\t\t})\r\n\t}\r\n\r\n\treadUploadedFileAsText(inputFile: File): Promise<string> {\r\n\t\tconst temporaryFileReader = new FileReader();\r\n\t  \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t  temporaryFileReader.onerror = () => {\r\n\t\t\ttemporaryFileReader.abort();\r\n\t\t\treject(new DOMException(\"Problem parsing input file.\"));\r\n\t\t  };\r\n\t  \r\n\t\t  temporaryFileReader.onload = () => {\r\n\t\t\tresolve(temporaryFileReader.result as string);\r\n\t\t  };\r\n\t\t  temporaryFileReader.readAsText(inputFile);\r\n\t\t});\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { MainModule } from './app/main.module';\r\nimport { environment } from './environments/environment';\r\n\r\ndocument.addEventListener('DOMContentLoaded', event => {\r\n    if (sessionStorage.getItem('refresh_token')) {\r\n\r\n        if (environment.production) {\r\n            enableProdMode();\r\n        }\r\n\r\n        platformBrowserDynamic().bootstrapModule(MainModule)\r\n            .catch(err => console.log(err));\r\n    }\r\n    else { location.href = '/login'; }\r\n});"],"sourceRoot":""}