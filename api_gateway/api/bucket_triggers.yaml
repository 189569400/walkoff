/buckets/{bucket_id}/triggers:
  get:
    tags:
      - BucketTrigger
    summary: Read all BucketTriggers
    description: ''
    operationId: api_gateway.server.endpoints.bucket_triggers.read_all_triggers
    parameters:
      - name: bucket_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              description: A list of BucketTriggers
              type: array
              items:
                $ref: '#/components/schemas/BucketTrigger'
  post:
    tags:
      - BucketTrigger
    summary: Create a bucket
    description: ''
    operationId: api_gateway.server.endpoints.bucket_triggers.create_trigger
    parameters:
      - name: bucket_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    requestBody:
      description: The bucket object to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddTrigger'
    responses:
      201:
        description: Object created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTrigger'
      400:
        description: Object exists.
/buckets/{bucket_id}/triggers/{trigger_id}:
  get:
    tags:
      - BucketTrigger
    summary: Read a trigger
    description: ''
    operationId: api_gateway.server.endpoints.bucket_triggers.read_trigger
    parameters:
      - name: bucket_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
      - name: trigger_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketTrigger'
      404:
        description: Object does not exist.
  put:
    tags:
      - BucketTrigger
    summary: Update a BucketTrigger
    description: ''
    operationId: api_gateway.server.endpoints.bucket_triggers.update_trigger
    parameters:
      - name: bucket_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
      - name: trigger_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    requestBody:
      description: Updated fields for the BucketTrigger
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BucketTrigger'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketTrigger'
      404:
        description: Object does not exist.
  delete:
    tags:
      - BucketTrigger
    summary: Delete a BucketTrigger
    description: ''
    operationId: api_gateway.server.endpoints.bucket_triggers.delete_trigger
    parameters:
      - name: bucket_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
      - name: trigger_id
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    responses:
      204:
        description: Success
      404:
        description: Object does not exist.