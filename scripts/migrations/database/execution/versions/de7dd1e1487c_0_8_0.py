"""0.8.0

Revision ID: de7dd1e1487c
Revises: d3ad4b5a6ce0
Create Date: 2018-04-16 14:26:36.002588

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'de7dd1e1487c'
down_revision = 'd3ad4b5a6ce0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app', sa.String(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('workflow_name', sa.String(length=255), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('avg_time', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('action_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('action_name', sa.String(length=255), nullable=False),
    sa.Column('app_metric_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['app_metric_id'], ['app_metric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('action_status_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('avg_time', sa.Float(), nullable=True),
    sa.Column('action_metric_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['action_metric_id'], ['action_metric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('action', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))
        batch_op.drop_column('device_id')

    with op.batch_alter_table('argument', schema=None) as batch_op:
        batch_op.add_column(sa.Column('action_device_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))
        batch_op.create_foreign_key('action_device_id', 'action', ['action_device_id'], ['id'])

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))

    with op.batch_alter_table('condition', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))

    with op.batch_alter_table('conditional_expression', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))

    with op.batch_alter_table('playbook', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))

    with op.batch_alter_table('transform', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))

    with op.batch_alter_table('workflow', schema=None) as batch_op:
        batch_op.add_column(sa.Column('errors', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True))
        batch_op.add_column(sa.Column('is_valid', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow', schema=None) as batch_op:
        batch_op.drop_column('is_valid')
        batch_op.drop_column('errors')

    with op.batch_alter_table('transform', schema=None) as batch_op:
        batch_op.drop_column('errors')

    with op.batch_alter_table('playbook', schema=None) as batch_op:
        batch_op.drop_column('errors')

    with op.batch_alter_table('conditional_expression', schema=None) as batch_op:
        batch_op.drop_column('errors')

    with op.batch_alter_table('condition', schema=None) as batch_op:
        batch_op.drop_column('errors')

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.drop_column('errors')

    with op.batch_alter_table('argument', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('errors')
        batch_op.drop_column('action_device_id')

    with op.batch_alter_table('action', schema=None) as batch_op:
        batch_op.add_column(sa.Column('device_id', sa.INTEGER(), nullable=True))
        batch_op.drop_column('errors')

    op.drop_table('action_status_metric')
    op.drop_table('action_metric')
    op.drop_table('workflow_metric')
    op.drop_table('app_metric')
    # ### end Alembic commands ###
